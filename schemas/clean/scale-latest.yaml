openapi: 3.0.0
info:
  title: TrueNAS RESTful API
  version: v2.0
paths:
  /core/bulk:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Will loop on a list of items for the given method, returning a list
        of

        dicts containing a result and error key.


        `description` contains format string for job progress (e.g. "Deleting snapshot {0[dataset]}@{0[name]}")


        Result will be the message returned by the method being called,

        or a string of an error, in which case the error key will be the

        exception
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_bulk"
  /core/debug:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Setup middlewared for remote debugging.


        engines:
          - PTVS: Python Visual Studio
          - PYDEV: Python Dev (Eclipse/PyCharm)
          - REMOTE_PDB: Remote vanilla PDB (over TCP sockets)

        options:
          - secret: password for PTVS
          - host: required for PYDEV, hostname of local computer (developer workstation)
          - local_path: required for PYDEV, path for middlewared source in local computer (e.g. /home/user/freenas/src/middlewared/middlewared
          - threaded: run debugger in a new thread instead of event loop
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_debug"
  /core/debug_mode_enabled:
    get:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
  /core/download:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Core helper to call a job marked for download.


        Non-`buffered` downloads will allow job to write to pipe as soon as download URL is requested, job will stay

        blocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's

        pipe output will be buffered to ramfs.


        Returns the job id and the URL for download.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_download"
  /core/get_events:
    get:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns metadata for every possible event emitted from websocket server.
  /core/get_jobs:
    get:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Get the long running jobs.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /core/get_websocket_messages:
    get:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve last 1000 incoming/outgoing message(s) logged over websocket.
  /core/job_abort:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_job_abort_0"
  /core/job_update:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_job_update"
  /core/job_wait:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_job_wait_0"
  /core/ping:
    get:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Utility method which just returns "pong".
        Can be used to keep connection/authtoken alive instead of using
        "ping" protocol message.
  /core/ping_remote:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Method that will send an ICMP echo request to "hostname"
        and will wait up to "timeout" for a reply.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_ping_remote_0"
  /core/resize_shell:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Resize terminal session (/websocket/shell) to cols x rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_resize_shell"
  /core/sessions:
    get:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Get currently open websocket sessions.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /core/set_debug_mode:
    post:
      tags:
        - core
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Set `debug_mode` for middleware.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_set_debug_mode_0"
  /acme/dns/authenticator:
    get:
      tags:
        - acme.dns.authenticator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - acme.dns.authenticator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a DNS Authenticator


        Create a specific DNS Authenticator containing required authentication details for the said

        provider to successfully connect with it

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/acme_dns_authenticator_create_0"
  "/acme/dns/authenticator/id/{id}":
    delete:
      tags:
        - acme.dns.authenticator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Delete DNS Authenticator of `id`

    get:
      tags:
        - acme.dns.authenticator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - acme.dns.authenticator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Update DNS Authenticator of `id`

  /acme/dns/authenticator/authenticator_schemas:
    get:
      tags:
        - acme.dns.authenticator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Get the schemas for all DNS providers we support for ACME DNS
        Challenge and the respective attributes

        required for connecting to them while validating a DNS Challenge
  /activedirectory:
    get:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: "Update active directory configuration.

        `domainname` full DNS domain name of the Active Directory
        domain.


        `bindname` username used to perform the intial domain join.


        `bindpw` password used to perform the initial domain join. User-

        provided credentials are used to obtain a kerberos ticket, which

        is used to perform the actual domain join.


        `verbose_logging` increase logging during the domain join
        process.


        `use_default_domain` controls whether domain users and groups
        have

        the pre-windows 2000 domain name prepended to the user account.
        When

        enabled, the user appears as \"administrator\" rather than

        \"EXAMPLE\administrator\"


        `allow_trusted_doms` enable support for trusted domains. If this

        parameter is enabled, then separate idmap backends _must_ be
        configured

        for each trusted domain, and the idmap cache should be cleared.


        `allow_dns_updates` during the domain join process,
        automatically

        generate DNS entries in the AD domain for the NAS. If this is
        disabled,

        then a domain administrator must manually add appropriate DNS
        entries

        for the NAS. This parameter is recommended for TrueNAS HA
        servers.


        `disable_freenas_cache` disables active caching of AD users and
        groups.

        When disabled, only users cached in winbind's internal cache are

        visible in GUI dropdowns. Disabling active caching is
        recommended

        in environments with a large amount of users.


        `site` AD site of which the NAS is a member. This parameter is
        auto-

        detected during the domain join process. If no AD site is
        configured

        for the subnet in which the NAS is configured, then this
        parameter

        appears as 'Default-First-Site-Name'. Auto-detection is only
        performed

        during the initial domain join.


        `kerberos_realm` in which the server is located. This parameter
        is

        automatically populated during the initial domain join. If the
        NAS has

        an AD site configured and that site has multiple kerberos
        servers, then

        the kerberos realm is automatically updated with a site-specific

        configuration to use those servers. Auto-detection is only
        performed

        during initial domain join.


        `kerberos_principal` kerberos principal to use for AD-related

        operations outside of Samba. After intial domain join, this
        field is

        updated with the kerberos principal associated with the AD
        machine

        account for the NAS.


        `nss_info` controls how Winbind retrieves Name Service
        Information to

        construct a user's home directory and login shell. This
        parameter

        is only effective if the Active Directory Domain Controller
        supports

        the Microsoft Services for Unix (SFU) LDAP schema.


        `timeout` timeout value for winbind-related operations. This
        value may

        need to be increased in  environments with high latencies for

        communications with domain controllers or a large number of
        domain

        controllers. Lowering the value may cause status checks to fail.


        `dns_timeout` timeout value for DNS queries during the initial
        domain

        join. This value is also set as the NETWORK_TIMEOUT in the ldap
        config

        file.


        `createcomputer` Active Directory Organizational Unit in which
        new

        computer accounts are created.


        The OU string is read from top to bottom without RDNs. Slashes
        (\"/\")

        are used as delimiters, like `Computers/Servers/NAS`. The
        backslash

        (\"\\\") is used to escape characters but not as a separator.
        Backslashes

        are interpreted at multiple levels and might require doubling or
        even

        quadrupling to take effect.


        When this field is blank, new computer accounts are created in
        the

        Active Directory default OU.


        The Active Directory service is started after a configuration

        update if the service was initially disabled, and the updated

        configuration sets `enable` to `True`. The Active Directory

        service is stopped if `enable` is changed to `False`. If the

        configuration is updated, but the initial `enable` state is
        `True`, and

        remains unchanged, then the samba server is only restarted.


        During the domain join, a kerberos keytab for the newly-created
        AD

        machine account is generated. It is used for all future

        LDAP / AD interaction and the user-provided credentials are
        removed."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/activedirectory_update_0"
  /activedirectory/change_trust_account_pw:
    get:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Force an update of the AD machine account password. This can be used to
        refresh the Kerberos principals in the server's system keytab.
  /activedirectory/domain_info:
    post:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns the following information about the currently joined
        domain:


        `LDAP server` IP address of current LDAP server to which TrueNAS is connected.


        `LDAP server name` DNS name of LDAP server to which TrueNAS is connected


        `Realm` Kerberos realm


        `LDAP port`


        `Server time` timestamp.


        `KDC server` Kerberos KDC to which TrueNAS is connected


        `Server time offset` current time offset from DC.


        `Last machine account password change`. timestamp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/activedirectory_domain_info_0"
  /activedirectory/get_spn_list:
    get:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return list of kerberos SPN entries registered for the server's Active
        Directory computer account. This may not reflect the state of the
        server's current kerberos keytab.
  /activedirectory/get_state:
    get:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Wrapper function for 'directoryservices.get_state'. Returns only
        the state of the

        Active Directory service.
  /activedirectory/leave:
    post:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Leave Active Directory domain. This will remove computer
        object from AD and clear relevant configuration data from
        the NAS.
        This requires credentials for appropriately-privileged user.
        Credentials are used to obtain a kerberos ticket, which is
        used to perform the actual removal from the domain.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/activedirectory_leave_0"
  /activedirectory/nss_info_choices:
    get:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns list of available LDAP schema choices.
  /activedirectory/started:
    get:
      tags:
        - activedirectory
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Issue a no-effect command to our DC. This checks if our secure
        channel connection to our

        domain controller is still alive. It has much less impact than wbinfo -t.

        Default winbind request timeout is 60 seconds, and can be adjusted by the smb4.conf parameter

        'winbind request timeout ='
  /alert/dismiss:
    post:
      tags:
        - alert
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Dismiss `id` alert.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/alert_dismiss_0"
  /alert/list:
    get:
      tags:
        - alert
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: List all types of alerts including active/dismissed currently in
        the system.
  /alert/list_categories:
    get:
      tags:
        - alert
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: List all types of alerts which the system can issue.
  /alert/list_policies:
    get:
      tags:
        - alert
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: List all alert policies which indicate the frequency of the alerts.
  /alert/restore:
    post:
      tags:
        - alert
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Restore `id` alert which had been dismissed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/alert_restore_0"
  /alertclasses:
    get:
      tags:
        - alertclasses
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - alertclasses
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Update default Alert settings.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/alertclasses_update_0"
  /alertservice:
    get:
      tags:
        - alertservice
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - alertservice
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Create an Alert Service of specified `type`.

        If `enabled`, it sends alerts to the configured `type` of Alert Service.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/alertservice_create_0"
  "/alertservice/id/{id}":
    delete:
      tags:
        - alertservice
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete Alert Service of `id`.
    get:
      tags:
        - alertservice
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - alertservice
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Alert Service of `id`.
  /alertservice/list_types:
    get:
      tags:
        - alertservice
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: List all types of supported Alert services which can be configured
        with the system.
  /alertservice/test:
    post:
      tags:
        - alertservice
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Send a test alert using `type` of Alert Service.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/alertservice_test_0"
  /api_key:
    get:
      tags:
        - api_key
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - api_key
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Creates API Key.

        `name` is a user-readable name for key.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api_key_create_0"
  "/api_key/id/{id}":
    delete:
      tags:
        - api_key
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete API Key `id`.
    get:
      tags:
        - api_key
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - api_key
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Update API Key `id`.

        Specify `reset: true` to reset this API Key.
  /auth/check_password:
    post:
      tags:
        - auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Verify username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_check_password"
  /auth/check_user:
    post:
      tags:
        - auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Verify username and password (this will only validate root user's
        password and

        would return `false` for any other user)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_check_user"
  /auth/generate_token:
    post:
      tags:
        - auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Generate a token to be used for authentication.


        `ttl` stands for Time To Live, in seconds. The token will be invalidated if the connection

        has been inactive for a time greater than this.


        `attrs` is a general purpose object/dictionary to hold information about the token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_generate_token"
  /auth/sessions:
    get:
      tags:
        - auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Returns list of active auth sessions.


        Example of return value:


        [
            {
                "id": "NyhB1J5vjPjIV82yZ6caU12HLA1boDJcZNWuVQM4hQWuiyUWMGZTz2ElDp7Yk87d",
                "origin": "192.168.0.3:40392",
                "credentials": "TOKEN",
                "internal": False,
                "created_at": {"$date": 1545842426070}
            }
        ]


        `credentials` can be `UNIX_SOCKET`, `ROOT_TCP_SOCKET`, `TRUENAS_NODE`, `LOGIN_PASSWORD` or `TOKEN`,

        depending on what authentication method was used.


        If you want to exclude all internal connections from the list, call this method with following arguments:


        [
            [
                ["internal", "=", True]
            ]
        ]


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /auth/two_factor_auth:
    get:
      tags:
        - auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns true if two factor authorization is required for
        authorizing user's login.
  /auth/twofactor:
    get:
      tags:
        - auth.twofactor
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - auth.twofactor
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        `otp_digits` represents number of allowed digits in the OTP.


        `window` extends the validity to `window` many counter ticks before and after the current one.


        `interval` is time duration in seconds specifying OTP expiration time from it's creation time.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_twofactor_update_0"
  /auth/twofactor/provisioning_uri:
    get:
      tags:
        - auth.twofactor
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns the provisioning URI for the OTP. This can then be encoded
        in a QR Code and used to

        provision an OTP app like Google Authenticator.
  /auth/twofactor/renew_secret:
    get:
      tags:
        - auth.twofactor
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Generates a new secret for Two Factor Authentication. Returns
        boolean true on success.
  /auth/twofactor/verify:
    post:
      tags:
        - auth.twofactor
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns boolean true if provided `token` is successfully authenticated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_twofactor_verify_0"
  /boot/attach:
    post:
      tags:
        - boot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Attach a disk to the boot pool, turning a stripe into a mirror.

        `expand` option will determine whether the new disk partition will be
                 the maximum available or the same size as the current disk.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boot_attach"
  /boot/detach:
    post:
      tags:
        - boot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Detach given `dev` from boot pool.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boot_detach_0"
  /boot/get_disks:
    get:
      tags:
        - boot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns disks of the boot pool.
  /boot/get_scrub_interval:
    get:
      tags:
        - boot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get Automatic Scrub Interval value in days.
  /boot/get_state:
    get:
      tags:
        - boot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns the current state of the boot pool, including all vdevs,
        properties and datasets.
  /boot/replace:
    post:
      tags:
        - boot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Replace device `label` on boot pool with `dev`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boot_replace"
  /boot/scrub:
    get:
      tags:
        - boot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Scrub on boot pool.
  /boot/set_scrub_interval:
    post:
      tags:
        - boot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Set Automatic Scrub Interval value in days.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/boot_set_scrub_interval_0"
  /bootenv:
    get:
      tags:
        - bootenv
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query all Boot Environments with `query-filters` and
        `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - bootenv
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a new boot environment using `name`.


        If a new boot environment is desired which is a clone of another boot environment, `source` can be passed.

        Then, a new boot environment of `name` is created using boot environment `source` by cloning it.


        Ensure that `name` and `source` are valid boot environment names.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bootenv_create_0"
  "/bootenv/id/{id}":
    delete:
      tags:
        - bootenv
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: Delete `id` boot environment. This removes the clone from the system.
    get:
      tags:
        - bootenv
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Query all Boot Environments with `query-filters` and
        `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - bootenv
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: Update `id` boot environment name with a new provided valid `name`.
  "/bootenv/id/{id}/activate":
    post:
      tags:
        - bootenv
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: Activates boot environment `id`.
  "/bootenv/id/{id}/set_attribute":
    post:
      tags:
        - bootenv
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: |-
        Sets attributes boot environment `id`.

        Currently only `keep` attribute is allowed.
  /catalog:
    get:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: "`catalog_create.preferred_trains` specifies trains which will be
        displayed in the UI directly for a user."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/catalog_create_0"
  "/catalog/id/{id}":
    delete:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: ""
    get:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: ""
  /catalog/get_item_details:
    post:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve information of `item_name` `item_version_details.catalog`
        catalog item.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/catalog_get_item_details"
  /catalog/items:
    post:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Retrieve item details for `label` catalog.


        `options.cache` is a boolean which when set will try to get items details for `label` catalog from cache

        if available.


        `options.cache_only` is a boolean which when set will force usage of cache only for retrieving catalog

        information. If the content for the catalog in question is not cached, no content would be returned. If

        `options.cache` is unset, this attribute has no effect.


        `options.retrieve_all_trains` is a boolean value which when set will retrieve information for all the trains

        present in the catalog ( it is set by default ).


        `options.trains` is a list of train name(s) which will allow selective filtering to retrieve only information

        of desired trains in a catalog. If `options.retrieve_all_trains` is set, it has precedence over `options.train`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/catalog_items"
  /catalog/sync:
    post:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Sync `label` catalog to retrieve latest changes from upstream.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/catalog_sync_0"
  /catalog/sync_all:
    get:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Refresh all available catalogs from upstream.
  /catalog/validate:
    post:
      tags:
        - catalog
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Validates `label` catalog format which includes validating trains
        and applications with their versions.


        This does not test if an app version is valid in terms of kubernetes resources but instead ensures it has

        the correct format and files necessary for TrueNAS to use it.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/catalog_validate_0"
  /certificate:
    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a new Certificate


        Certificates are classified under following types and the necessary keywords to be passed

        for `create_type` attribute to create the respective type of certificate


        1) Internal Certificate                 -  CERTIFICATE_CREATE_INTERNAL


        2) Imported Certificate                 -  CERTIFICATE_CREATE_IMPORTED


        3) Certificate Signing Request          -  CERTIFICATE_CREATE_CSR


        4) Imported Certificate Signing Request -  CERTIFICATE_CREATE_IMPORTED_CSR


        5) ACME Certificate                     -  CERTIFICATE_CREATE_ACME


        By default, created certs use RSA keys. If an Elliptic Curve Key is desired, it can be specified with the

        `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic Curve Key, then default to

        using "BrainpoolP384R1" curve.


        A type is selected by the Certificate Service based on `create_type`. The rest of the values in `data` are

        validated accordingly and finally a certificate is made based on the selected type.


        `cert_extensions` can be specified to set X509v3 extensions.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/certificate_create_0"
  "/certificate/id/{id}":
    delete:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Delete certificate of `id`.


        If the certificate is an ACME based certificate, certificate service will try to

        revoke the certificate by updating it's status with the ACME server, if it fails an exception is raised

        and the certificate is not deleted from the system. However, if `force` is set to True, certificate is deleted

        from the system even if some error occurred while revoking the certificate with the ACME Server

    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Update certificate of `id`


        Only name and revoked attribute can be updated.


        When `revoked` is enabled, the specified cert `id` is revoked and if it belongs to a CA chain which

        exists on this system, its serial number is added to the CA's certificate revocation list.

  /certificate/acme_server_choices:
    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Dictionary of popular ACME Servers with their directory URI
        endpoints which we display automatically

        in UI
  /certificate/certificate_signing_requests_profiles:
    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns a dictionary of predefined options for specific use cases
        i.e openvpn client/server

        configurations which can be used for creating certificate signing requests.
  /certificate/country_choices:
    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns country choices for creating a certificate/csr.
  /certificate/ec_curve_choices:
    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Dictionary of supported EC curves.
  /certificate/extended_key_usage_choices:
    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Dictionary of choices for `ExtendedKeyUsage` extension which can be
        passed over to `usages` attribute.
  /certificate/key_type_choices:
    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Dictionary of supported key types for certificates.
  /certificate/profiles:
    get:
      tags:
        - certificate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns a dictionary of predefined options for specific use cases
        i.e openvpn client/server

        configurations which can be used for creating certificates.
  /certificateauthority:
    get:
      tags:
        - certificateauthority
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - certificateauthority
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a new Certificate Authority


        Certificate Authorities are classified under following types with the necessary keywords to be passed

        for `create_type` attribute to create the respective type of certificate authority


        1) Internal Certificate Authority       -  CA_CREATE_INTERNAL


        2) Imported Certificate Authority       -  CA_CREATE_IMPORTED


        3) Intermediate Certificate Authority   -  CA_CREATE_INTERMEDIATE


        Created certificate authorities use RSA keys by default. If an Elliptic Curve Key is desired, then it can be

        specified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic

        Curve Key, default to using "BrainpoolP384R1" curve.


        A type is selected by the Certificate Authority Service based on `create_type`. The rest of the values

        are validated accordingly and finally a certificate is made based on the selected type.


        `cert_extensions` can be specified to set X509v3 extensions.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/certificateauthority_create_0"
  "/certificateauthority/id/{id}":
    delete:
      tags:
        - certificateauthority
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Delete a Certificate Authority of `id`

    get:
      tags:
        - certificateauthority
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - certificateauthority
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Update Certificate Authority of `id`


        Only `name` and `revoked` attribute can be updated.


        If `revoked` is enabled, the CA and its complete chain is marked as revoked and added to the CA's

        certificate revocation list.

  /certificateauthority/ca_sign_csr:
    post:
      tags:
        - certificateauthority
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Sign CSR by Certificate Authority of `ca_id`


        Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing

        a CSR of `csr_cert_id` which exists in the system


        `cert_extensions` can be specified if specific extensions are to be set in the newly signed certificate.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/certificateauthority_ca_sign_csr_0"
  /certificateauthority/profiles:
    get:
      tags:
        - certificateauthority
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns a dictionary of predefined options for specific use cases
        i.e OpenVPN certificate authority

        configurations which can be used for creating certificate authorities.
  /chart/release:
    get:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query available chart releases.


        `query-options.extra.retrieve_resources` is a boolean when set will retrieve existing kubernetes resources

        in the chart namespace.


        `query-options.extra.history` is a boolean when set will retrieve all chart version upgrades

        for a chart release.


        `query-options.extra.include_chart_schema` is a boolean when set will retrieve the schema being used by

        the chart release in question.


        `query-options.extra.resource_events` is a boolean when set will retrieve individual events of each resource.

        This only has effect if `query-options.extra.retrieve_resources` is set.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a chart release for a catalog item.


        `release_name` is the name which will be used to identify the created chart release.


        `catalog` is a valid catalog id where system will look for catalog `item` details.


        `train` is which train to look for under `catalog` i.e stable / testing etc.


        `version` specifies the catalog `item` version.


        `values` is configuration specified for the catalog item version in question which will be used to

        create the chart release.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_create_0"
  "/chart/release/id/{id}":
    delete:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Delete existing chart release.


        This will delete the chart release from the kubernetes cluster and also remove any associated volumes / data.

        To clarify, host path volumes will not be deleted which live outside the chart release dataset.
    get:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Query available chart releases.


        `query-options.extra.retrieve_resources` is a boolean when set will retrieve existing kubernetes resources

        in the chart namespace.


        `query-options.extra.history` is a boolean when set will retrieve all chart version upgrades

        for a chart release.


        `query-options.extra.include_chart_schema` is a boolean when set will retrieve the schema being used by

        the chart release in question.


        `query-options.extra.resource_events` is a boolean when set will retrieve individual events of each resource.

        This only has effect if `query-options.extra.retrieve_resources` is set.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Update an existing chart release.


        `values` is configuration specified for the catalog item version in question which will be used to

        create the chart release.
  /chart/release/certificate_authority_choices:
    get:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns certificate authorities which can be used by applications.
  /chart/release/certificate_choices:
    get:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns certificates which can be used by applications.
  /chart/release/events:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns kubernetes events for `release_name` Chart Release.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_events_0"
  /chart/release/nic_choices:
    get:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Available choices for NIC which can be added to a pod in a chart release.
  /chart/release/pod_console_choices:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns choices for console access to a chart release.


        Output is a dictionary with names of pods as keys and containing names of containers which the pod

        comprises of.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_pod_console_choices_0"
  /chart/release/pod_logs:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Export logs of `options.container_name` container in
        `options.pod_name` pod in `release_name` chart release.


        `options.tail_lines` is an option to select how many lines of logs to retrieve for the said container. It

        defaults to 500. If set to `null`, it will retrieve complete logs of the container.


        `options.limit_bytes` is an option to select how many bytes to retrieve from the tail lines selected. If set

        to null ( which is the default ), it will not limit the bytes returned. To clarify, `options.tail_lines`

        is applied first and the required number of lines are retrieved and then `options.limit_bytes` is applied.


        Please refer to websocket documentation for downloading the file.


        A file will be downloaded from this endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_pod_logs"
  /chart/release/pod_logs_choices:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns choices for accessing logs of any container in any pod in a
        chart release.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_pod_logs_choices_0"
  /chart/release/pod_status:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve available/desired pods status for a chart release and it's
        current state.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_pod_status_0"
  /chart/release/pull_container_images:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update container images being used by `release_name` chart release.


        `redeploy` when set will redeploy pods which will result in chart release using newer updated versions of

        the container images.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_pull_container_images"
  /chart/release/redeploy:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Redeploy will initiate a new rollout of the Helm chart according to
        upgrade strategy defined by the chart release

        workloads. A good example for redeploying is updating kubernetes pods with an updated container image.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_redeploy_0"
  /chart/release/remove_ix_volume:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Remove `volume_name` ix_volume from `release_name` chart release.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_remove_ix_volume"
  /chart/release/rollback:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Rollback a chart release to a previous chart version.


        `item_version` is version which we want to rollback a chart release to.


        `rollback_snapshot` is a boolean value which when set will rollback snapshots of any PVC's or ix volumes being

        consumed by the chart release.


        `force_rollback` is a boolean which when set will force rollback operation to move forward even if no

        snapshots are found. This is only useful when `rollback_snapshot` is set.


        `recreate_resources` is a boolean which will delete and then create the kubernetes resources on rollback

        of chart release. This should be used with caution as if chart release is consuming immutable objects like

        a PVC, the rollback operation can't be performed and will fail as helm tries to do a 3 way patch for rollback.


        Rollback is functional for the actual configuration of the release at the `item_version` specified and

        any associated `ix_volumes` with any PVC's which were consuming chart release storage class.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_rollback"
  /chart/release/scale:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Scale a `release_name` chart release to
        `scale_options.replica_count` specified.


        This will scale deployments/statefulset to replica count specified.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_scale"
  /chart/release/scale_workloads:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Scale workloads in a chart release to specified `replica_count`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_scale_workloads"
  /chart/release/scaleable_resources:
    get:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns choices for types of workloads which can be scaled up/down.
  /chart/release/upgrade:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Upgrade `release_name` chart release.


        `upgrade_options.item_version` specifies to which item version chart release should be upgraded to.


        System will update container images being used by `release_name` chart release as a chart release

        upgrade is not considered complete until the images in use have also been updated to latest versions.


        During upgrade, `upgrade_options.values` can be specified to apply configuration changes for configuration

        changes for the chart release in question.


        When chart version is upgraded, system will automatically take a snapshot of `ix_volumes` in question

        which can be used to rollback later on.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_upgrade"
  /chart/release/upgrade_summary:
    post:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Retrieve upgrade summary for `release_name` which will include
        which container images will be updated

        and changelog for `options.item_version` chart version specified if applicable. If only container images

        need to be updated, changelog will be `null`.


        If chart release `release_name` does not require an upgrade, an error will be raised.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chart_release_upgrade_summary"
  /chart/release/used_ports:
    get:
      tags:
        - chart.release
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns ports in use by applications.
  /cloudsync:
    get:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query all Cloud Sync Tasks with `query-filters` and
        `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Creates a new cloud_sync entry.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cloudsync_create_0"
  "/cloudsync/id/{id}":
    delete:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Deletes cloud_sync entry `id`.
    get:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Query all Cloud Sync Tasks with `query-filters` and
        `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Updates the cloud_sync entry `id` with `data`.
  "/cloudsync/id/{id}/abort":
    post:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Aborts cloud sync task.
  /cloudsync/list_buckets:
    post:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cloudsync_list_buckets_0"
  /cloudsync/list_directory:
    post:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        List contents of a remote bucket / directory.


        If remote supports buckets, path is constructed by two keys "bucket"/"folder" in `attributes`.

        If remote does not support buckets, path is constructed using "folder" key only in `attributes`.

        "folder" is directory name and "bucket" is bucket name for remote.


        Path examples:


        S3 Service

        `bucketname/directory/name`


        Dropbox Service

        `directory/name`


        `credentials` is a valid id of a Cloud Sync Credential which will be used to connect to the provider.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cloudsync_list_directory_0"
  /cloudsync/onedrive_list_drives:
    post:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Lists all available drives and their types for given Microsoft
        OneDrive credentials.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cloudsync_onedrive_list_drives_0"
  /cloudsync/providers:
    get:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns a list of dictionaries of supported providers for Cloud
        Sync Tasks.


        `credentials_schema` is JSON schema for credentials attributes.


        `task_schema` is JSON schema for task attributes.


        `buckets` is a boolean value which is set to "true" if provider supports buckets.


        Example of a single provider:


        [
            {
                "name": "AMAZON_CLOUD_DRIVE",
                "title": "Amazon Cloud Drive",
                "credentials_schema": [
                    {
                        "property": "client_id",
                        "schema": {
                            "title": "Amazon Application Client ID",
                            "_required_": true,
                            "type": "string"
                        }
                    },
                    {
                        "property": "client_secret",
                        "schema": {
                            "title": "Application Key",
                            "_required_": true,
                            "type": "string"
                        }
                    }
                ],
                "credentials_oauth": null,
                "buckets": false,
                "bucket_title": "Bucket",
                "task_schema": []
            }
        ]
  "/cloudsync/id/{id}/restore":
    post:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Create the opposite of cloud sync task `id` (PULL if it was PUSH
        and vice versa).
  "/cloudsync/id/{id}/sync":
    post:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Run the cloud_sync job `id`, syncing the local data to remote.
  /cloudsync/sync_onetime:
    post:
      tags:
        - cloudsync
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Run cloud sync task without creating it.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cloudsync_sync_onetime"
  /cloudsync/credentials:
    get:
      tags:
        - cloudsync.credentials
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - cloudsync.credentials
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create Cloud Sync Credentials.


        `attributes` is a dictionary of valid values which will be used to authorize with the `provider`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cloudsync_credentials_create_0"
  "/cloudsync/credentials/id/{id}":
    delete:
      tags:
        - cloudsync.credentials
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete Cloud Sync Credentials of `id`.
    get:
      tags:
        - cloudsync.credentials
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - cloudsync.credentials
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Cloud Sync Credentials of `id`.
  /cloudsync/credentials/verify:
    post:
      tags:
        - cloudsync.credentials
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Verify if `attributes` provided for `provider` are authorized by
        the `provider`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cloudsync_credentials_verify_0"
  /config/reset:
    post:
      tags:
        - config
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Reset database to configuration defaults.


        If `reboot` is true this job will reboot the system after its completed with a delay of 10

        seconds.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/config_reset_0"
  /config/save:
    post:
      tags:
        - config
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a bundle of security-sensitive information. These options
        select which information

        is included in the bundle:


        `secretseed`: include password secret seed.


        `pool_keys`: include GELI encryption keys.


        `root_authorized_keys`: include "authorized_keys" file for the root user.


        If none of these options are set, the bundle is not generated and the database file is provided.


        A file will be downloaded from this endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/config_save_0"
  /config/upload:
    post:
      tags:
        - config
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Accepts a configuration file via job pipe.


        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
  /container:
    get:
      tags:
        - container
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - container
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        When `enable_image_updates` is set, system will check if existing
        container images need to be updated. System

        will basically check if we have an updated image hash available for the same tag available and if we do,

        user is alerted to update the image.

        A use case for unsetting this variable can be rate limits for docker registries, as each time we check if a

        single image needs update, we consume the rate limit and eventually it can hinder operations if the number

        of images to be checked is a lot.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/container_update_0"
  /container/prune:
    post:
      tags:
        - container
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Prune unused images/containers. This will by default remove any
        dangling images.


        `prune_options.remove_unused_images` when set will remove any docker image which is not being used by any

        container.


        `prune_options.remove_stopped_containers` when set will remove any containers which are stopped.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/container_prune_0"
  /container/image:
    get:
      tags:
        - container.image
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Retrieve container images present in the system.


        `query-options.extra.parse_tags` is a boolean which when set will have normalized tags to be retrieved

        for container images.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  "/container/image/id/{id}":
    delete:
      tags:
        - container.image
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: "`options.force` should be used to force delete an image even if
        it's in use by a stopped container."
    get:
      tags:
        - container.image
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Retrieve container images present in the system.


        `query-options.extra.parse_tags` is a boolean which when set will have normalized tags to be retrieved

        for container images.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /container/image/pull:
    post:
      tags:
        - container.image
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        `from_image` is the name of the image to pull. Format for the name
        is "registry/repo/image" where

        registry may be omitted and it will default to docker registry in this case.


        `tag` specifies tag of the image and defaults to `null`. In case of `null` it will retrieve all the tags

        of the image.


        `docker_authentication` should be specified if image to be retrieved is under a private repository.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/container_image_pull_0"
  /cronjob:
    get:
      tags:
        - cronjob
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - cronjob
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a new cron job.


        `stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress

        standard error / standard output respectively.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cronjob_create_0"
  "/cronjob/id/{id}":
    delete:
      tags:
        - cronjob
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete cronjob of `id`.
    get:
      tags:
        - cronjob
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - cronjob
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update cronjob of `id`.
  /cronjob/run:
    post:
      tags:
        - cronjob
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Job to run cronjob task of `id`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cronjob_run"
  /ctdb/general/healthy:
    get:
      tags:
        - ctdb.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a boolean if the ctdb cluster is healthy.
  /ctdb/general/ips:
    post:
      tags:
        - ctdb.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return a list of public ip addresses in the ctdb cluster.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ctdb_general_ips_0"
  /ctdb/general/listnodes:
    get:
      tags:
        - ctdb.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return a list of nodes in the ctdb cluster.
  /ctdb/general/pnn:
    get:
      tags:
        - ctdb.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return node number for this node. This value should be static for
        life of cluster.
  /ctdb/general/status:
    post:
      tags:
        - ctdb.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        List the status of nodes in the ctdb cluster.

        `all_nodes`: Boolean if True, return status
            for all nodes in the cluster else return
            status of this node.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ctdb_general_status_0"
  /ctdb/private/ips:
    get:
      tags:
        - ctdb.private.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - ctdb.private.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Add a ctdb private address to the cluster

        `ip` string representing an IP v4/v6 address
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ctdb_private_ips_create_0"
  "/ctdb/private/ips/id/{id}":
    get:
      tags:
        - ctdb.private.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - ctdb.private.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Update Private IP address from the ctdb cluster with pnn value of `id`.

        `id` integer representing the PNN value for the node.
        `enable` boolean. When True, enable the node else disable the node.
  /ctdb/public/ips:
    get:
      tags:
        - ctdb.public.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Retrieve information about configured public IP addresses for the

        ctdb cluster. This call raise a CallError with errno set to ENXIO

        if this node is not in a state where it can provide accurate

        information about cluster. Examples problematic states are:


        - ctdb or glusterd are not running on this node


        - ctdb shared volume is not mounted


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - ctdb.public.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Add a ctdb public address to the cluster


        `pnn` node number of record to adjust

        `ip` string representing an IP v4/v6 address

        `netmask` integer representing a cidr notated netmask (i.e. 16/24/48/64 etc)

        `interface` string representing a network interface to apply the `ip`
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ctdb_public_ips_create_0"
  "/ctdb/public/ips/id/{id}":
    get:
      tags:
        - ctdb.public.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Retrieve information about configured public IP addresses for the

        ctdb cluster. This call raise a CallError with errno set to ENXIO

        if this node is not in a state where it can provide accurate

        information about cluster. Examples problematic states are:


        - ctdb or glusterd are not running on this node


        - ctdb shared volume is not mounted


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - ctdb.public.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Update Public IP address in the ctdb cluster.
        `pnn` - cluster node number
        `ip` string representing the public ip address
        `enable` boolean. When True, enable the node else disable the node.
  /ctdb/public/ips/interface_choices:
    post:
      tags:
        - ctdb.public.ips
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve list of available interface choices that can be used for
        assigning a ctdbd public ip.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ctdb_public_ips_interface_choices_0"
  /device/get_info:
    post:
      tags:
        - device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get info for SERIAL/DISK/GPU device types.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device_get_info_0"
  /device/gpu_pci_ids_choices:
    get:
      tags:
        - device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve choices for GPU PCI ids located in the system.
  /directoryservices/cache_refresh:
    get:
      tags:
        - directoryservices
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        This method refreshes the directory services cache for users and
        groups that is

        used as a backing for `user.query` and `group.query` methods. The first cache fill in

        an Active Directory domain may take a significant amount of time to complete and

        so it is performed as within a job. The most likely situation in which a user may

        desire to refresh the directory services cache is after new users or groups  to a remote

        directory server with the intention to have said users or groups appear in the

        results of the aforementioned account-related methods.


        A cache refresh is not required in order to use newly-added users and groups for in

        permissions and ACL related methods. Likewise, a cache refresh will not resolve issues

        with users being unable to authenticate to shares.
  /directoryservices/get_state:
    get:
      tags:
        - directoryservices
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        `DISABLED` Directory Service is disabled.


        `FAULTED` Directory Service is enabled, but not HEALTHY. Review logs and generated alert

        messages to debug the issue causing the service to be in a FAULTED state.


        `LEAVING` Directory Service is in process of stopping.


        `JOINING` Directory Service is in process of starting.


        `HEALTHY` Directory Service is enabled, and last status check has passed.
  /disk:
    get:
      tags:
        - disk
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query disks.


        The following extra options are supported:

             include_expired: true - will also include expired disks (default: false)
             passwords: true - will not hide KMIP password for the disks (default: false)
             pools: true - will join pool name for each disk (default: false)

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  "/disk/id/{id}":
    get:
      tags:
        - disk
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Query disks.


        The following extra options are supported:

             include_expired: true - will also include expired disks (default: false)
             passwords: true - will not hide KMIP password for the disks (default: false)
             pools: true - will join pool name for each disk (default: false)

        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - disk
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Update disk of `id`.


        If extra options need to be passed to SMART which we don't already support, they can be passed by

        `smartoptions`.


        `critical`, `informational` and `difference` are integer values on which alerts for SMART are configured

        if the disk temperature crosses the assigned threshold for each respective attribute.

        If they are set to null, then SMARTD config values are used as defaults.


        Email of log level LOG_CRIT is issued when disk temperature crosses `critical`.


        Email of log level LOG_INFO is issued when disk temperature crosses `informational`.


        If temperature of a disk changes by `difference` degree Celsius since the last report, SMART reports this.
  /disk/get_unused:
    post:
      tags:
        - disk
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Helper method to get all disks that are not in use, either by the boot
        pool or the user pools.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disk_get_unused_0"
  /disk/smart_attributes:
    post:
      tags:
        - disk
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns S.M.A.R.T. attributes values for specified disk name.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disk_smart_attributes_0"
  /disk/temperature:
    post:
      tags:
        - disk
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns temperature for device `name` using specified S.M.A.R.T.
        `powermode`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disk_temperature"
  /disk/temperatures:
    post:
      tags:
        - disk
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Returns temperatures for a list of devices (runs in parallel).
        See `disk.temperature` documentation for more details.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disk_temperatures"
  /disk/wipe:
    post:
      tags:
        - disk
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Performs a wipe of a disk `dev`.
        It can be of the following modes:
          - QUICK: clean the first and last 32 megabytes on `dev`
          - FULL: write whole disk with zero's
          - FULL_RANDOM: write whole disk with random bytes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disk_wipe"
  /dns/query:
    get:
      tags:
        - dns
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query Name Servers with `query-filters` and `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /dyndns:
    get:
      tags:
        - dyndns
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - dyndns
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update dynamic dns service configuration.


        `period` indicates how often the IP is checked in seconds.


        `ssl` if set to true, makes sure that HTTPS is used for the connection to the server which updates the

        DNS record.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/dyndns_update_0"
  /dyndns/provider_choices:
    get:
      tags:
        - dyndns
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: List supported Dynamic DNS Service Providers.
  /enclosure:
    get:
      tags:
        - enclosure
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
  "/enclosure/id/{id}":
    get:
      tags:
        - enclosure
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - enclosure
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: ""
  /enclosure/set_slot_status:
    post:
      tags:
        - enclosure
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/enclosure_set_slot_status"
  /failover:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update failover state.


        `disabled` When true indicates that HA will be disabled.

        `master`  Marks the particular node in the chassis as the master node.
                    The standby node will have the opposite value.

        `timeout` is the time to WAIT until a failover occurs when a network
            event occurs on an interface that is marked critical for failover AND
            HA is enabled and working appropriately.

            The default time to wait is 2 seconds.
            **NOTE**
                This setting does NOT effect the `disabled` or `master` parameters.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/failover_update_0"
  /failover/become_passive:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Restart the keepavlived service which will cause any VIP addresses
        on this controller to be migrated to the other controller. This will
        cause a failover event if run on the master controller. If this is
        run on the passive controller it will do 1 of 2 things:

        1: if there are no VIP(s) on the passive controller, then this will
            do nothing.
        2: if there are VIP(s) on the passive controller, then the VIP(s)
            will be migrated to the active controller. A failover event
            will be triggered but it will do nothing since the active will
            already have the zpool(s) imported.
  /failover/call_remote:
    post:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Call a method in the other node.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/failover_call_remote"
  /failover/control:
    post:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/failover_control"
  /failover/force_master:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Force this controller to become MASTER, if it's not already.
  /failover/hardware:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Returns the hardware type for an HA system.
          ECHOSTREAM
          ECHOWARP
          PUMA
          BHYVE
          MANUAL
  /failover/in_progress:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns True if there is an ongoing failover event.
  /failover/licensed:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Checks whether this instance is licensed as a HA unit.
  /failover/node:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Returns the slot position in the chassis that
        the controller is located.
          A - First node
          B - Seconde Node
          MANUAL - slot position in chassis could not be determined
  /failover/status:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Get the current HA status.

        Returns:
            MASTER
            BACKUP
            ELECTING
            IMPORTING
            ERROR
            SINGLE
  /failover/sync_from_peer:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Sync database and files from the other controller.
  /failover/sync_to_peer:
    post:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Sync database and files to the other controller.

        `reboot` as true will reboot the other controller after syncing.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/failover_sync_to_peer_0"
  /failover/unlock:
    post:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Unlock datasets in HA, syncing passphrase between controllers and
        forcing this controller

        to be MASTER importing the pools.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/failover_unlock_0"
  /failover/upgrade:
    post:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Upgrades both controllers.


        Files will be downloaded to the Active Controller and then transferred to the Standby

        Controller.


        Upgrade process will start concurrently on both nodes.


        Once both upgrades are applied, the Standby Controller will reboot. This job will wait for

        that job to complete before finalizing.


        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/failover_upgrade_0"
  /failover/upgrade_finish:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Perform the last stage of an HA upgrade.

        This will activate the new boot environment on the
        Standby Controller and reboot it.
  /failover/upgrade_pending:
    get:
      tags:
        - failover
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Verify if HA upgrade is pending.

        `upgrade_finish` needs to be called to finish
        the HA upgrade process if this method returns true.
  /filesystem/acl_is_trivial:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns True if the ACL can be fully expressed as a file mode
        without losing

        any access rules.


        Paths on clustered volumes may be specifed with the path prefix

        `CLUSTER:<volume name>`. For example, to list directories

        in the directory 'data' in the clustered volume `smb01`, the

        path should be specified as `CLUSTER:smb01/data`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_acl_is_trivial_0"
  /filesystem/can_access_as_user:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Check if `username` is able to access `path` with specific
        `permissions`. At least one of `read/write/execute`

        permission must be specified for checking with each of these defaulting to `null`. `null` for

        `read/write/execute` represents that the permission should not be checked.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_can_access_as_user"
  /filesystem/chown:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Change owner or group of file at `path`.

        `uid` and `gid` specify new owner of the file. If either
        key is absent or None, then existing value on the file is not
        changed.

        `recursive` performs action recursively, but does
        not traverse filesystem mount points.

        If `traverse` and `recursive` are specified, then the chown
        operation will traverse filesystem mount points.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_chown_0"
  /filesystem/default_acl_choices:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        `DEPRECATED`
        Returns list of names of ACL templates. Wrapper around
        filesystem.acltemplate.query.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_default_acl_choices_0"
  /filesystem/get:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Job to get contents of `path`.

        A file will be downloaded from this endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_get_0"
  /filesystem/get_default_acl:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        `DEPRECATED`

        Returns a default ACL depending on the usage specified by `acl_type`.

        If an admin group is defined, then an entry granting it full control will

        be placed at the top of the ACL. Optionally may pass `share_type` to argument

        to get share-specific template ACL.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_get_default_acl"
  /filesystem/get_dosmode:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_get_dosmode_0"
  /filesystem/getacl:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Return ACL of a given path. This may return a POSIX1e ACL or a
        NFSv4 ACL. The acl type is indicated

        by the `acltype` key.


        `simplified` - effect of this depends on ACL type on underlying filesystem. In the case of

        NFSv4 ACLs simplified permissions and flags are returned for ACL entries where applicable.

        NFSv4 errata below. In the case of POSIX1E ACls, this setting has no impact on returned ACL.


        `resolve_ids` - adds additional `who` key to each ACL entry, that converts the numeric id to

        a user name or group name. In the case of owner@ and group@ (NFSv4) or USER_OBJ and GROUP_OBJ

        (POSIX1E), st_uid or st_gid will be converted from stat() return for file. In the case of

        MASK (POSIX1E), OTHER (POSIX1E), everyone@ (NFSv4), key `who` will be included, but set to null.

        In case of failure to resolve the id to a name, `who` will be set to null. This option should

        only be used if resolving ids to names is required.


        Errata about ACLType NFSv4:


        `simplified` returns a shortened form of the ACL permset and flags where applicable. If permissions

        have been simplified, then the `perms` object will contain only a single `BASIC` key with a string

        describing the underlying permissions set.


        `TRAVERSE` sufficient rights to traverse a directory, but not read contents.


        `READ` sufficient rights to traverse a directory, and read file contents.


        `MODIFIY` sufficient rights to traverse, read, write, and modify a file.


        `FULL_CONTROL` all permissions.


        If the permisssions do not fit within one of the pre-defined simplified permissions types, then

        the full ACL entry will be returned.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_getacl"
  /filesystem/is_immutable:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieves boolean which is set when immutable flag is set on `path`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_is_immutable_0"
  /filesystem/listdir:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Get the contents of a directory.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.

        Each entry of the list consists of:
          name(str): name of the file
          path(str): absolute path of the entry
          realpath(str): absolute real path of the entry (if SYMLINK)
          type(str): DIRECTORY | FILE | SYMLINK | OTHER
          size(int): size of the entry
          mode(int): file mode/permission
          uid(int): user id of entry owner
          gid(int): group id of entry onwer
          acl(bool): extended ACL is present on file
          is_mountpoint(bool): path is a mountpoint
          is_ctldir(bool): path is within special .zfs directory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_listdir"
  /filesystem/mkdir:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Create a directory at the specified path.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_mkdir_0"
  /filesystem/put:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Job to put contents to `path`.


        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_put"
  /filesystem/set_dosmode:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_set_dosmode_0"
  /filesystem/set_immutable:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Set/Unset immutable flag at `path`.


        `set_flag` when set will set immutable flag and when unset will unset immutable flag at `path`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_set_immutable"
  /filesystem/setacl:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Set ACL of a given path. Takes the following parameters:

        `path` full path to directory or file.


        Paths on clustered volumes may be specifed with the path prefix

        `CLUSTER:<volume name>`. For example, to list directories

        in the directory 'data' in the clustered volume `smb01`, the

        path should be specified as `CLUSTER:smb01/data`.


        `dacl` ACL entries. Formatting depends on the underlying `acltype`. NFS4ACL requires

        NFSv4 entries. POSIX1e requires POSIX1e entries.


        `uid` the desired UID of the file user. If set to None (the default), then user is not changed.


        `gid` the desired GID of the file group. If set to None (the default), then group is not changed.


        `recursive` apply the ACL recursively


        `traverse` traverse filestem boundaries (ZFS datasets)


        `strip` convert ACL to trivial. ACL is trivial if it can be expressed as a file mode without

        losing any access rules.


        `canonicalize` reorder ACL entries so that they are in concanical form as described

        in the Microsoft documentation MS-DTYP 2.4.5 (ACL). This only applies to NFSv4 ACLs.


        For case of NFSv4 ACLs  USER_OBJ, GROUP_OBJ, and EVERYONE with owner@, group@, everyone@ for

        consistency with getfacl and setfacl. If one of aforementioned special tags is used, 'id' must

        be set to None.


        An inheriting empty everyone@ ACE is appended to non-trivial ACLs in order to enforce Windows

        expectations regarding permissions inheritance. This entry is removed from NT ACL returned

        to SMB clients when 'ixnas' samba VFS module is enabled.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_setacl_0"
  /filesystem/setperm:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Set unix permissions on given `path`.


        Paths on clustered volumes may be specifed with the path prefix

        `CLUSTER:<volume name>`. For example, to list directories

        in the directory 'data' in the clustered volume `smb01`, the

        path should be specified as `CLUSTER:smb01/data`.


        If `mode` is specified then the mode will be applied to the

        path and files and subdirectories depending on which `options` are

        selected. Mode should be formatted as string representation of octal

        permissions bits.


        `uid` the desired UID of the file user. If set to None (the default), then user is not changed.


        `gid` the desired GID of the file group. If set to None (the default), then group is not changed.


        `stripacl` setperm will fail if an extended ACL is present on `path`,

        unless `stripacl` is set to True.


        `recursive` remove ACLs recursively, but do not traverse dataset

        boundaries.


        `traverse` remove ACLs from child datasets.


        If no `mode` is set, and `stripacl` is True, then non-trivial ACLs

        will be converted to trivial ACLs. An ACL is trivial if it can be

        expressed as a file mode without losing any access rules.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_setperm_0"
  /filesystem/stat:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return the filesystem stat(2) for a given `path`.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_stat_0"
  /filesystem/statfs:
    post:
      tags:
        - filesystem
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return stats from the filesystem of a given path.

        Paths on clustered volumes may be specifed with the path prefix
        `CLUSTER:<volume name>`. For example, to list directories
        in the directory 'data' in the clustered volume `smb01`, the
        path should be specified as `CLUSTER:smb01/data`.

        Raises:
            CallError(ENOENT) - Path not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_statfs_0"
  /filesystem/acltemplate:
    get:
      tags:
        - filesystem.acltemplate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - filesystem.acltemplate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Create a new filesystem ACL template.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_acltemplate_create_0"
  "/filesystem/acltemplate/id/{id}":
    delete:
      tags:
        - filesystem.acltemplate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: ""
    get:
      tags:
        - filesystem.acltemplate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - filesystem.acltemplate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: update filesystem ACL template with `id`.
  /filesystem/acltemplate/by_path:
    post:
      tags:
        - filesystem.acltemplate
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Retrieve list of available ACL templates for a given `path`.


        Supports `query-filters` and `query-options`.

        `format-options` gives additional options to alter the results of

        the template query:


        `canonicalize` - place ACL entries for NFSv4 ACLs in Microsoft canonical order.

        `ensure_builtins` - ensure all results contain entries for `builtin_users` and `builtin_administrators`

        groups.

        `resolve_names` - convert ids in ACL entries into names.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filesystem_acltemplate_by_path_0"
  /ftp:
    get:
      tags:
        - ftp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - ftp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update ftp service configuration.


        `clients` is an integer value which sets the maximum number of simultaneous clients allowed. It defaults to 32.


        `ipconnections` is an integer value which shows the maximum number of connections per IP address. It defaults

        to 0 which equals to unlimited.


        `timeout` is the maximum number of seconds that proftpd will allow clients to stay connected without receiving

        any data on either the control or data connection.


        `timeout_notransfer` is the maximum number of seconds a client is allowed to spend connected, after

        authentication, without issuing a command which results in creating an active or passive data connection

        (i.e. sending/receiving a file, or receiving a directory listing).


        `rootlogin` is a boolean value which when configured to true enables login as root. This is generally

        discouraged because of the security risks.


        `onlyanonymous` allows anonymous FTP logins with access to the directory specified by `anonpath`.


        `banner` is a message displayed to local login users after they successfully authenticate. It is not displayed

        to anonymous login users.


        `filemask` sets the default permissions for newly created files which by default are 077.


        `dirmask` sets the default permissions for newly created directories which by default are 077.


        `resume` if set allows FTP clients to resume interrupted transfers.


        `fxp` if set to true indicates that File eXchange Protocol is enabled. Generally it is discouraged as it

        makes the server vulnerable to FTP bounce attacks.


        `defaultroot` when set ensures that for local users, home directory access is only granted if the user

        is a member of group wheel.


        `ident` is a boolean value which when set to true indicates that IDENT authentication is required. If identd

        is not running on the client, this can result in timeouts.


        `masqaddress` is the public IP address or hostname which is set if FTP clients cannot connect through a

        NAT device.


        `localuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for local user.

        Default of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).


        `localuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for local user.

        Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).


        `anonuserbw` is a positive integer value which indicates maximum upload bandwidth in KB/s for anonymous user.

        Default of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).


        `anonuserdlbw` is a positive integer value which indicates maximum download bandwidth in KB/s for anonymous

        user. Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).


        `tls` is a boolean value which when set indicates that encrypted connections are enabled. This requires a

        certificate to be configured first with the certificate service and the id of certificate is passed on in

        `ssltls_certificate`.


        `tls_policy` defines whether the control channel, data channel, both channels, or neither channel of an FTP

        session must occur over SSL/TLS.


        `tls_opt_enable_diags` is a boolean value when set, logs verbosely. This is helpful when troubleshooting a

        connection.


        `options` is a string used to add proftpd(8) parameters not covered by ftp service.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ftp_update_0"
  /gluster/eventsd/create:
    post:
      tags:
        - gluster.eventsd
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Add `url` webhook that will be called
        with a JSON formatted POST request that
        will include the event that was triggered
        along with the relevant data.

        `url` is a http address (i.e. http://192.168.1.50/endpoint)
        `bearer_token` is a bearer token
        `secret` secret to encode the JWT message

        NOTE: This webhook will be synchronized to all
        peers in the trusted storage pool.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_eventsd_create_0"
  /gluster/eventsd/delete:
    post:
      tags:
        - gluster.eventsd
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Delete `url` webhook

        `url` is a http address (i.e. http://192.168.1.50/endpoint)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_eventsd_delete_0"
  /gluster/eventsd/sync:
    get:
      tags:
        - gluster.eventsd
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Sync the webhooks config file to all peers in the
        trusted storage pool
  /gluster/eventsd/webhooks:
    get:
      tags:
        - gluster.eventsd
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: List the current webhooks (if any)
  /gluster/fuse/is_mounted:
    post:
      tags:
        - gluster.fuse
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Check if gluster volume is FUSE mounted locally.

        `name` String representing name of the gluster volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_fuse_is_mounted_0"
  /gluster/fuse/mount:
    post:
      tags:
        - gluster.fuse
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Mount a gluster volume using the gluster FUSE client.

        `name` String representing the name of the gluster volume
        `all` Boolean if True locally FUSE mount all detected
                gluster volumes
        `raise` Boolean if True raise a CallError if the FUSE mount
                fails
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_fuse_mount_0"
  /gluster/fuse/umount:
    post:
      tags:
        - gluster.fuse
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Unmount a locally FUSE mounted gluster volume.

        `name` String representing the name of the gluster volume
        `all` Boolean if True umount all locally detected FUSE
                mounted gluster volumes
        `raise` Boolean if True raise a CallError if the FUSE mount
                fails
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_fuse_umount_0"
  /gluster/localevents/add_jwt_secret:
    post:
      tags:
        - gluster.localevents
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Add a `secret` key used to encode/decode
        JWT messages for sending/receiving gluster
        events.

        `secret` String representing the key to be used
                    to encode/decode JWT messages
        `force` Boolean if set to True, will forcefully
                    wipe any existing jwt key for this
                    peer. Note, if forcefully adding a
                    new key, the other peers in the TSP
                    will also need to be sent this key.

        Note: this secret is only used for messages
        that are destined for the api endpoint at
        http://*:6000/_clusterevents for each peer
        in the trusted storage pool.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_localevents_add_jwt_secret_0"
  /gluster/localevents/get_set_jwt_secret:
    get:
      tags:
        - gluster.localevents
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return the secret key used to encode/decode
        JWT messages for sending/receiving gluster
        events.

        Note: this secret is only used for messages
        that are destined for the api endpoint at
        http://*:6000/_clusterevents for each peer
        in the trusted storage pool.
  /gluster/peer:
    get:
      tags:
        - gluster.peer
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - gluster.peer
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Add peer to the Trusted Storage Pool.

        `hostname` String representing an IP(v4/v6) address or DNS name
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_peer_create_0"
  "/gluster/peer/id/{id}":
    delete:
      tags:
        - gluster.peer
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Remove peer of `id` from the Trusted Storage Pool.

        `id` String representing the uuid of the peer
    get:
      tags:
        - gluster.peer
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
  /gluster/peer/ips_available:
    get:
      tags:
        - gluster.peer
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return list of VIP(v4/v6) addresses available on the system
  /gluster/peer/status:
    post:
      tags:
        - gluster.peer
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        List the status of peers in the Trusted Storage Pool.

        `localhost` Boolean if True, include localhost else exclude localhost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_peer_status_0"
  /gluster/rebalance/fix_layout:
    post:
      tags:
        - gluster.rebalance
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Start a fix-layout operation for a given
        gluster volume.

        `name` String representing the gluster volume.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_rebalance_fix_layout_0"
  /gluster/rebalance/start:
    post:
      tags:
        - gluster.rebalance
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Start a rebalance operation for a given
        gluster volume.

        `name` String representing the gluster volume.
        `force` Boolean, when True will forcefully
                start the rebalance operation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_rebalance_start_0"
  /gluster/rebalance/status:
    post:
      tags:
        - gluster.rebalance
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return the status of a rebalance operation
        for a given gluster volume.

        `name` String representing the gluster volume.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_rebalance_status_0"
  /gluster/rebalance/stop:
    post:
      tags:
        - gluster.rebalance
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Stop a rebalance operation for a given
        gluster volume.

        `name` String representing the gluster volume.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_rebalance_stop_0"
  /gluster/volume:
    get:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Create a gluster volume.

        `name` String representing name to be given to the volume
        `bricks` List representing the brick paths
            `peer_name` String representing IP or DNS name of the peer
            `peer_path` String representing the full path of the brick

        `replica` Integer representing number of replica bricks
        `arbiter` Integer representing number of arbiter bricks
        `disperse` Integer representing number of disperse bricks
        `disperse_data` Integer representing number of disperse data bricks
        `redundancy` Integer representing number of redundancy bricks
        `force` Boolean, if True ignore potential warnings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_create_0"
  "/gluster/volume/id/{id}":
    delete:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: |-
        Delete a gluster volume.

        `id` String representing name of gluster volume
                to be deleted
    get:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
  /gluster/volume/addbrick:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Add bricks to a gluster volume.

        `name` String representing name of gluster volume
        `bricks` List representing the brick paths
            `peer_name` String representing IP or DNS name of the peer
            `peer_path` String representing the full path of the brick
        `replica` Integer replicating replica count
        `arbiter` Integer replicating arbiter count
        `force` Boolean, if True, forcefully add brick(s)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_addbrick_0"
  /gluster/volume/info:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return information about gluster volume(s).

        `name` String representing name of gluster volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_info_0"
  /gluster/volume/list:
    get:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return list of gluster volumes.
  /gluster/volume/optreset:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Reset volumes options.
            If `opt` is not provided, then all options
            will be reset.

        `name` String representing name of gluster volume
        `opt` String representing name of the option to reset
        `force` Boolean, if True forcefully reset option(s)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_optreset_0"
  /gluster/volume/optset:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Set gluster volume options.

        `name` String representing name of gluster volume
        `opts` Dict where
            --key-- is the name of the option
            --value-- is the value to be given to the option
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_optset_0"
  /gluster/volume/quota:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Enable/Disable the quota for a given gluster volume.

        `name` String representing name of gluster volume
        `enable` Boolean, if True enable quota else disable it
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_quota_0"
  /gluster/volume/removebrick:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Perform a remove operation on the brick(s) in the gluster volume.

        `name` String representing name of gluster volume
        `bricks` List representing the brick paths
            `peer_name` String representing IP or DNS name of the peer
            `peer_path` String representing the full path of the brick
        `operation` String representing the operation to be performed
            `START` Start the removal of the brick(s)
            `STOP` Stop the removal of the brick(s)
            `COMMIT` Commit the removal of the brick(s)
            `STATUS` Display status of the removal of the brick(s)
            `FORCE` Force the removal of the brick(s)
        `replica` Integer representing replica count
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_removebrick_0"
  /gluster/volume/replacebrick:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Commit the replacement of a brick.

        `name` String representing name of gluster volume
        `src_brick` Dict where
            `peer_name` key is a string representing IP or DNS name of the peer
            `peer_path` key is a string representing the full path of the brick
        `new_brick` Dict where
            `peer_name` key is a string representing IP or DNS name of the peer
            `peer_path` key is a string representing the full path of the brick
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_replacebrick_0"
  /gluster/volume/restart:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Restart a gluster volume.

        `name` String representing name of gluster volume
        `force` Boolean, if True forcefully restart the gluster volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_restart_0"
  /gluster/volume/start:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Start a gluster volume.

        `name` String representing name of gluster volume
        `force` Boolean, if True forcefully start the gluster volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_start_0"
  /gluster/volume/status:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return detailed information about gluster volume.

        `name` String representing name of gluster volume
        `verbose` Boolean, If False, only return brick information
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_status_0"
  /gluster/volume/stop:
    post:
      tags:
        - gluster.volume
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Stop a gluster volume.

        `name` String representing name of gluster volume
        `force` Boolean, if True forcefully stop the gluster volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gluster_volume_stop_0"
  /group:
    get:
      tags:
        - group
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query groups with `query-filters` and `query-options`. As a
        performance optimization, only local groups

        will be queried by default.


        Expanded information may be requested by specifying the extra option `"extra": {"additional_information": []}`.


        The following `additional_information` options are supported:

        `SMB` - include Windows SID and NT Name for group. If this option is not specified, then these
            keys will have `null` value.
        `DS` - include groups from Directory Service (LDAP or Active Directory) in results


        `"extra": {"search_dscache": true}` is a legacy method of querying for directory services groups.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - group
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a new group.


        If `gid` is not provided it is automatically filled with the next one available.


        `allow_duplicate_gid` allows distinct group names to share the same gid.


        `users` is a list of user ids (`id` attribute from `user.query`).


        `smb` specifies whether the group should be mapped into an NT group.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/group_create_0"
  "/group/id/{id}":
    delete:
      tags:
        - group
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Delete group `id`.


        The `delete_users` option deletes all users that have this group as their primary group.
    get:
      tags:
        - group
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Query groups with `query-filters` and `query-options`. As a
        performance optimization, only local groups

        will be queried by default.


        Expanded information may be requested by specifying the extra option `"extra": {"additional_information": []}`.


        The following `additional_information` options are supported:

        `SMB` - include Windows SID and NT Name for group. If this option is not specified, then these
            keys will have `null` value.
        `DS` - include groups from Directory Service (LDAP or Active Directory) in results


        `"extra": {"search_dscache": true}` is a legacy method of querying for directory services groups.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - group
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update attributes of an existing group.
  /group/get_group_obj:
    post:
      tags:
        - group
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns dictionary containing information from struct grp for the
        group specified by either

        the groupname or gid. Bypasses group cache.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/group_get_group_obj_0"
  /group/get_next_gid:
    get:
      tags:
        - group
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get the next available/free gid.
  /idmap:
    get:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a new IDMAP domain. These domains must be unique. This table

        will be automatically populated after joining an Active Directory domain

        if "allow trusted domains" is set to True in the AD service configuration.

        There are three default system domains: DS_TYPE_ACTIVEDIRECTORY, DS_TYPE_LDAP, DS_TYPE_DEFAULT_DOMAIN.

        The system domains correspond with the idmap settings under Active Directory, LDAP, and SMB

        respectively.


        `name` the pre-windows 2000 domain name.


        `DNS_domain_name` DNS name of the domain.


        `idmap_backend` provides a plugin interface for Winbind to use varying

        backends to store SID/uid/gid mapping tables. The correct setting

        depends on the environment in which the NAS is deployed.


        `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.


        `certificate_id` references the certificate ID of the SSL certificate to use for certificate-based

        authentication to a remote LDAP server. This parameter is not supported for all idmap backends as some

        backends will generate SID to ID mappings algorithmically without causing network traffic.


        `options` are additional parameters that are backend-dependent:


        `AD` idmap backend options:

        `unix_primary_group` If True, the primary group membership is fetched from the LDAP attributes (gidNumber).

        If False, the primary group membership is calculated via the "primaryGroupID" LDAP attribute.


        `unix_nss_info` if True winbind will retrieve the login shell and home directory from the LDAP attributes.

        If False or if the AD LDAP entry lacks the SFU attributes the smb4.conf parameters `template shell` and `template homedir` are used.


        `schema_mode` Defines the schema that idmap_ad should use when querying Active Directory regarding user and group information.

        This can be either the RFC2307 schema support included in Windows 2003 R2 or the Service for Unix (SFU) schema.

        For SFU 3.0 or 3.5 please choose "SFU", for SFU 2.0 please choose "SFU20". The behavior of primary group membership is

        controlled by the unix_primary_group option.


        `AUTORID` idmap backend options:

        `readonly` sets the module to read-only mode. No new ranges will be allocated and new mappings

        will not be created in the idmap pool.


        `ignore_builtin` ignores mapping requests for the BUILTIN domain.


        `LDAP` idmap backend options:

        `ldap_base_dn` defines the directory base suffix to use for SID/uid/gid mapping entries.


        `ldap_user_dn` defines the user DN to be used for authentication.


        `ldap_url` specifies the LDAP server to use for SID/uid/gid map entries.


        `ssl` specifies whether to encrypt the LDAP transport for the idmap backend.


        `NSS` idmap backend options:

        `linked_service` specifies the auxiliary directory service ID provider.


        `RFC2307` idmap backend options:

        `domain` specifies the domain for which the idmap backend is being created. Numeric id, short-form

        domain name, or long-form DNS domain name of the domain may be specified. Entry must be entered as

        it appears in `idmap.domain`.


        `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.


        `ldap_server` defines the type of LDAP server to use. This can either be an LDAP server provided

        by the Active Directory Domain (ad) or a stand-alone LDAP server.


        `bind_path_user` specfies the search base where user objects can be found in the LDAP server.


        `bind_path_group` specifies the search base where group objects can be found in the LDAP server.


        `user_cn` query cn attribute instead of uid attribute for the user name in LDAP.


        `realm` append @realm to cn for groups (and users if user_cn is set) in LDAP queries.


        `ldmap_domain` when using the LDAP server in the Active Directory server, this allows one to

        specify the domain where to access the Active Directory server. This allows using trust relationships

        while keeping all RFC 2307 records in one place. This parameter is optional, the default is to access

        the AD server in the current domain to query LDAP records.


        `ldap_url` when using a stand-alone LDAP server, this parameter specifies the LDAP URL for accessing the LDAP server.


        `ldap_user_dn` defines the user DN to be used for authentication.


        `ldap_user_dn_password` is the password to be used for LDAP authentication.


        `realm` defines the realm to use in the user and group names. This is only required when using cn_realm together with
         a stand-alone ldap server.

        `RID` backend options:

        `sssd_compat` generate idmap low range based on same algorithm that SSSD uses by default.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/idmap_create_0"
  "/idmap/id/{id}":
    delete:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Delete a domain by id. Deletion of default system domains is not
        permitted.

        In case of registry config for clustered server, this will remove all smb4.conf

        entries for the domain associated with the id.
    get:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update a domain by id.
  /idmap/backend_choices:
    get:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns array of valid idmap backend choices per directory service.
  /idmap/backend_options:
    get:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        This returns full information about idmap backend options. Not all
        `options` are valid for every backend.
  /idmap/clear_idmap_cache:
    get:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Stop samba, remove the winbindd_cache.tdb file, start samba, flush
        samba's cache.

        This should be performed after finalizing idmap changes.
  /idmap/options_choices:
    post:
      tags:
        - idmap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a list of supported keys for the specified idmap backend.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/idmap_options_choices_0"
  /initshutdownscript:
    get:
      tags:
        - initshutdownscript
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - initshutdownscript
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create an initshutdown script task.


        `type` indicates if a command or script should be executed at `when`.


        There are three choices for `when`:


        1) PREINIT - This is early in the boot process before all the services / rc scripts have started

        2) POSTINIT - This is late in the boot process when most of the services / rc scripts have started

        3) SHUTDOWN - This is on shutdown


        `timeout` is an integer value which indicates time in seconds which the system should wait for the execution

        of script/command. It should be noted that a hard limit for a timeout is configured by the base OS, so when

        a script/command is set to execute on SHUTDOWN, the hard limit configured by the base OS is changed adding

        the timeout specified by script/command so it can be ensured that it executes as desired and is not interrupted

        by the base OS's limit.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/initshutdownscript_create_0"
  "/initshutdownscript/id/{id}":
    delete:
      tags:
        - initshutdownscript
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete init/shutdown task of `id`.
    get:
      tags:
        - initshutdownscript
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - initshutdownscript
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update initshutdown script task of `id`.
  /interface:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query Interfaces with `query-filters` and `query-options`


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create virtual interfaces (Link Aggregation, VLAN)


        For BRIDGE `type` the following attribute is required: bridge_members.


        For LINK_AGGREGATION `type` the following attributes are required: lag_ports,

        lag_protocol.


        For VLAN `type` the following attributes are required: vlan_parent_interface,

        vlan_tag and vlan_pcp.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_create_0"
  "/interface/id/{id}":
    delete:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: Delete Interface of `id`.
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Query Interfaces with `query-filters` and `query-options`


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: |+
        Update Interface of `id`.

  /interface/bridge_members_choices:
    post:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Return available interface choices that can be added to a `br`
        (bridge) interface.


        `id` is name of existing bridge interface on the system that will have its member
                interfaces included.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_bridge_members_choices_0"
  /interface/checkin:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        After interfaces changes are committed with checkin timeout this
        method needs to be called

        within that timeout limit to prevent reverting the changes.


        This is to ensure user verifies the changes went as planned and its working.
  /interface/checkin_waiting:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns whether or not we are waiting user to checkin the applied
        network changes

        before they are rolled back.

        Value is in number of seconds or null.
  /interface/choices:
    post:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Choices of available network interfaces.

        `bridge_members` will include BRIDGE members.
        `lag_ports` will include LINK_AGGREGATION ports.
        `vlan_parent` will include VLAN parent interface.
        `exclude` is a list of interfaces prefix to remove.
        `include` is a list of interfaces that should not be removed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_choices_0"
  /interface/commit:
    post:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Commit/apply pending interfaces changes.


        `rollback` as true (default) will rollback changes in case they fail to apply.

        `checkin_timeout` is the time in seconds it will wait for the checkin call to acknowledge

        the interfaces changes happened as planned from the user. If checkin does not happen

        within this period of time the changes will get reverted.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_commit_0"
  /interface/has_pending_changes:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns whether there are pending interfaces changes to be applied
        or not.
  /interface/ip_in_use:
    post:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Get all IPv4 / Ipv6 from all valid interfaces, excluding tap and epair.

        `loopback` will return loopback interface addresses.

        `any` will return wildcard addresses (0.0.0.0 and ::).

        `static` when enabled will ensure we only return static ip's configured.

        Returns a list of dicts - eg -

        [
            {
                "type": "INET6",
                "address": "fe80::5054:ff:fe16:4aac",
                "netmask": 64
            },
            {
                "type": "INET",
                "address": "192.168.122.148",
                "netmask": 24,
                "broadcast": "192.168.122.255"
            },
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_ip_in_use_0"
  /interface/lacpdu_rate_choices:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Available lacpdu rate policies for the LACP lagg type interfaces.
  /interface/lag_ports_choices:
    post:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Return available interface choices that can be added to a `bond`
        (lag) interface.


        `id` is name of existing bond interface on the system that will have its member
                interfaces included.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_lag_ports_choices_0"
  /interface/rollback:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Rollback pending interfaces changes.
  /interface/services_restarted_on_sync:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns which services will be set to listen on 0.0.0.0 (and, thus,
        restarted) on sync.


        Example result:

        [
            // Samba service will be set ot listen on 0.0.0.0 and restarted because it was set up to listen on
            // 192.168.0.1 which is being removed.
            {"type": "SYSTEM_SERVICE", "service": "cifs", "ips": ["192.168.0.1"]},
        ]
  /interface/vlan_parent_interface_choices:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return available interface choices for `vlan_parent_interface` attribute.
  /interface/xmit_hash_policy_choices:
    get:
      tags:
        - interface
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Available transmit hash policies for the LACP or LOADBALANCE
        lagg type interfaces.
  /interface/capabilities/get:
    post:
      tags:
        - interface.capabilities
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Return enabled, disabled and supported capabilities (also known as
        features)

        on a given interface.


        `name` String representing name of the interface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_capabilities_get_0"
  /interface/capabilities/set:
    post:
      tags:
        - interface.capabilities
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Enable or Disable capabilties (also known as features) on a given
        interface.


        `name` String representing name of the interface

        `capabilities` List representing capabilities to be acted upon

        `action` String when set to 'ENABLE' will enable `capabilities` else if set
                    to `DISABLE` will disable `capabilities`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_capabilities_set_0"
  /ipmi:
    get:
      tags:
        - ipmi
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query all IPMI Channels with `query-filters` and `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  "/ipmi/id/{id}":
    get:
      tags:
        - ipmi
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Query all IPMI Channels with `query-filters` and `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - ipmi
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Update `id` IPMI Configuration.


        `ipaddress` is a valid ip which will be used to connect to the IPMI interface.


        `netmask` is the subnet mask associated with `ipaddress`.


        `dhcp` is a boolean value which if unset means that `ipaddress`, `netmask` and `gateway` must be set.
  /ipmi/channels:
    get:
      tags:
        - ipmi
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return a list with the IPMI channels available.
  /ipmi/clear_sel:
    get:
      tags:
        - ipmi
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Clear IPMI System Event Log
  /ipmi/identify:
    post:
      tags:
        - ipmi
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Turn on IPMI chassis identify light.

        To turn off specify 0 as `seconds`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ipmi_identify_0"
  /ipmi/is_loaded:
    get:
      tags:
        - ipmi
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a boolean true value indicating if ipmi device is loaded.
  /ipmi/query_sel:
    get:
      tags:
        - ipmi
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query IPMI System Event Log


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /iscsi/auth:
    get:
      tags:
        - iscsi.auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - iscsi.auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create an iSCSI Authorized Access.


        `tag` should be unique among all configured iSCSI Authorized Accesses.


        `secret` and `peersecret` should have length between 12-16 letters inclusive.


        `peeruser` and `peersecret` are provided only when configuring mutual CHAP. `peersecret` should not be

        similar to `secret`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_auth_create_0"
  "/iscsi/auth/id/{id}":
    delete:
      tags:
        - iscsi.auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete iSCSI Authorized Access of `id`.
    get:
      tags:
        - iscsi.auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - iscsi.auth
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update iSCSI Authorized Access of `id`.
  /iscsi/extent:
    get:
      tags:
        - iscsi.extent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - iscsi.extent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create an iSCSI Extent.


        When `type` is set to FILE, attribute `filesize` is used and it represents number of bytes. `filesize` if

        not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.


        With `type` being set to DISK, a valid ZFS volume is required.


        `insecure_tpc` when enabled allows an initiator to bypass normal access control and access any scannable

        target. This allows xcopy operations otherwise blocked by access control.


        `xen` is a boolean value which is set to true if Xen is being used as the iSCSI initiator.


        `ro` when set to true prevents the initiator from writing to this LUN.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_extent_create_0"
  "/iscsi/extent/id/{id}":
    delete:
      tags:
        - iscsi.extent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Delete iSCSI Extent of `id`.


        If `id` iSCSI Extent's `type` was configured to FILE, `remove` can be set to remove the configured file.
    get:
      tags:
        - iscsi.extent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - iscsi.extent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update iSCSI Extent of `id`.
  /iscsi/extent/disk_choices:
    get:
      tags:
        - iscsi.extent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return a dict of available zvols that can be used
        when creating an extent.
  /iscsi/global:
    get:
      tags:
        - iscsi.global
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - iscsi.global
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: "`alua` is a no-op for FreeNAS."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_global_update_0"
  /iscsi/global/alua_enabled:
    get:
      tags:
        - iscsi.global
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns whether iSCSI ALUA is enabled or not.
  /iscsi/global/client_count:
    get:
      tags:
        - iscsi.global
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return currently connected clients count.
  /iscsi/global/sessions:
    get:
      tags:
        - iscsi.global
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Get a list of currently running iSCSI sessions. This includes
        initiator and target names

        and the unique connection IDs.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /iscsi/host:
    get:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Creates iSCSI host.

        `ip` indicates an IP address of the host.
        `description` is a human-readable name for the host.
        `iqns` is a list of initiator iSCSI Qualified Names.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_host_create_0"
  "/iscsi/host/id/{id}":
    delete:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update iSCSI host `id`.
    get:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update iSCSI host `id`.
  /iscsi/host/get_initiators:
    post:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns initiator groups associated with host `id`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_host_get_initiators_0"
  /iscsi/host/get_targets:
    post:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns targets associated with host `id`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_host_get_targets_0"
  /iscsi/host/set_initiators:
    post:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Associates initiator groups `ids` with host `id`.

        Use `force` if you want to allow adding first or removing last initiator from initiator groups.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_host_set_initiators"
  /iscsi/host/set_targets:
    post:
      tags:
        - iscsi.host
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Associates targets `ids` with host `id`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_host_set_targets"
  /iscsi/initiator:
    get:
      tags:
        - iscsi.initiator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - iscsi.initiator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create an iSCSI Initiator.


        `initiators` is a list of initiator hostnames which are authorized to access an iSCSI Target. To allow all

        possible initiators, `initiators` can be left empty.


        `auth_network` is a list of IP/CIDR addresses which are allowed to use this initiator. If all networks are

        to be allowed, this field should be left empty.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_initiator_create_0"
  "/iscsi/initiator/id/{id}":
    delete:
      tags:
        - iscsi.initiator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete iSCSI initiator of `id`.
    get:
      tags:
        - iscsi.initiator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - iscsi.initiator
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update iSCSI initiator of `id`.
  /iscsi/portal:
    get:
      tags:
        - iscsi.portal
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - iscsi.portal
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Create a new iSCSI Portal.

        `discovery_authgroup` is required for CHAP and CHAP_MUTUAL.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_portal_create_0"
  "/iscsi/portal/id/{id}":
    delete:
      tags:
        - iscsi.portal
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete iSCSI Portal `id`.
    get:
      tags:
        - iscsi.portal
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - iscsi.portal
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update iSCSI Portal `id`.
  /iscsi/portal/listen_ip_choices:
    get:
      tags:
        - iscsi.portal
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns possible choices for `listen.ip` attribute of portal create
        and update.
  /iscsi/target:
    get:
      tags:
        - iscsi.target
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - iscsi.target
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create an iSCSI Target.


        `groups` is a list of group dictionaries which provide information related to using a `portal`, `initiator`,

        `authmethod` and `auth` with this target. `auth` represents a valid iSCSI Authorized Access and defaults to

        null.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_target_create_0"
  "/iscsi/target/id/{id}":
    delete:
      tags:
        - iscsi.target
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Delete iSCSI Target of `id`.


        Deleting an iSCSI Target makes sure we delete all Associated Targets which use `id` iSCSI Target.
    get:
      tags:
        - iscsi.target
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - iscsi.target
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update iSCSI Target of `id`.
  /iscsi/targetextent:
    get:
      tags:
        - iscsi.targetextent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - iscsi.targetextent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create an Associated Target.


        `lunid` will be automatically assigned if it is not provided based on the `target`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/iscsi_targetextent_create_0"
  "/iscsi/targetextent/id/{id}":
    delete:
      tags:
        - iscsi.targetextent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete Associated Target of `id`.
    get:
      tags:
        - iscsi.targetextent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - iscsi.targetextent
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Associated Target of `id`.
  /kerberos:
    get:
      tags:
        - kerberos
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - kerberos
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        `appdefaults_aux` add parameters to "appdefaults" section of the
        krb5.conf file.


        `libdefaults_aux` add parameters to "libdefaults" section of the krb5.conf file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kerberos_update_0"
  /kerberos/keytab:
    get:
      tags:
        - kerberos.keytab
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - kerberos.keytab
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a kerberos keytab. Uploaded keytab files will be merged with
        the system

        keytab under /etc/krb5.keytab.


        `file` b64encoded kerberos keytab

        `name` name for kerberos keytab
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kerberos_keytab_create_0"
  "/kerberos/keytab/id/{id}":
    delete:
      tags:
        - kerberos.keytab
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Delete kerberos keytab by id, and force regeneration of
        system keytab.
    get:
      tags:
        - kerberos.keytab
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - kerberos.keytab
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update kerberos keytab by id.
  /kerberos/keytab/system_keytab_list:
    get:
      tags:
        - kerberos.keytab
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns content of system keytab (/etc/krb5.keytab).
  /kerberos/keytab/upload_keytab:
    post:
      tags:
        - kerberos.keytab
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Upload a keytab file. This method expects the keytab file to be
        uploaded using

        the /_upload/ endpoint.


        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kerberos_keytab_upload_keytab_0"
  /kerberos/realm:
    get:
      tags:
        - kerberos.realm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - kerberos.realm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a new kerberos realm. This will be automatically populated
        during the

        domain join process in an Active Directory environment. Kerberos realm names

        are case-sensitive, but convention is to only use upper-case.


        Entries for kdc, admin_server, and kpasswd_server are not required.

        If they are unpopulated, then kerberos will use DNS srv records to

        discover the correct servers. The option to hard-code them is provided

        due to AD site discovery. Kerberos has no concept of Active Directory

        sites. This means that middleware performs the site discovery and

        sets the kerberos configuration based on the AD site.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kerberos_realm_create_0"
  "/kerberos/realm/id/{id}":
    delete:
      tags:
        - kerberos.realm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete a kerberos realm by ID.
    get:
      tags:
        - kerberos.realm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - kerberos.realm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Update a kerberos realm by id. This will be automatically populated
        during the

        domain join process in an Active Directory environment. Kerberos realm names

        are case-sensitive, but convention is to only use upper-case.
  /keychaincredential:
    get:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a Keychain Credential


        Create a Keychain Credential of any type.

        Every Keychain Credential has a `name` which is used to distinguish it from others.

        The following `type`s are supported:
         * `SSH_KEY_PAIR`
           Which `attributes` are:
           * `private_key`
           * `public_key` (which can be omitted and thus automatically derived from private key)
           At least one attribute is required.

         * `SSH_CREDENTIALS`
           Which `attributes` are:
           * `host`
           * `port` (default 22)
           * `username` (default root)
           * `private_key` (Keychain Credential ID)
           * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)
           * `cipher`: one of `STANDARD`, `FAST`, or `DISABLED` (last requires special support from both SSH server and
             client)
           * `connect_timeout` (default 10)

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/keychaincredential_create_0"
  "/keychaincredential/id/{id}":
    delete:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Delete Keychain Credential with specific `id`

    get:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Update a Keychain Credential with specific `id`


        Please note that you can't change `type`


        Also you must specify full `attributes` value


        See the documentation for `create` method for information on payload contents

  /keychaincredential/generate_ssh_key_pair:
    get:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Generate a public/private key pair

        Generate a public/private key pair (useful for `SSH_KEY_PAIR` type)

  /keychaincredential/remote_ssh_host_key_scan:
    post:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Discover a remote host key

        Discover a remote host key (useful for `SSH_CREDENTIALS`)

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/keychaincredential_remote_ssh_host_key_scan_0"
  /keychaincredential/remote_ssh_semiautomatic_setup:
    post:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Perform semi-automatic SSH connection setup with other FreeNAS
        machine


        Perform semi-automatic SSH connection setup with other FreeNAS machine. It creates a `SSH_CREDENTIALS`

        credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and

        temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other

        `SSH_CREDENTIALS` attributes such as `cipher` and `connect_timeout` can be specified as well.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/keychaincredential_remote_ssh_semiautomatic_setup_0"
  /keychaincredential/setup_ssh_connection:
    post:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Creates a SSH Connection performing the following steps:


        1) Generating SSH Key Pair if required

        2) Setting up SSH Credentials based on `setup_type`


        In case (2) fails, it will be ensured that SSH Key Pair generated ( if applicable ) in the process is

        removed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/keychaincredential_setup_ssh_connection_0"
  /keychaincredential/used_by:
    post:
      tags:
        - keychaincredential
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns list of objects that use this credential.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/keychaincredential_used_by_0"
  /kmip:
    get:
      tags:
        - kmip
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - kmip
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update KMIP Server Configuration.


        System currently authenticates connection with remote KMIP Server with a TLS handshake. `certificate` and

        `certificate_authority` determine the certs which will be used to initiate the TLS handshake with `server`.


        `validate` is enabled by default. When enabled, system will test connection to `server` making sure

        it's reachable.


        `manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys from local database to remote KMIP server.

        When disabled, if there are any keys left to be retrieved from the KMIP server,

        it will sync them back to local database.


        `enabled` if true, cannot be set to disabled if there are existing keys pending to be synced. However users

        can still perform this action by enabling `force_clear`.


        `ssl_version` can be specified to match the ssl configuration being used by KMIP server.


        `change_server` is a boolean field which allows users to migrate data between two KMIP servers. System

        will first migrate keys from old KMIP server to local database and then migrate the keys from local database

        to new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass

        this by enabling `force_clear`.


        `force_clear` is a boolean option which when enabled will in this case remove all

        pending keys to be synced from database. It should be used with extreme caution as users may end up with

        not having ZFS dataset or SED disks keys leaving them locked forever. It is disabled by default.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kmip_update_0"
  /kmip/clear_sync_pending_keys:
    get:
      tags:
        - kmip
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Clear all keys which are pending to be synced between KMIP server
        and TN database.


        For ZFS/SED keys, we remove the UID from local database with which we are able to retrieve ZFS/SED keys.

        It should be used with caution.
  /kmip/kmip_sync_pending:
    get:
      tags:
        - kmip
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns true or false based on if there are keys which are to be
        synced from local database to remote KMIP

        server or vice versa.
  /kmip/ssl_version_choices:
    get:
      tags:
        - kmip
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve valid SSL version choices to be used when configuring kmip
        service.
  /kmip/sync_keys:
    get:
      tags:
        - kmip
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Sync ZFS/SED keys between KMIP Server and TN database.
  /kubernetes:
    get:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        `pool` must be a valid ZFS pool configured in the system.
        Kubernetes service will initialise the pool by

        creating datasets under `pool_name/ix-applications`.


        `configure_gpus` is a boolean to enable or disable to prevent automatically loading any GPU Support

        into kubernetes. This includes not loading any daemonsets for Intel and NVIDIA support.


        `servicelb` is a boolean to enable or disable the integrated k3s Service Loadbalancer called "Klipper".

        This can be set to disabled to enable the user to run another LoadBalancer or no LoadBalancer at all.


        `cluster_cidr` is the CIDR to be used for default NAT network between workloads.


        `service_cidr` is the CIDR to be used for kubernetes services which are an abstraction and refer to a

        logically set of kubernetes pods.


        `cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range

        of `service_cidr`.


        Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change

        requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset

        and any data within it when any of the values for the above configuration change.


        `node_ip` is the IP address which the kubernetes cluster will assign to the TrueNAS node. It defaults to

        0.0.0.0 and the cluster in this case will automatically manage which IP address to use for managing traffic

        for default NAT network.


        By default kubernetes pods will be using default gateway of the system for outward traffic. This might

        not be desirable for certain users who want to separate NAT traffic over a specific interface / route. System

        will create a L3 network which will be routing the traffic towards default gateway for NAT.


        If users want to restrict traffic over a certain gateway / interface, they can specify a default route

        for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes

        cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default

        route for IPv6 traffic.


        In case user is switching pools and the new desired pool has not been configured for kubernetes before, it

        is possible to replicate data from old pool to new pool with setting `migrate_applications` attribute. This

        will replicate contents of old pool's ix-applications dataset to the new pool.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kubernetes_update_0"
  /kubernetes/backup_chart_releases:
    post:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a backup of existing chart releases.


        The backup will save helm configuration with history for each chart release and then take a

        snapshot of `ix-applications` dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kubernetes_backup_chart_releases_0"
  /kubernetes/bindip_choices:
    get:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns ip choices for Kubernetes service to use.
  /kubernetes/delete_backup:
    post:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Delete `backup_name` chart releases backup.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kubernetes_delete_backup_0"
  /kubernetes/events:
    get:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns events for kubernetes node.
  /kubernetes/list_backups:
    get:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: List existing chart releases backups.
  /kubernetes/node_ip:
    get:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns IP used by kubernetes which kubernetes uses to allow
        incoming connections.
  /kubernetes/restore_backup:
    post:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Restore `backup_name` chart releases backup.


        It should be noted that a rollback will be initiated which will destroy any newer snapshots/clones

        of `ix-applications` dataset then the snapshot in question of `backup_name`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kubernetes_restore_backup"
  /kubernetes/route_interface_choices:
    get:
      tags:
        - kubernetes
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns Interface choices for Kubernetes service to use for ipv4
        connections.
  /ldap:
    get:
      tags:
        - ldap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - ldap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        `hostname` list of ip addresses or hostnames of LDAP servers with
        which to communicate in order of preference. Failover only occurs
        if the current LDAP server is unresponsive.

        `basedn` specifies the default base DN to use when performing ldap
        operations. The base must be specified as a Distinguished Name in LDAP
        format.

        `binddn` specifies the default bind DN to use when performing ldap
        operations. The bind DN must be specified as a Distinguished Name in
        LDAP format.

        `anonbind` use anonymous authentication.

        `ssl` establish SSL/TLS-protected connections to the LDAP server(s).
        GSSAPI signing is disabled on SSL/TLS-protected connections if
        kerberos authentication is used.

        `certificate` LDAPs client certificate to be used for certificate-
        based authentication.

        `validate_certificates` specifies whether to perform checks on server
        certificates in a TLS session. If enabled, TLS_REQCERT demand is set.
        The server certificate is requested. If no certificate is provided or
        if a bad certificate is provided, the session is immediately terminated.
        If disabled, TLS_REQCERT allow is set. The server certificate is
        requested, but all errors are ignored.

        `kerberos_realm` in which the server is located. This parameter is
        only required for SASL GSSAPI authentication to the remote LDAP server.

        `kerberos_principal` kerberos principal to use for SASL GSSAPI
        authentication to the remote server. If `kerberos_realm` is specified
        without a keytab, then the `binddn` and `bindpw` are used to
        perform to obtain the ticket necessary for GSSAPI authentication.

        `timeout` specifies  a  timeout  (in  seconds) after which calls to
        synchronous LDAP APIs will abort if no response is received.

        `dns_timeout` specifies the timeout (in seconds) after which the
        poll(2)/select(2) following a connect(2) returns in case of no activity
        for openldap. For nslcd this specifies the time limit (in seconds) to
        use when connecting to the directory server. This directly impacts the
        length of time that the LDAP service tries before failing over to
        a secondary LDAP URI.

        `has_samba_schema` determines whether to configure samba to use the
        ldapsam passdb backend to provide SMB access to LDAP users. This feature
        requires the presence of Samba LDAP schema extensions on the remote
        LDAP server.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ldap_update_0"
  /ldap/get_state:
    get:
      tags:
        - ldap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Wrapper function for 'directoryservices.get_state'. Returns only
        the state of the

        LDAP service.
  /ldap/schema_choices:
    get:
      tags:
        - ldap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns list of available LDAP schema choices.
  /ldap/ssl_choices:
    get:
      tags:
        - ldap
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns list of SSL choices.
  /lldp:
    get:
      tags:
        - lldp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - lldp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update LLDP Service Configuration.


        `country` is a two letter ISO 3166 country code required for LLDP location support.


        `location` is an optional attribute specifying the physical location of the host.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lldp_update_0"
  /lldp/country_choices:
    get:
      tags:
        - lldp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns country choices for LLDP.
  /mail:
    get:
      tags:
        - mail
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - mail
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update Mail Service Configuration.


        `fromemail` is used as a sending address which the mail server will use for sending emails.


        `outgoingserver` is the hostname or IP address of SMTP server used for sending an email.


        `security` is type of encryption desired.


        `smtp` is a boolean value which when set indicates that SMTP authentication has been enabled and `user`/`pass`

        are required attributes now.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mail_update_0"
  /mail/send:
    post:
      tags:
        - mail
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Sends mail using configured mail settings.


        `text` will be formatted to HTML using Markdown and rendered using default E-Mail template.

        You can put your own HTML using `html`. If `html` is null, no HTML MIME part will be added to E-Mail.


        If `attachments` is true, a list compromised of the following dict is required

        via HTTP upload:
          - headers(list)
            - name(str)
            - value(str)
            - params(dict)
          - content (str)

        [
         {
          "headers": [
           {
            "name": "Content-Transfer-Encoding",
            "value": "base64"
           },
           {
            "name": "Content-Type",
            "value": "application/octet-stream",
            "params": {
             "name": "test.txt"
            }
           }
          ],
          "content": "dGVzdAo="
         }
        ]


        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mail_send"
  /network/configuration:
    get:
      tags:
        - network.configuration
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - network.configuration
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update Network Configuration Service configuration.


        `ipv4gateway` if set is used instead of the default gateway provided by DHCP.


        `nameserver1` is primary DNS server.


        `nameserver2` is secondary DNS server.


        `nameserver3` is tertiary DNS server.


        `httpproxy` attribute must be provided if a proxy is to be used for network operations.


        `netwait_enabled` is a boolean attribute which when set indicates that network services will not start at

        boot unless they are able to ping the addresses listed in `netwait_ip` list.


        `service_announcement` determines the broadcast protocols that will be used to advertise the server.

        `netbios` enables the NetBIOS name server (NBNS), which starts concurrently with the SMB service. SMB clients

        will only perform NBNS lookups if SMB1 is enabled. NBNS may be required for legacy SMB clients.

        `mdns` enables multicast DNS service announcements for enabled services. `wsd` enables Web Service

        Discovery support.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/network_configuration_update_0"
  /network/configuration/activity_choices:
    get:
      tags:
        - network.configuration
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns allowed/forbidden network activity choices.
  /network/general/summary:
    get:
      tags:
        - network.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Retrieve general information for current Network.

        Returns a dictionary. For example:

  /nfs:
    get:
      tags:
        - nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Update NFS Service Configuration.


        `servers` represents number of servers to create.


        When `allow_nonroot` is set, it allows non-root mount requests to be served.


        `bindip` is a list of IP's on which NFS will listen for requests. When it is unset/empty, NFS listens on

        all available addresses.


        `v4` when set means that we switch from NFSv3 to NFSv4.


        `v4_v3owner` when set means that system will use NFSv3 ownership model for NFSv4.


        `v4_krb` will force NFS shares to fail if the Kerberos ticket is unavailable.


        `v4_domain` overrides the default DNS domain name for NFSv4.


        `mountd_port` specifies the port mountd(8) binds to.


        `rpcstatd_port` specifies the port rpc.statd(8) binds to.


        `rpclockd_port` specifies the port rpclockd_port(8) binds to.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/nfs_update_0"
  /nfs/add_principal:
    post:
      tags:
        - nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Use user-provided admin credentials to kinit, add NFS SPN
        entries to the remote kerberos server, and then append the new entries
        to our system keytab.

        Currently this is only supported in AD environments.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/nfs_add_principal_0"
  /nfs/bindip_choices:
    get:
      tags:
        - nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns ip choices for NFS service to use
  /nfs/client_count:
    get:
      tags:
        - nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return currently connected clients count.
        Count may not be accurate if NFSv3 protocol is in use
        due to potentially stale rmtab entries.
  /nfs/get_nfs3_clients:
    get:
      tags:
        - nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Read contents of rmtab. This information may not

        be accurate due to stale entries. This is ultimately

        a limitation of the NFSv3 protocol.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /nfs/get_nfs4_clients:
    get:
      tags:
        - nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Read information about NFSv4 clients from

        /proc/fs/nfsd/clients


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /openvpn/client:
    get:
      tags:
        - openvpn.client
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - openvpn.client
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update OpenVPN Client configuration.


        `remote` can be a valid ip address / domain which openvpn will try to connect to.


        `nobind` must be enabled if OpenVPN client / server are to run concurrently.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/openvpn_client_update_0"
  /openvpn/client/authentication_algorithm_choices:
    get:
      tags:
        - openvpn.client
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a dictionary of valid authentication algorithms which can
        be used with OpenVPN server.
  /openvpn/client/cipher_choices:
    get:
      tags:
        - openvpn.client
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a dictionary of valid ciphers which can be used with
        OpenVPN server.
  /openvpn/server:
    get:
      tags:
        - openvpn.server
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - openvpn.server
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update OpenVPN Server configuration.


        When `tls_crypt_auth_enabled` is enabled and `tls_crypt_auth` not provided, a static key is automatically

        generated to be used with OpenVPN server.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/openvpn_server_update_0"
  /openvpn/server/authentication_algorithm_choices:
    get:
      tags:
        - openvpn.server
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a dictionary of valid authentication algorithms which can
        be used with OpenVPN server.
  /openvpn/server/cipher_choices:
    get:
      tags:
        - openvpn.server
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a dictionary of valid ciphers which can be used with
        OpenVPN server.
  /openvpn/server/client_configuration_generation:
    post:
      tags:
        - openvpn.server
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns a configuration for OpenVPN client which can be used with
        any client to connect to FN/TN OpenVPN

        server.


        `client_certificate_id` should be a valid certificate issued for use with OpenVPN client service.


        `server_address` if specified auto-fills the remote directive in the OpenVPN configuration enabling the end

        user to use the file without making any edits to connect to OpenVPN server.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/openvpn_server_client_configuration_generation"
  /openvpn/server/renew_static_key:
    get:
      tags:
        - openvpn.server
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Reset OpenVPN server's TLS static key which will be used to
        encrypt/authenticate control channel packets.
  /pool:
    get:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a new ZFS Pool.


        `topology` is a object which requires at least one `data` entry.

        All of `data` entries (vdevs) require to be of the same type.


        `deduplication` when set to ON or VERIFY makes sure that no block of data is duplicated in the pool. When

        VERIFY is specified, if two blocks have similar signatures, byte to byte comparison is performed to ensure that

        the blocks are identical. This should be used in special circumstances as it carries a significant overhead.


        `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.


        `encryption_options` specifies configuration for encryption of root dataset for `name` pool.

        `encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase

        as a key.

        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.

        `encryption_options.generate_key` when enabled automatically generates the key to be used

        for dataset encryption.


        It should be noted that keys are stored by the system for automatic locking/unlocking

        on import/export of encrypted datasets. If that is not desired, dataset should be created

        with a passphrase as a key.


        Example of `topology`:

            {
                "data": [
                    {"type": "RAIDZ1", "disks": ["da1", "da2", "da3"]}
                ],
                "cache": [
                    {"type": "STRIPE", "disks": ["da4"]}
                ],
                "log": [
                    {"type": "STRIPE", "disks": ["da5"]}
                ],
                "spares": ["da6"]
            }


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_create_0"
  "/pool/id/{id}":
    get:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Update pool of `id`, adding the new topology.

        The `type` of `data` must be the same of existing vdevs.

  /pool/attach:
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        For TrueNAS Core/Enterprise platform, if the `oid` pool is
        passphrase GELI encrypted, `passphrase`

        must be specified for this operation to succeed.


        `target_vdev` is the GUID of the vdev where the disk needs to be attached. In case of STRIPED vdev, this

        is the STRIPED disk GUID which will be converted to mirror. If `target_vdev` is mirror, it will be converted

        into a n-way mirror.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_attach"
  "/pool/id/{id}/attachments":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Return a list of services dependent of this pool.

        Responsible for telling the user whether there is a related
        share, asking for confirmation.
  "/pool/id/{id}/detach":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Detach a disk from pool of id `id`.

        `label` is the vdev guid or device name.

  "/pool/id/{id}/expand":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Expand pool to fit all available disk space.
  "/pool/id/{id}/export":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Export pool of `id`.


        `cascade` will delete all attachments of the given pool (`pool.attachments`).

        `restart_services` will restart services that have open files on given pool.

        `destroy` will also PERMANENTLY destroy the pool/data.

  /pool/filesystem_choices:
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Returns all available datasets, except the following:
            1. system datasets
            2. glusterfs datasets
            3. application(s) internal datasets

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_filesystem_choices_0"
  "/pool/id/{id}/get_disks":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Get all disks in use by pools.

        If `id` is provided only the disks from the given pool `id` will be returned.
  /pool/get_instance_by_name:
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns pool with name `name`. If `name` is not found, Validation
        error is raised.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_get_instance_by_name_0"
  /pool/import_disk:
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Import a disk, by copying its content to a pool.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_import_disk"
  /pool/import_disk_autodetect_fs_type:
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Autodetect filesystem type for `pool.import_disk`.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_import_disk_autodetect_fs_type_0"
  /pool/import_disk_msdosfs_locales:
    get:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get a list of locales for msdosfs type to be used in `pool.import_disk`.
  /pool/import_find:
    get:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns a job id which can be used to retrieve a list of pools
        available for

        import with the following details as a result of the job:

        name, guid, status, hostname.
  /pool/import_pool:
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Import a pool found with `pool.import_find`.


        If a `name` is specified the pool will be imported using that new name.


        `passphrase` DEPRECATED. GELI not supported on SCALE.


        If `enable_attachments` is set to true, attachments that were disabled during pool export will be

        re-enabled.


        Errors:
            ENOENT - Pool not found

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_import_pool_0"
  "/pool/id/{id}/is_upgraded":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Returns whether or not the pool of `id` is on the latest version
        and with all feature

        flags enabled.

  "/pool/id/{id}/offline":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Offline a disk from pool of id `id`.

        `label` is the vdev guid or device name.

  "/pool/id/{id}/online":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Online a disk from pool of id `id`.

        `label` is the vdev guid or device name.

  "/pool/id/{id}/processes":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Returns a list of running processes using this pool.
  "/pool/id/{id}/remove":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Remove a disk from pool of id `id`.

        `label` is the vdev guid or device name.

        Error codes:

            EZFS_NOSPC(2032): out of space to remove a device
            EZFS_NODEVICE(2017): no such device in pool
            EZFS_NOREPLICAS(2019): no valid replicas

  "/pool/id/{id}/replace":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Replace a disk on a pool.


        `label` is the ZFS guid or a device name

        `disk` is the identifier of a disk

        If `preserve_settings` is true, then settings (power management, S.M.A.R.T., etc.) of a disk being replaced

        will be applied to a new disk.

  "/pool/id/{id}/scrub":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Performs a scrub action to pool of `id`.

        `action` can be either of "START", "STOP" or "PAUSE".

  "/pool/id/{id}/upgrade":
    post:
      tags:
        - pool
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Upgrade pool of `id` to latest version with all feature flags.

  /pool/dataset:
    get:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query Pool Datasets with `query-filters` and `query-options`.


        We provide two ways to retrieve datasets. The first is a flat structure (default), where

        all datasets in the system are returned as separate objects which contain all data

        there is for their children. This retrieval type is slightly slower because of duplicates in each object.

        The second type is hierarchical, where only top level datasets are returned in the list. They contain all the

        children in the `children` key. This retrieval type is slightly faster.

        These options are controlled by the `query-options.extra.flat` attribute (default true).


        In some cases it might be desirable to only retrieve details of a dataset itself and not it's children, in this

        case `query-options.extra.retrieve_children` should be explicitly specified and set to `false` which will

        result in children not being retrieved.


        In case only some properties are desired to be retrieved for datasets, consumer should specify

        `query-options.extra.properties` which when `null` ( which is the default ) will retrieve all properties

        and otherwise a list can be specified like `["type", "used", "available"]` to retrieve selective properties.

        If no properties are desired, in that case an empty list should be sent.


        `query-options.extra.snapshots` can be set to retrieve snapshot(s) of dataset in question.


        `query-options.extra.snapshots_recursive` can be set to retrieve snapshot(s) recursively of dataset in question.

        If `query-options.extra.snapshots_recursive` and `query-options.extra.snapshots` are set, snapshot(s) will be

        retrieved recursively.


        `query-options.extra.snapshots_properties` can be specified to list out properties which should be retrieved

        for snapshot(s) related to each dataset. By default only name of the snapshot would be retrieved, however

        if `null` is specified all properties of the snapshot would be retrieved in this case.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Creates a dataset/zvol.


        `volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.

        `sparse` and `volblocksize` are only used for type=VOLUME.


        `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.

        There are 2 cases where ZFS encryption is not allowed for a dataset:

        1) Pool in question is GELI encrypted.

        2) If the parent dataset is encrypted with a passphrase and `name` is being created
           with a key for encrypting the dataset.

        `encryption_options` specifies configuration for encryption of dataset for `name` pool.

        `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase

        as a key.

        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.

        `encryption_options.generate_key` when enabled automatically generates the key to be used

        for dataset encryption.


        It should be noted that keys are stored by the system for automatic locking/unlocking

        on import/export of encrypted datasets. If that is not desired, dataset should be created

        with a passphrase as a key.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_create_0"
  "/pool/dataset/id/{id}":
    delete:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: |+
        Delete dataset/zvol `id`.

        `recursive` will also delete/destroy all children datasets.
        `force` will force delete busy datasets.

    get:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Query Pool Datasets with `query-filters` and `query-options`.


        We provide two ways to retrieve datasets. The first is a flat structure (default), where

        all datasets in the system are returned as separate objects which contain all data

        there is for their children. This retrieval type is slightly slower because of duplicates in each object.

        The second type is hierarchical, where only top level datasets are returned in the list. They contain all the

        children in the `children` key. This retrieval type is slightly faster.

        These options are controlled by the `query-options.extra.flat` attribute (default true).


        In some cases it might be desirable to only retrieve details of a dataset itself and not it's children, in this

        case `query-options.extra.retrieve_children` should be explicitly specified and set to `false` which will

        result in children not being retrieved.


        In case only some properties are desired to be retrieved for datasets, consumer should specify

        `query-options.extra.properties` which when `null` ( which is the default ) will retrieve all properties

        and otherwise a list can be specified like `["type", "used", "available"]` to retrieve selective properties.

        If no properties are desired, in that case an empty list should be sent.


        `query-options.extra.snapshots` can be set to retrieve snapshot(s) of dataset in question.


        `query-options.extra.snapshots_recursive` can be set to retrieve snapshot(s) recursively of dataset in question.

        If `query-options.extra.snapshots_recursive` and `query-options.extra.snapshots` are set, snapshot(s) will be

        retrieved recursively.


        `query-options.extra.snapshots_properties` can be specified to list out properties which should be retrieved

        for snapshot(s) related to each dataset. By default only name of the snapshot would be retrieved, however

        if `null` is specified all properties of the snapshot would be retrieved in this case.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: |+
        Updates a dataset/zvol `id`.

  "/pool/dataset/id/{id}/attachments":
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: |-
        Return a list of services dependent of this dataset.

        Responsible for telling the user whether there is a related
        share, asking for confirmation.

        Example return value:
        [
          {
            "type": "NFS Share",
            "service": "nfs",
            "attachments": ["/mnt/tank/work"]
          }
        ]
  /pool/dataset/change_key:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Change encryption properties for `id` encrypted dataset.


        Changing dataset encryption to use passphrase instead of a key is not allowed if:


        1) It has encrypted roots as children which are encrypted with a key

        2) If it is a root dataset where the system dataset is located


        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_change_key"
  /pool/dataset/checksum_choices:
    get:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve checksums supported for ZFS dataset.
  /pool/dataset/compression_choices:
    get:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve compression algorithm supported by ZFS.
  /pool/dataset/destroy_snapshots:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Destroy specified snapshots of a given dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_destroy_snapshots"
  /pool/dataset/encryption_algorithm_choices:
    get:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve encryption algorithms supported for ZFS dataset encryption.
  /pool/dataset/encryption_summary:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Retrieve summary of all encrypted roots under `id`.


        Keys/passphrase can be supplied to check if the keys are valid.


        It should be noted that there are 2 keys which show if a recursive unlock operation is

        done for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys

        namely are "unlock_successful" and "unlock_error". The former is a boolean value showing if unlock

        would succeed/fail. The latter is description why it failed if it failed.


        In some cases it's possible that the provided key/passphrase is valid but the path where the dataset is

        supposed to be mounted after being unlocked already exists and is not empty. In this case, unlock operation

        would fail and `unlock_error` will reflect this error appropriately. This can be overridden by setting

        `encryption_root_summary_options.datasets.X.force` boolean flag or by setting

        `encryption_root_summary_options.force` flag. In practice, when the dataset is going to be unlocked

        and these flags have been provided to `pool.dataset.unlock`, system will rename the directory/file path

        where the dataset should be mounted resulting in successful unlock of the dataset.


        If a dataset is already unlocked, it will show up as true for "unlock_successful" regardless of what

        key user provided as the unlock keys in the output are to reflect what a real unlock operation would

        behave. If user is interested in seeing if a provided key is valid or not, then the key to look out for

        in the output is "valid_key" which based on what system has in database or if a user provided one, validates

        the key and sets a boolean value for the dataset.


        Example output:

        [
            {
                "name": "vol",
                "key_format": "PASSPHRASE",
                "key_present_in_database": false,
                "valid_key": true,
                "locked": true,
                "unlock_error": null,
                "unlock_successful": true
            },
            {
                "name": "vol/c1/d1",
                "key_format": "PASSPHRASE",
                "key_present_in_database": false,
                "valid_key": false,
                "locked": true,
                "unlock_error": "Provided key is invalid",
                "unlock_successful": false
            },
            {
                "name": "vol/c",
                "key_format": "PASSPHRASE",
                "key_present_in_database": false,
                "valid_key": false,
                "locked": true,
                "unlock_error": "Key not provided",
                "unlock_successful": false
            },
            {
                "name": "vol/c/d2",
                "key_format": "PASSPHRASE",
                "key_present_in_database": false,
                "valid_key": false,
                "locked": true,
                "unlock_error": "Child cannot be unlocked when parent "vol/c" is locked and provided key is invalid",
                "unlock_successful": false
            }
        ]


        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_encryption_summary"
  /pool/dataset/export_key:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Export own encryption key for dataset `id`. If `download` is
        `true`, key will be downloaded in a json file

        where the same file can be used to unlock the dataset, otherwise it will be returned as string.


        Please refer to websocket documentation for downloading the file.


        A file might be downloaded from this endpoint. Please specify `?download=0` to fetch a method call result instead.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_export_key"
  /pool/dataset/export_keys:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Export keys for `id` and its children which are stored in the
        system. The exported file is a JSON file

        which has a dictionary containing dataset names as keys and their keys as the value.


        Please refer to websocket documentation for downloading the file.


        A file will be downloaded from this endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_export_keys_0"
  "/pool/dataset/id/{id}/get_quota":
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Return a list of the specified `quota_type` of  quotas on the ZFS
        dataset `ds`.

        Support `query-filters` and `query-options`. used_bytes and used_percentage

        may not instantly update as space is used.


        When quota_type is not DATASET, each quota entry has these fields:


        `id` - the uid or gid to which the quota applies.


        `name` - the user or group name to which the quota applies. Value is

        null if the id in the quota cannot be resolved to a user or group. This

        indicates that the user or group does not exist on the server.


        `quota` - the quota size in bytes.


        `used_bytes` - the amount of bytes the user has written to the dataset.

        A value of zero means unlimited.


        `used_percentage` - the percentage of the user or group quota consumed.


        `obj_quota` - the number of objects that may be owned by `id`.

        A value of zero means unlimited.


        'obj_used` - the nubmer of objects currently owned by `id`.


        `obj_used_percent` - the percentage of the `obj_quota` currently used.


        Note: SMB client requests to set a quota granting no space will result

        in an on-disk quota of 1 KiB.
  /pool/dataset/inherit_parent_encryption_properties:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Allows inheriting parent's encryption root discarding its current
        encryption settings. This

        can only be done where `id` has an encrypted parent and `id` itself is an encryption root.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_inherit_parent_encryption_properties_0"
  /pool/dataset/lock:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Locks `id` dataset. It will unmount the dataset and its children
        before locking.


        After the dataset has been unmounted, system will set immutable flag on the dataset's mountpoint where

        the dataset was mounted before it was locked making sure that the path cannot be modified. Once the dataset

        is unlocked, it will not be affected by this change and consumers can continue consuming it.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_lock"
  "/pool/dataset/id/{id}/permission":
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: |+
        Set permissions for a dataset `id`. Permissions may be specified as
        either a posix `mode` or an `acl`. This method is a wrapper around
        `filesystem.setperm`, `filesystem.setacl`, and `filesystem.chown`

        `filesystem.setperm` is called if `mode` is specified.
        `filesystem.setacl` is called if `acl` is specified or if the
        option `set_default_acl` is selected.
        `filesystem.chown` is called if neither `mode` nor `acl` is
        specified.

        The following `options` are supported:

        `set_default_acl` - apply a default ACL appropriate for specified
        dataset. Default ACL is `NFS4_RESTRICTED` or `POSIX_RESTRICTED`
        ACL template builtin with additional entries builtin_users group
        and builtin_administrators group. See documentation for
        `filesystem.acltemplate` for more details.

        `stripacl` - this option must be set in order to apply a POSIX
        mode to a dataset that has a non-trivial ACL. The effect will
        be to remove existing ACL and replace with specified mode.

        `recursive` - apply permissions recursively to dataset (all files
        and directories will be impacted.

        `traverse` - permit recursive job to traverse filesystem boundaries
        (child datasets).

  "/pool/dataset/id/{id}/processes":
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Return a list of processes using this dataset.


        Example return value:


        [
          {
            "pid": 2520,
            "name": "smbd",
            "service": "cifs"
          },
          {
            "pid": 97778,
            "name": "minio",
            "cmdline": "/usr/local/bin/minio -C /usr/local/etc/minio server --address=0.0.0.0:9000 --quiet /mnt/tank/wk"
          }
        ]
  "/pool/dataset/id/{id}/promote":
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: Promote the cloned dataset `id`.
  /pool/dataset/recommended_zvol_blocksize:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Helper method to get recommended size for a new zvol (dataset of
        type VOLUME).

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_recommended_zvol_blocksize_0"
  /pool/dataset/recordsize_choices:
    get:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
  "/pool/dataset/id/{id}/set_quota":
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        There are three over-arching types of quotas for ZFS datasets.

        1) dataset quotas and refquotas. If a DATASET quota type is specified in

        this API call, then the API acts as a wrapper for `pool.dataset.update`.


        2) User and group quotas. These limit the amount of disk space consumed

        by files that are owned by the specified users or groups. If the respective

        "object quota" type is specfied, then the quota limits the number of objects

        that may be owned by the specified user or group.


        3) Project quotas. These limit the amount of disk space consumed by files

        that are owned by the specified project. Project quotas are not yet implemended.


        This API allows users to set multiple quotas simultaneously by submitting a

        list of quotas. The list may contain all supported quota types.


        `ds` the name of the target ZFS dataset.


        `quotas` specifies a list of `quota_entry` entries to apply to dataset.


        `quota_entry` entries have these required parameters:


        `quota_type`: specifies the type of quota to apply to the dataset. Possible

        values are USER, USEROBJ, GROUP, GROUPOBJ, and DATASET. USEROBJ and GROUPOBJ

        quotas limit the number of objects consumed by the specified user or group.


        `id`: the uid, gid, or name to which the quota applies. If quota_type is

        'DATASET', then `id` must be either `QUOTA` or `REFQUOTA`.


        `quota_value`: the quota size in bytes. Setting a value of `0` removes

        the user or group quota.
  /pool/dataset/unlock:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Unlock `id` dataset.


        If `id` dataset is not encrypted an exception will be raised. There is one exception:

        when `id` is a root dataset and `unlock_options.recursive` is specified, encryption

        validation will not be performed for `id`. This allow unlocking encrypted children the `id` pool.


        For datasets which are encrypted with a passphrase, include the passphrase with

        `unlock_options.datasets`.


        Uploading a json file which contains encrypted dataset keys can be specified with

        `unlock_options.key_file`. The format is similar to that used for exporting encrypted dataset keys.


        `toggle_attachments` controls whether attachments  should be put in action after unlocking dataset(s).

        Toggling attachments can theoretically lead to service interruption when daemons configurations are reloaded

        (this should not happen,  and if this happens it should be considered a bug). As TrueNAS does not have a state

        for resources that should be unlocked but are still locked, disabling this option will put the system into an

        inconsistent state so it should really never be disabled.


        In some cases it's possible that the provided key/passphrase is valid but the path where the dataset is

        supposed to be mounted after being unlocked already exists and is not empty. In this case, unlock operation

        would fail. This can be overridden by setting `unlock_options.datasets.X.force` boolean flag or by setting

        `unlock_options.force` flag. When any of these flags are set, system will rename the existing

        directory/file path where the dataset should be mounted resulting in successful unlock of the dataset.


        A file might be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_unlock"
  /pool/dataset/unlock_services_restart_choices:
    post:
      tags:
        - pool.dataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get a mapping of services identifiers and labels that can be
        restart on dataset unlock.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_unlock_services_restart_choices_0"
  /pool/dataset/userprop:
    get:
      tags:
        - pool.dataset.userprop
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query all user properties for ZFS datasets.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - pool.dataset.userprop
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Create a user property for a given `id` dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_dataset_userprop_create_0"
  "/pool/dataset/userprop/id/{id}":
    delete:
      tags:
        - pool.dataset.userprop
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: Delete user property `dataset_user_prop_delete.name` for `id` dataset.
    get:
      tags:
        - pool.dataset.userprop
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Query all user properties for ZFS datasets.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - pool.dataset.userprop
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: Update `dataset_user_prop_update.name` user property for `id` dataset.
  /pool/resilver:
    get:
      tags:
        - pool.resilver
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - pool.resilver
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Configure Pool Resilver Priority.


        If `begin` time is greater than `end` time it means it will rollover the day, e.g.

        begin = "19:00", end = "05:00" will increase pool resilver priority from 19:00 of one day

        until 05:00 of the next day.


        `weekday` follows crontab(5) values 0-7 (0 or 7 is Sun).

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_resilver_update_0"
  /pool/scrub:
    get:
      tags:
        - pool.scrub
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - pool.scrub
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a scrub task for a pool.


        `threshold` refers to the minimum amount of time in days has to be passed before

        a scrub can run again.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_scrub_create_0"
  "/pool/scrub/id/{id}":
    delete:
      tags:
        - pool.scrub
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete scrub task of `id`.
    get:
      tags:
        - pool.scrub
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - pool.scrub
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update scrub task of `id`.
  /pool/scrub/run:
    post:
      tags:
        - pool.scrub
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Initiate a scrub of a pool `name` if last scrub was performed more
        than `threshold` days before.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_scrub_run"
  /pool/scrub/scrub:
    post:
      tags:
        - pool.scrub
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Start/Stop/Pause a scrub on pool `name`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_scrub_scrub"
  /pool/snapshottask:
    get:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a Periodic Snapshot Task


        Create a Periodic Snapshot Task that will take snapshots of specified `dataset` at specified `schedule`.

        Recursive snapshots can be created if `recursive` flag is enabled. You can `exclude` specific child datasets

        or zvols from the snapshot.

        Snapshots will be automatically destroyed after a certain amount of time, specified by

        `lifetime_value` and `lifetime_unit`.

        If multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot

        will be kept until the last of these tasks reaches its expiry time.

        Snapshots will be named according to `naming_schema` which is a `strftime`-like template for snapshot name

        and must contain `%Y`, `%m`, `%d`, `%H` and `%M`.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_snapshottask_create_0"
  "/pool/snapshottask/id/{id}":
    delete:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Delete a Periodic Snapshot Task with specific `id`

    get:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Update a Periodic Snapshot Task with specific `id`


        See the documentation for `create` method for information on payload contents

  "/pool/snapshottask/id/{id}/delete_will_change_retention_for":
    post:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Returns a list of snapshots which will change the retention if
        periodic snapshot task `id` is deleted.
  /pool/snapshottask/foreseen_count:
    post:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns a number of snapshots (per-dataset) being retained if a
        periodic snapshot task with specific parameters

        is created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pool_snapshottask_foreseen_count_0"
  /pool/snapshottask/max_count:
    get:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a maximum amount of snapshots (per-dataset) the system can
        sustain.
  /pool/snapshottask/max_total_count:
    get:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a maximum amount of snapshots (total) the system can sustain.
  "/pool/snapshottask/id/{id}/run":
    post:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Execute a Periodic Snapshot Task of `id`.
  "/pool/snapshottask/id/{id}/update_will_change_retention_for":
    post:
      tags:
        - pool.snapshottask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Returns a list of snapshots which will change the retention if
        periodic snapshot task `id` is updated

        with `data`.
  /replication:
    get:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a Replication Task


        Create a Replication Task that will push or pull ZFS snapshots to or from remote host..


        * `name` specifies a name for replication task

        * `direction` specifies whether task will `PUSH` or `PULL` snapshots

        * `transport` is a method of snapshots transfer:
          * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
            great performance
            `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
          * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
            and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
            to be open on `netcat_active_side`
            `ssh_credentials` is also required for control connection
          * `LOCAL` replicates to or from localhost
        * `source_datasets` is a non-empty list of datasets to replicate snapshots from

        * `target_dataset` is a dataset to put snapshots into. It must exist on target side

        * `recursive` and `exclude` have the same meaning as for Periodic Snapshot Task

        * `properties` control whether we should send dataset properties along with snapshots

        * `periodic_snapshot_tasks` is a list of periodic snapshot task IDs that are sources of snapshots for this
          replication task. Only push replication tasks can be bound to periodic snapshot tasks.
        * `naming_schema` is a list of naming schemas for pull replication

        * `also_include_naming_schema` is a list of naming schemas for push replication

        * `name_regex` will replicate all snapshots which names match specified regular expression

        * `auto` allows replication to run automatically on schedule or after bound periodic snapshot task

        * `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic
          snapshot tasks can have a schedule
        * `restrict_schedule` restricts when replication task with bound periodic snapshot tasks runs. For example,
          you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.
        * Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or
          `restrict_schedule`
        * `allow_from_scratch` will destroy all snapshots on target side and replicate everything from scratch if none
          of the snapshots on target side matches source snapshots
        * `readonly` controls destination datasets readonly property:
          * `SET` will set all destination datasets to readonly=on after finishing the replication
          * `REQUIRE` will require all existing destination datasets to have readonly=on property
          * `IGNORE` will avoid this kind of behavior
        * `hold_pending_snapshots` will prevent source snapshots from being deleted by retention of replication fails
          for some reason
        * `retention_policy` specifies how to delete old snapshots on target side:
          * `SOURCE` deletes snapshots that are absent on source side
          * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`
          * `NONE` does not delete any snapshots
        * `compression` compresses SSH stream. Available only for SSH transport

        * `speed_limit` limits speed of SSH stream. Available only for SSH transport

        * `large_block`, `embed` and `compressed` are various ZFS stream flag documented in `man zfs send`

        * `retries` specifies number of retries before considering replication failed

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/replication_create_0"
  "/replication/id/{id}":
    delete:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |+
        Delete a Replication Task with specific `id`

    get:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >+
        Update a Replication Task with specific `id`


        See the documentation for `create` method for information on payload contents

  /replication/count_eligible_manual_snapshots:
    post:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Count how many existing snapshots of `dataset` match `naming_schema`.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/replication_count_eligible_manual_snapshots_0"
  /replication/create_dataset:
    post:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Creates dataset on remote side


        Accepts `dataset` name, `transport` and SSH credentials ID (for non-local transport)

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/replication_create_dataset"
  /replication/list_datasets:
    post:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        List datasets on remote side

        Accepts `transport` and SSH credentials ID (for non-local transport)

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/replication_list_datasets"
  /replication/list_naming_schemas:
    get:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: List all naming schemas used in periodic snapshot and replication tasks.
  "/replication/id/{id}/restore":
    post:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Create the opposite of replication task `id` (PULL if it was PUSH
        and vice versa).
  "/replication/id/{id}/run":
    post:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Run Replication Task of `id`.
  /replication/run_onetime:
    post:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Run replication task without creating it.


        If `only_from_scratch` is `true` then replication will fail if target dataset already exists.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/replication_run_onetime_0"
  /replication/target_unmatched_snapshots:
    post:
      tags:
        - replication
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Check if target has any snapshots that do not exist on source.
        Returns these snapshots grouped by dataset.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/replication_target_unmatched_snapshots"
  /replication/config:
    get:
      tags:
        - replication.config
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - replication.config
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: "`max_parallel_replication_tasks` represents a maximum number of
        parallel replication tasks running."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/replication_config_update_0"
  /reporting:
    get:
      tags:
        - reporting
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - reporting
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Configure Reporting Database settings.


        If `cpu_in_percentage` is `true`, collectd reports CPU usage in percentage instead of "jiffies".


        `graphite` specifies a destination hostname or IP for collectd data sent by the Graphite plugin..


        `graphite_separateinstances` corresponds to collectd SeparateInstances option.


        `graph_age` specifies the maximum age of stored graphs in months. `graph_points` is the number of points for

        each hourly, daily, weekly, etc. graph. Changing these requires destroying the current reporting database,

        so when these fields are changed, an additional `confirm_rrd_destroy: true` flag must be present.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reporting_update_0"
  /reporting/clear:
    get:
      tags:
        - reporting
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Clear reporting database.
  /reporting/get_data:
    post:
      tags:
        - reporting
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Get reporting data for given graphs.


        List of possible graphs can be retrieved using `reporting.graphs` call.


        For the time period of the graph either `unit` and `page` OR `start` and `end` should be

        used, not both.


        `aggregate` will return aggregate available data for each graph (e.g. min, max, mean).

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reporting_get_data"
  /reporting/graphs:
    get:
      tags:
        - reporting
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
  /route/ipv4gw_reachable:
    post:
      tags:
        - route
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Get the IPv4 gateway and verify if it is reachable by any interface.

        Returns:
            bool: True if the gateway is reachable or otherwise False.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/route_ipv4gw_reachable_0"
  /route/system_routes:
    get:
      tags:
        - route
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Get current/applied network routes.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /rsyncd:
    get:
      tags:
        - rsyncd
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - rsyncd
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update Rsyncd Service Configuration.


        `auxiliary` attribute can be used to pass on any additional parameters from rsyncd.conf(5).
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rsyncd_update_0"
  /rsyncmod:
    get:
      tags:
        - rsyncmod
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - rsyncmod
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a Rsyncmod module.


        `path` represents the path to a dataset. Path length is limited to 1023 characters maximum as per the limit

        enforced by FreeBSD. It is possible that we reach this max length recursively while transferring data. In that

        case, the user must ensure the maximum path will not be too long or modify the recursed path to shorter

        than the limit.


        `maxconn` is an integer value representing the maximum number of simultaneous connections. Zero represents

        unlimited.


        `hostsallow` is a list of patterns to match hostname/ip address of a connecting client. If list is empty,

        all hosts are allowed.


        `hostsdeny` is a list of patterns to match hostname/ip address of a connecting client. If the pattern is

        matched, access is denied to the client. If no client should be denied, this should be left empty.


        `auxiliary` attribute can be used to pass on any additional parameters from rsyncd.conf(5).
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rsyncmod_create_0"
  "/rsyncmod/id/{id}":
    delete:
      tags:
        - rsyncmod
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete Rsyncmod module of `id`.
    get:
      tags:
        - rsyncmod
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - rsyncmod
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Rsyncmod module of `id`.
  /rsynctask:
    get:
      tags:
        - rsynctask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - rsynctask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a Rsync Task.


        See the comment in Rsyncmod about `path` length limits.


        `remotehost` is ip address or hostname of the remote system. If username differs on the remote host,

        "username@remote_host" format should be used.


        `mode` represents different operating mechanisms for Rsync i.e Rsync Module mode / Rsync SSH mode.


        `remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.


        `remotepath` specifies the path on the remote system.


        `validate_rpath` is a boolean which when sets validates the existence of the remote path.


        `direction` specifies if data should be PULLED or PUSHED from the remote system.


        `compress` when set reduces the size of the data which is to be transmitted.


        `archive` when set makes rsync run recursively, preserving symlinks, permissions, modification times, group,

        and special files.


        `delete` when set deletes files in the destination directory which do not exist in the source directory.


        `preserveperm` when set preserves original file permissions.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rsynctask_create_0"
  "/rsynctask/id/{id}":
    delete:
      tags:
        - rsynctask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete Rsync Task of `id`.
    get:
      tags:
        - rsynctask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - rsynctask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Rsync Task of `id`.
  "/rsynctask/id/{id}/run":
    post:
      tags:
        - rsynctask
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Job to run rsync task of `id`.

        Output is saved to job log excerpt (not syslog).
  /s3:
    get:
      tags:
        - s3
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - s3
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update S3 Service Configuration.


        `access_key` must only contain alphanumeric characters and should be between 5 and 20 characters.


        `secret_key` must only contain alphanumeric characters and should be between 8 and 40 characters.


        `browser` when set, enables the web user interface for the S3 Service.


        `certificate` is a valid certificate id which exists in the system. This is used to enable secure

        S3 connections.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/s3_update_0"
  /s3/bindip_choices:
    get:
      tags:
        - s3
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return ip choices for S3 service to use.
  /sensor/query:
    get:
      tags:
        - sensor
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
  /service:
    get:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query all system services with `query-filters` and `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  "/service/id/{id}":
    get:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Query all system services with `query-filters` and `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Update service entry of `id_or_name`.

        Currently it only accepts `enable` option which means whether the
        service should start on boot.
  /service/reload:
    post:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Reload the service specified by `service`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_reload"
  /service/restart:
    post:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Restart the service specified by `service`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_restart"
  /service/start:
    post:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Start the service specified by `service`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_start"
  /service/started:
    post:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Test if service specified by `service` has been started.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_started_0"
  /service/started_or_enabled:
    post:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Test if service specified by `service` is started or enabled to
        start automatically.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_started_or_enabled_0"
  /service/stop:
    post:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Stop the service specified by `service`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_stop"
  /service/terminate_process:
    post:
      tags:
        - service
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Terminate process by `pid`.


        First send `TERM` signal, then, if was not terminated in `timeout` seconds, send `KILL` signal.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_terminate_process"
  /sharing/nfs:
    get:
      tags:
        - sharing.nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - sharing.nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a NFS Share.


        `paths` is a list of valid paths which are configured to be shared on this share.


        `aliases` IGNORED, for now.


        `networks` is a list of authorized networks that are allowed to access the share having format

        "network/mask" CIDR notation. If empty, all networks are allowed.


        `hosts` is a list of IP's/hostnames which are allowed to access the share. If empty, all IP's/hostnames are

        allowed.


        `alldirs` is a boolean value which when set indicates that the client can mount any subdirectories of the

        selected pool or dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sharing_nfs_create_0"
  "/sharing/nfs/id/{id}":
    delete:
      tags:
        - sharing.nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete NFS Share of `id`.
    get:
      tags:
        - sharing.nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - sharing.nfs
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update NFS Share of `id`.
  /sharing/smb:
    get:
      tags:
        - sharing.smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query shares with filters. In clustered environments, local
        datastore query

        is bypassed in favor of clustered registry.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - sharing.smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a SMB Share.


        `purpose` applies common configuration presets depending on intended purpose.


        `path` path to export over the SMB protocol. If server is clustered, then this path will be

        relative to the `cluster_volname`.


        `timemachine` when set, enables Time Machine backups for this share.


        `ro` when enabled, prohibits write access to the share.


        `guestok` when enabled, allows access to this share without a password.


        `hostsallow` is a list of hostnames / IP addresses which have access to this share.


        `hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful

        of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL" which means that it will deny

        access to ALL hostnames except for the ones which have been listed in `hostsallow`.


        `acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL.


        `streams` enables support for storing alternate datastreams as filesystem extended attributes.


        `fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create

        ZFS snapshots through RPC.


        `shadowcopy` enables support for the volume shadow copy service.


        `auxsmbconf` is a string of additional smb4.conf parameters not covered by the system's API.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sharing_smb_create_0"
  "/sharing/smb/id/{id}":
    delete:
      tags:
        - sharing.smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Delete SMB Share of `id`. This will forcibly disconnect SMB clients
        that are accessing the share.
    get:
      tags:
        - sharing.smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Query shares with filters. In clustered environments, local
        datastore query

        is bypassed in favor of clustered registry.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - sharing.smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update SMB Share of `id`.
  /sharing/smb/presets:
    get:
      tags:
        - sharing.smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Retrieve pre-defined configuration sets for specific use-cases.
        These parameter

        combinations are often non-obvious, but beneficial in these scenarios.
  /sharing/webdav:
    get:
      tags:
        - sharing.webdav
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - sharing.webdav
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a Webdav Share.


        `ro` when enabled prohibits users from writing to this share.


        `perm` when enabled automatically recursively changes the ownership of this share to

        webdav ( user and group both ).
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sharing_webdav_create_0"
  "/sharing/webdav/id/{id}":
    delete:
      tags:
        - sharing.webdav
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Webdav Share of `id`.
    get:
      tags:
        - sharing.webdav
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - sharing.webdav
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Webdav Share of `id`.
  /smart:
    get:
      tags:
        - smart
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - smart
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update SMART Service Configuration.


        `interval` is an integer value in minutes which defines how often smartd activates to check if any tests

        are configured to run.


        `critical`, `informational` and `difference` are integer values on which alerts for SMART are configured if

        the disks temperature crosses the assigned threshold for each respective attribute. They default to 0 which

        indicates they are disabled.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smart_update_0"
  /smart/test:
    get:
      tags:
        - smart.test
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - smart.test
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Create a SMART Test Task.


        `disks` is a list of valid disks which should be monitored in this task.


        `type` is specified to represent the type of SMART test to be executed.


        `all_disks` when enabled sets the task to cover all disks in which case `disks` is not required.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smart_test_create_0"
  "/smart/test/id/{id}":
    delete:
      tags:
        - smart.test
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete SMART Test Task of `id`.
    get:
      tags:
        - smart.test
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - smart.test
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update SMART Test Task of `id`.
  /smart/test/disk_choices:
    post:
      tags:
        - smart.test
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Returns disk choices for S.M.A.R.T. test.

        `full_disk` will return full disk objects instead of just names.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smart_test_disk_choices_0"
  /smart/test/manual_test:
    post:
      tags:
        - smart.test
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Run manual SMART tests for `disks`.


        `type` indicates what type of SMART test will be ran and must be specified.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smart_test_manual_test_0"
  /smart/test/results:
    get:
      tags:
        - smart.test
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Get disk(s) S.M.A.R.T. test(s) results.




        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
  /smb:
    get:
      tags:
        - smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: "Update SMB Service Configuration.


        `netbiosname` defaults to the original hostname of the system.


        `netbiosalias` a list of netbios aliases. If Server is joined to
        an AD domain, additional Kerberos

        Service Principal Names will be generated for these aliases.


        `workgroup` specifies the NetBIOS workgroup to which the TrueNAS
        server belongs. This will be automatically

        set to the correct value during the process of joining an AD
        domain. `workgroup` and `netbiosname` should have different values.


        `enable_smb1` allows legacy SMB clients to connect to the server
        when enabled.


        `aapl_extensions` enables support for SMB2 protocol extensions
        for MacOS clients. This is not a requirement for MacOS support,

        but is currently a requirement for time machine support.


        `localmaster` when set, determines if the system participates in
        a browser election.


        `guest` attribute is specified to select the account to be used
        for guest access. It defaults to \"nobody\".


        The group specified as the SMB `admin_group` will be
        automatically added as a foreign group member of S-1-5-32-544
        (builtin\admins).

        This will afford the group all privileges granted to a local
        admin. Any SMB group may be selected (including AD groups).


        `ntlmv1_auth` enables a legacy and insecure authentication
        method, which may be required for legacy or poorly-implemented

        SMB clients.


        `smb_options` smb.conf parameters that are not covered by the
        above supported configuration options may be added as

        an smb_option. Not all options are tested or supported, and
        behavior of smb_options may change between releases. Stability of

        smb.conf options is not guaranteed."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smb_update_0"
  /smb/bindip_choices:
    get:
      tags:
        - smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        List of valid choices for IP addresses to which to bind the SMB service.
        Addresses assigned by DHCP are excluded from the results.
  /smb/client_count:
    get:
      tags:
        - smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return currently connected clients count.
  /smb/domain_choices:
    get:
      tags:
        - smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        List of domains visible to winbindd. Returns empty list if winbindd is
        stopped.
  /smb/get_remote_acl:
    post:
      tags:
        - smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Retrieves an ACL from a remote SMB server.


        `server` IP Address or hostname of the remote server


        `share` Share name


        `path` path on the remote SMB server. Use "" to separate path components


        `username` username to use for authentication


        `password` password to use for authentication


        `use_kerberos` use credentials to get a kerberos ticket for authentication.

        AD only.


        `output_format` format for resulting ACL data. Choices are either 'SMB',

        which will present the information as a Windows SD or 'LOCAL', which formats

        the ACL information according local filesystem of the TrueNAS server.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smb_get_remote_acl_0"
  /smb/status:
    post:
      tags:
        - smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Returns SMB server status (sessions, open files, locks, notifications).

        `info_level` type of information requests. Defaults to ALL.

        `status_options` additional options to filter query results. Supported
        values are as follows: `verbose` gives more verbose status output
        `fast` causes smbstatus to not check if the status data is valid by
        checking if the processes that the status data refer to all still
        exist. This speeds up execution on busy systems and clusters but
        might display stale data of processes that died without cleaning up
        properly. `restrict_user` specifies the limits results to the specified
        user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smb_status"
  /smb/unixcharset_choices:
    get:
      tags:
        - smb
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
  /smb/sharesec:
    get:
      tags:
        - smb.sharesec
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Use query-filters to search the SMB share ACLs present on server.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - smb.sharesec
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update the ACL on a given SMB share. Will write changes to both

        /var/db/system/samba4/share_info.tdb and the configuration file.

        Since an SMB share will _always_ have an ACL present, there is little

        distinction between the `create` and `update` methods apart from arguments.


        `share_name` - name of SMB share.


        `share_acl` a list of ACL entries (dictionaries) with the following keys:


        `ae_who_sid` who the ACL entry applies to expressed as a Windows SID


        `ae_who_name` who the ACL entry applies to expressed as a name. `ae_who_name` is

        a dictionary containing the following keys: `domain` that the user is a member of,

        `name` username in the domain. The domain for local users is the netbios name of

        the FreeNAS server.


        `ae_perm` string representation of the permissions granted to the user or group.

        `FULL` grants read, write, execute, delete, write acl, and change owner.

        `CHANGE` grants read, write, execute, and delete.

        `READ` grants read and execute.


        `ae_type` can be ALLOWED or DENIED.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smb_sharesec_create_0"
  "/smb/sharesec/id/{id}":
    delete:
      tags:
        - smb.sharesec
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Replace share ACL for the specified SMB share with the samba
        default ACL of S-1-1-0/FULL

        (Everyone - Full Control). In this case, access will be fully determined

        by the underlying filesystem ACLs and smb4.conf parameters governing access control

        and permissions.

        Share can be deleted by name or numerical by numerical index.
    get:
      tags:
        - smb.sharesec
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Use query-filters to search the SMB share ACLs present on server.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - smb.sharesec
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Update the ACL on the share specified by the numerical index `id`.
        Will write changes

        to both /var/db/system/samba4/share_info.tdb and the configuration file.
  /smb/sharesec/getacl:
    post:
      tags:
        - smb.sharesec
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        View the ACL information for `share_name`. The share ACL is
        distinct from filesystem

        ACLs which can be viewed by calling `filesystem.getacl`. `ae_who_name` will appear

        as `None` if the SMB service is stopped or if winbind is unable  to resolve the SID

        to a name.


        If the `option` `resolve_sids` is set to `False` then the returned ACL will not

        contain names.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/smb_sharesec_getacl"
  /smb/sharesec/synchronize_acls:
    get:
      tags:
        - smb.sharesec
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Synchronize the share ACL stored in the config database with
        Samba's running

        configuration as reflected in the share_info.tdb file.


        The only situation in which the configuration stored in the database will

        overwrite samba's running configuration is if share_info.tdb is empty. Samba

        fakes a single S-1-1-0:ALLOW/0x0/FULL entry in the absence of an entry for a

        share in share_info.tdb.
  /snmp:
    get:
      tags:
        - snmp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - snmp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update SNMP Service Configuration.


        `v3` when set enables SNMP version 3.


        `v3_username`, `v3_authtype`, `v3_password`, `v3_privproto` and `v3_privpassphrase` are only used when `v3`

        is enabled.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/snmp_update_0"
  /ssh:
    get:
      tags:
        - ssh
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - ssh
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Update settings of SSH daemon service.

        If `bindiface` is empty it will listen for all available addresses.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssh_update_0"
  /ssh/bindiface_choices:
    get:
      tags:
        - ssh
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Available choices for the bindiface attribute of SSH service.
  /staticroute:
    get:
      tags:
        - staticroute
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - staticroute
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a Static Route.


        Address families of `gateway` and `destination` should match when creating a static route.


        `description` is an optional attribute for any notes regarding the static route.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/staticroute_create_0"
  "/staticroute/id/{id}":
    delete:
      tags:
        - staticroute
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete Static Route of `id`.
    get:
      tags:
        - staticroute
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - staticroute
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Static Route of `id`.
  /stats/get_data:
    post:
      tags:
        - stats
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get data points from rrd files.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/stats_get_data"
  /stats/get_dataset_info:
    post:
      tags:
        - stats
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns info about a given dataset from some source.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/stats_get_dataset_info"
  /stats/get_sources:
    get:
      tags:
        - stats
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns an object with all available sources tried with metric datasets.
  /support:
    get:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Update Proactive Support settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/support_update_0"
  /support/attach_ticket:
    post:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Method to attach a file to a existing ticket.


        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/support_attach_ticket_0"
  /support/attach_ticket_max_size:
    get:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns maximum uploaded file size for `support.attach_ticket`
  /support/fetch_categories:
    post:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Fetch issue categories using access token `token`.
        Returns a dict with the category name as a key and id as value.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/support_fetch_categories_0"
  /support/fields:
    get:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns list of pairs of field names and field titles for Proactive
        Support.
  /support/is_available:
    get:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns whether Proactive Support is available for this product
        type and current license.
  /support/is_available_and_enabled:
    get:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns whether Proactive Support is available and enabled.
  /support/new_ticket:
    post:
      tags:
        - support
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Creates a new ticket for support.

        This is done using the support proxy API.

        For TrueNAS SCALE it will be created on JIRA and for TrueNAS SCALE Enterprise on Salesforce.


        For SCALE `criticality`, `environment`, `phone`, `name` and `email` attributes are not required.

        For SCALE Enterprise `token` and `type` attributes are not required.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/support_new_ticket_0"
  /system/boot_id:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Returns an unique boot identifier.

        It is supposed to be unique every system boot.
  /system/debug:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Download a debug file.

        A file will be downloaded from this endpoint.
  /system/environment:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Return environment in which product is running. Possible values:
        - DEFAULT
        - EC2
  /system/feature_enabled:
    post:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns whether the `feature` is enabled or not
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_feature_enabled_0"
  /system/host_id:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Retrieve a hex string that is generated based
        on the contents of the `/etc/hostid` file. This
        is a permanent value that persists across
        reboots/upgrades and can be used as a unique
        identifier for the machine.
  /system/info:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns basic system information.
  /system/is_freenas:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        FreeNAS is now TrueNAS CORE.

        DEPRECATED: Use `system.product_type`
  /system/is_stable:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns whether software version of the system is stable.
  /system/license_update:
    post:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Update license file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_license_update_0"
  /system/product_name:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns name of the product we are using.
  /system/product_type:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Returns the type of the product.

        SCALE - TrueNAS SCALE, community version
        SCALE_ENTERPRISE - TrueNAS SCALE Enterprise, appliance version
  /system/ready:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns whether the system completed boot and is ready to use
  /system/reboot:
    post:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Reboots the operating system.

        Emits an "added" event of name "system" and id "reboot".
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_reboot_0"
  /system/shutdown:
    post:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Shuts down the operating system.


        An "added" event of name "system" and id "shutdown" is emitted when shutdown is initiated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_shutdown_0"
  /system/state:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Returns system state:
        "BOOTING" - System is booting
        "READY" - System completed boot and is ready to use
        "SHUTTING_DOWN" - System is shutting down
  /system/version:
    get:
      tags:
        - system
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns software version of the system.
  /system/advanced:
    get:
      tags:
        - system.advanced
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - system.advanced
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update System Advanced Service Configuration.


        `consolemenu` should be disabled if the menu at console is not desired. It will default to standard login

        in the console if disabled.


        `autotune` when enabled executes autotune script which attempts to optimize the system based on the installed

        hardware.


        When `syslogserver` is defined, logs of `sysloglevel` or above are sent.


        `consolemsg` is a deprecated attribute and will be removed in further releases. Please, use `consolemsg`

        attribute in the `system.general` plugin.


        `isolated_gpu_pci_ids` is a list of PCI ids which are isolated from host system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_advanced_update_0"
  /system/advanced/sed_global_password:
    get:
      tags:
        - system.advanced
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns configured global SED password.
  /system/advanced/serial_port_choices:
    get:
      tags:
        - system.advanced
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get available choices for `serialport`.
  /system/advanced/syslog_certificate_authority_choices:
    get:
      tags:
        - system.advanced
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return choices of certificate authorities which can be used for
        `syslog_tls_certificate_authority`.
  /system/advanced/syslog_certificate_choices:
    get:
      tags:
        - system.advanced
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return choices of certificates which can be used for
        `syslog_tls_certificate`.
  /system/general:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update System General Service Configuration.


        `ui_certificate` is used to enable HTTPS access to the system. If `ui_certificate` is not configured on boot,

        it is automatically created by the system.


        `ui_httpsredirect` when set, makes sure that all HTTP requests are converted to HTTPS requests to better

        enhance security.


        `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6 addresses respectively which the system will

        listen on.


        `syslogserver` and `sysloglevel` are deprecated fields as of 11.3

        and will be permanently moved to system.advanced.update for 12.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_general_update_0"
  /system/general/country_choices:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns country choices.
  /system/general/kbdmap_choices:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns kbdmap choices.
  /system/general/language_choices:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns language choices.
  /system/general/local_url:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns configured local url in the format of protocol://host:port
  /system/general/timezone_choices:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns time zone choices.
  /system/general/ui_address_choices:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns UI ipv4 address choices.
  /system/general/ui_certificate_choices:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return choices of certificates which can be used for `ui_certificate`.
  /system/general/ui_httpsprotocols_choices:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns available HTTPS protocols.
  /system/general/ui_restart:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Restart HTTP server to use latest UI settings.

        HTTP server will be restarted after `delay` seconds.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_general_ui_restart_0"
    post:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Restart HTTP server to use latest UI settings.

        HTTP server will be restarted after `delay` seconds.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_general_ui_restart_0"
  /system/general/ui_v6address_choices:
    get:
      tags:
        - system.general
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns UI ipv6 address choices.
  /system/ntpserver:
    get:
      tags:
        - system.ntpserver
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - system.ntpserver
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Add an NTP Server.


        `address` specifies the hostname/IP address of the NTP server.


        `burst` when enabled makes sure that if server is reachable, sends a burst of eight packets instead of one.

        This is designed to improve timekeeping quality with the server command.


        `iburst` when enabled speeds up the initial synchronization, taking seconds rather than minutes.


        `prefer` marks the specified server as preferred. When all other things are equal, this host is chosen

        for synchronization acquisition with the server command. It is recommended that they be used for servers with

        time monitoring hardware.


        `minpoll` is minimum polling time in seconds. It must be a power of 2 and less than `maxpoll`.


        `maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`.


        `force` when enabled forces the addition of NTP server even if it is currently unreachable.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/system_ntpserver_create_0"
  "/system/ntpserver/id/{id}":
    delete:
      tags:
        - system.ntpserver
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete NTP server of `id`.
    get:
      tags:
        - system.ntpserver
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - system.ntpserver
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update NTP server of `id`.
  /systemdataset:
    get:
      tags:
        - systemdataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - systemdataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update System Dataset Service Configuration.


        `pool` is the name of a valid pool configured in the system which will be used to host the system dataset.


        `pool_exclude` can be specified to make sure that we don't place the system dataset on that pool if `pool`

        is not provided.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/systemdataset_update_0"
  /systemdataset/pool_choices:
    get:
      tags:
        - systemdataset
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve pool choices which can be used for configuring system dataset.
  /tftp:
    get:
      tags:
        - tftp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - tftp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update TFTP Service Configuration.


        `newfiles` when set enables network devices to send files to the system.


        `username` sets the user account which will be used to access `directory`. It should be ensured `username`

        has access to `directory`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tftp_update_0"
  /tftp/host_choices:
    get:
      tags:
        - tftp
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Return host choices for TFTP service to use.
  /truecommand:
    get:
      tags:
        - truecommand
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - truecommand
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Update Truecommand service settings.

        `api_key` is a valid API key generated by iX Portal.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/truecommand_update_0"
  /truenas/accept_eula:
    get:
      tags:
        - truenas
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Accept TrueNAS EULA.
  /truenas/get_chassis_hardware:
    get:
      tags:
        - truenas
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns what type of hardware this is, detected from dmidecode.
  /truenas/get_customer_information:
    get:
      tags:
        - truenas
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns stored customer information.
  /truenas/get_eula:
    get:
      tags:
        - truenas
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns the TrueNAS End-User License Agreement (EULA).
  /truenas/is_eula_accepted:
    get:
      tags:
        - truenas
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns whether the EULA is accepted or not.
  /truenas/is_production:
    get:
      tags:
        - truenas
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns if system is marked as production.
  /truenas/set_production:
    post:
      tags:
        - truenas
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Sets system production state and optionally sends initial debug.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/truenas_set_production"
  /truenas/update_customer_information:
    post:
      tags:
        - truenas
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Updates customer information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/truenas_update_customer_information_0"
  /tunable:
    get:
      tags:
        - tunable
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - tunable
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Create a Tunable.

        `var` represents name of the sysctl/loader/rc variable.

        `type` for SCALE should be one of the following:
        1) SYSCTL     -     Configure `var` for sysctl(8)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tunable_create_0"
  "/tunable/id/{id}":
    delete:
      tags:
        - tunable
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete Tunable of `id`.
    get:
      tags:
        - tunable
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - tunable
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update Tunable of `id`.
  /tunable/tunable_type_choices:
    get:
      tags:
        - tunable
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve tunable type choices supported in the system
  /update/check_available:
    post:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |+
        Checks if there is an update available from update server.

        status:
          - REBOOT_REQUIRED: an update has already been applied
          - AVAILABLE: an update is available
          - UNAVAILABLE: no update available
          - HA_UNAVAILABLE: HA is non-functional

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_check_available_0"
  /update/download:
    get:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Download updates using selected train.
  /update/file:
    post:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Updates the system using the uploaded .tar file.


        Use null `destination` to create a temporary location.


        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_file_0"
  /update/get_auto_download:
    get:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns if update auto-download is enabled.
  /update/get_pending:
    post:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Gets a list of packages already downloaded and ready to be applied.

        Each entry of the lists consists of type of operation and name of it, e.g.

          {
            "operation": "upgrade",
            "name": "baseos-11.0 -> baseos-11.1"
          }
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_get_pending_0"
  /update/get_trains:
    get:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns available trains dict and the currently configured train as
        well as the

        train of currently booted environment.
  /update/manual:
    post:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Update the system using a manual update file.

        `path` must be the absolute path to the update file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_manual"
  /update/set_auto_download:
    post:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Sets if update auto-download is enabled.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_set_auto_download_0"
  /update/set_train:
    post:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Set an update train to be used by default in updates.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_set_train_0"
  /update/update:
    post:
      tags:
        - update
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Downloads (if not already in cache) and apply an update.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_update_0"
  /ups:
    get:
      tags:
        - ups
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - ups
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update UPS Service Configuration.


        `powerdown` when enabled, sets UPS to power off after shutting down the system.


        `nocommwarntime` is a value in seconds which makes UPS Service wait the specified seconds before alerting that

        the Service cannot reach configured UPS.


        `shutdowntimer` is a value in seconds which tells the Service to wait specified seconds for the UPS before

        initiating a shutdown. This only applies when `shutdown` is set to "BATT".


        `shutdowncmd` is the command which is executed to initiate a shutdown. It defaults to "poweroff".
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ups_update_0"
  /ups/driver_choices:
    get:
      tags:
        - ups
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns choices of UPS drivers supported by the system.
  /ups/port_choices:
    get:
      tags:
        - ups
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
  /user:
    get:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query users with `query-filters` and `query-options`. As a
        performance optimization, only local users

        will be queried by default.


        Expanded information may be requested by specifying the extra option

        `"extra": {"additional_information": []}`.


        The following `additional_information` options are supported:

        `SMB` - include Windows SID and NT Name for user. If this option is not specified, then these
            keys will have `null` value.
        `DS` - include users from Directory Service (LDAP or Active Directory) in results


        `"extra": {"search_dscache": true}` is a legacy method of querying for directory services users.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a new user.


        If `uid` is not provided it is automatically filled with the next one available.


        `group` is required if `group_create` is false.


        `password` is required if `password_disabled` is false.


        Available choices for `shell` can be retrieved with `user.shell_choices`.


        `attributes` is a general-purpose object for storing arbitrary user information.


        `smb` specifies whether the user should be allowed access to SMB shares. User

        will also automatically be added to the `builtin_users` group.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_create_0"
  "/user/id/{id}":
    delete:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Delete user `id`.


        The `delete_group` option deletes the user primary group if it is not being used by

        any other user.
    get:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Query users with `query-filters` and `query-options`. As a
        performance optimization, only local users

        will be queried by default.


        Expanded information may be requested by specifying the extra option

        `"extra": {"additional_information": []}`.


        The following `additional_information` options are supported:

        `SMB` - include Windows SID and NT Name for user. If this option is not specified, then these
            keys will have `null` value.
        `DS` - include users from Directory Service (LDAP or Active Directory) in results


        `"extra": {"search_dscache": true}` is a legacy method of querying for directory services users.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update attributes of an existing user.
  /user/get_next_uid:
    get:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get the next available/free uid.
  /user/get_user_obj:
    post:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Returns dictionary containing information from struct passwd for
        the user specified by either

        the username or uid. Bypasses user cache.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_get_user_obj_0"
  /user/has_root_password:
    get:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Return whether the root user has a valid password set.


        This is used when the system is installed without a password and must be set on

        first use/login.
  "/user/id/{id}/pop_attribute":
    post:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Remove user general purpose `attributes` dictionary `key`.
  "/user/id/{id}/set_attribute":
    post:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Set user general purpose `attributes` dictionary `key` to `value`.


        e.g. Setting key="foo" value="var" will result in {"attributes": {"foo": "bar"}}
  /user/shell_choices:
    post:
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Return the available shell choices to be used in `user.create` and
        `user.update`.


        If `user_id` is provided, shell choices are filtered to ensure the user can access the shell choices provided.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_shell_choices_0"
  /vm:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a Virtual Machine (VM).


        `devices` is a list of virtualized hardware to add to the newly created Virtual Machine.

        Failure to attach a device destroys the VM and any resources allocated by the VM devices.


        Maximum of 16 guest virtual CPUs are allowed. By default, every virtual CPU is configured as a

        separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.

        `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`

        specifies number of threads per core.


        `ensure_display_device` when set ( the default ) will ensure that the guest always has access to a video device.

        For headless installations like ubuntu server this is required for the guest to operate properly. However

        for cases where consumer would like to use GPU passthrough and does not want a display device added should set

        this to `false`.


        `arch_type` refers to architecture type and can be specified for the guest. By default the value is `null` and

        system in this case will choose a reasonable default based on host.


        `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.

        By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`

        configuration.


        `shutdown_timeout` indicates the time in seconds the system waits for the VM to cleanly shutdown. During system

        shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within

        `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.


        `hide_from_msr` is a boolean which when set will hide the KVM hypervisor from standard MSR based discovery and

        is useful to enable when doing GPU passthrough.


        SCALE Angelfish: Specifying `devices` is deprecated and will be removed in next major release.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vm_create_0"
  "/vm/id/{id}":
    delete:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete a VM.
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Update all information of a specific VM.


        `devices` is a list of virtualized hardware to attach to the virtual machine. If `devices` is not present,

        no change is made to devices. If either the device list order or data stored by the device changes when the

        attribute is passed, these actions are taken:


        1) If there is no device in the `devices` list which was previously attached to the VM, that device is
           removed from the virtual machine.
        2) Devices are updated in the `devices` list when they contain a valid `id` attribute that corresponds to
           an existing device.
        3) Devices that do not have an `id` attribute are created and attached to `id` VM.
  /vm/bootloader_options:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Supported motherboard firmware options.
  "/vm/id/{id}/clone":
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Clone the VM `id`.

        `name` is an optional parameter for the cloned VM.
        If not provided it will append the next number available to the VM name.
  /vm/cpu_model_choices:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve CPU Model choices which can be used with a VM guest to
        emulate the CPU in the guest.
  /vm/flags:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns a dictionary with CPU flags for the hypervisor.
  /vm/get_available_memory:
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Get the current maximum amount of available memory to be allocated
        for VMs.


        If `overcommit` is true only the current used memory of running VMs will be accounted for.

        If false all memory (including unused) of runnings VMs will be accounted for.


        This will include memory shrinking ZFS ARC to the minimum.


        Memory is of course a very "volatile" resource, values may change abruptly between a

        second but I deem it good enough to give the user a clue about how much memory is

        available at the current moment and if a VM should be allowed to be launched.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vm_get_available_memory_0"
  /vm/get_console:
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get the console device from a given guest.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vm_get_console_0"
  /vm/get_display_devices:
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Get the display devices from a given guest. If a display device has
        password configured,

        `attributes.password_configured` will be set to `true`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vm_get_display_devices_0"
  /vm/get_memory_usage:
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vm_get_memory_usage_0"
  /vm/get_vmemory_in_use:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        The total amount of virtual memory in MB used by guests

            Returns a dict with the following information:
                RNP - Running but not provisioned
                PRD - Provisioned but not running
                RPRD - Running and provisioned
  /vm/guest_architecture_and_machine_choices:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Retrieve choices for supported guest architecture types and machine
        choices.


        Keys in the response would be supported guest architecture(s) on the host and their respective values would

        be supported machine type(s) for the specific architecture on the host.
  /vm/maximum_supported_vcpus:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns maximum supported VCPU's
  /vm/port_wizard:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        It returns the next available Display Server Port and Web Port.

        Returns a dict with two keys `port` and `web`.
  "/vm/id/{id}/poweroff":
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Poweroff a VM.
  /vm/random_mac:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Create a random mac address.

        Returns:
            str: with six groups of two hexadecimal digits
  /vm/resolution_choices:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve supported resolution choices for VM Display devices.
  "/vm/id/{id}/restart":
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Restart a VM.
  "/vm/id/{id}/start":
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Start a VM.


        options.overcommit defaults to false, meaning VMs are not allowed to

        start if there is not enough available memory to hold all configured VMs.

        If true, VM starts even if there is not enough memory for all configured VMs.


        Error codes:

            ENOMEM(12): not enough free memory to run the VM without overcommit
  "/vm/id/{id}/status":
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: |-
        Get the status of `id` VM.

        Returns a dict:
            - state, RUNNING or STOPPED
            - pid, process id if RUNNING
  "/vm/id/{id}/stop":
    post:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Stops a VM.


        For unresponsive guests who have exceeded the `shutdown_timeout` defined by the user and have become

        unresponsive, they required to be powered down using `vm.poweroff`. `vm.stop` is only going to send a

        shutdown signal to the guest and wait the desired `shutdown_timeout` value before tearing down guest vmemory.


        `force_after_timeout` when supplied, it will initiate poweroff for the VM forcing it to exit if it has

        not already stopped within the specified `shutdown_timeout`.
  /vm/supports_virtualization:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns "true" if system supports virtualization, "false" otherwise
  /vm/virtualization_details:
    get:
      tags:
        - vm
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve details if virtualization is supported on the system and
        in case why it's not supported if it isn't.
  /vm/device:
    get:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a new device for the VM of id `vm`.


        If `dtype` is the `RAW` type and a new raw file is to be created, `attributes.exists` will be passed as false.

        This means the API handles creating the raw file and raises the appropriate exception if file creation fails.


        If `dtype` is of `DISK` type and a new Zvol is to be created, `attributes.create_zvol` will be passed as

        true with valid `attributes.zvol_name` and `attributes.zvol_volsize` values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vm_device_create_0"
  "/vm/device/id/{id}":
    delete:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete a VM device of `id`.
    get:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: >-
        Update a VM device of `id`.


        Pass `attributes.size` to resize a `dtype` `RAW` device. The raw file will be resized.
  /vm/device/bind_choices:
    get:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Available choices for Bind attribute.
  /vm/device/disk_choices:
    get:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns disk choices for device type "DISK".
  /vm/device/iommu_enabled:
    get:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns "true" if iommu is enabled, "false" otherwise
  /vm/device/nic_attach_choices:
    get:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Available choices for NIC Attach attribute.
  /vm/device/passthrough_device:
    post:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Retrieve details about `device` PCI device.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vm_device_passthrough_device_0"
  /vm/device/passthrough_device_choices:
    get:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Available choices for PCI passthru devices.
  /vm/device/pptdev_choices:
    get:
      tags:
        - vm.device
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Available choices for PCI passthru device.
  /vmware:
    get:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create VMWare snapshot.


        `hostname` is a valid IP address / hostname of a VMWare host. When clustering, this is the vCenter server for

        the cluster.


        `username` and `password` are the credentials used to authorize access to the VMWare host.


        `datastore` is a valid datastore name which exists on the VMWare host.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vmware_create_0"
  "/vmware/id/{id}":
    delete:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Delete VMWare snapshot of `id`.
    get:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    put:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Update VMWare snapshot of `id`.
  /vmware/dataset_has_vms:
    post:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns "true" if `dataset` is configured with a VMWare snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vmware_dataset_has_vms"
  /vmware/get_datastores:
    post:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Get datastores from VMWare.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vmware_get_datastores_0"
  /vmware/get_virtual_machines:
    post:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Returns Virtual Machines on the VMWare host identified by `pk`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vmware_get_virtual_machines_0"
  /vmware/match_datastores_with_datasets:
    post:
      tags:
        - vmware
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >+
        Requests datastores from vCenter server and tries to match them
        with local filesystems.


        Returns a list of datastores, a list of local filesystems and guessed relationship between them.

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vmware_match_datastores_with_datasets_0"
  /webdav:
    get:
      tags:
        - webdav
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: ""
    put:
      tags:
        - webdav
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Update Webdav Service Configuration.


        `protocol` specifies which protocol should be used for connecting to Webdav Serivce. Value of "HTTPHTTPS"

        allows both HTTP and HTTPS connections to the share.


        `certssl` is a valid id of a certificate configured in the system. This is required if HTTPS connection is

        desired with Webdave Service.


        There are 3 types of Authentication supported with Webdav:

        1) NONE      -   No authentication is required

        2) BASIC     -   Password is sent over the network as plaintext

        3) DIGEST    -   Hash of the password is sent over the network


        `htauth` should be one of the valid types described above.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/webdav_update_0"
  /webdav/cert_choices:
    get:
      tags:
        - webdav
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Permitted certificate choices for webdav service.
  /webui/image:
    get:
      tags:
        - webui.image
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
    post:
      tags:
        - webui.image
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Create a new database entry with identifier as the tag, all entries
        are

        lowercased


        Then puts the file in the /var/db/system/webui/images directory


        A file must be uploaded to this endpoint. To upload a file, please send a multipart request with two parts. The first, named `data`, should contain a JSON-encoded payload, and the second, named `file`, should contain an uploaded file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/webui_image_create_0"
  "/webui/image/id/{id}":
    delete:
      tags:
        - webui.image
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: Remove the database entry, and then the item if it exists
    get:
      tags:
        - webui.image
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      description: "`query-options.extra` can be specified as query parameters with
        prefixing them with `extra.` prefix. For example,
        `extra.retrieve_properties=false` will pass `retrieve_properties` as an
        extra argument to pool/dataset endpoint."
  /zfs/snapshot:
    get:
      tags:
        - zfs.snapshot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: count
          in: query
          required: false
          schema:
            type: boolean
        - name: sort
          in: query
          required: false
          schema:
            type: string
      description: >-
        Query all ZFS Snapshots with `query-filters` and `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    post:
      tags:
        - zfs.snapshot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: Take a snapshot from a given dataset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zfs_snapshot_create_0"
  "/zfs/snapshot/id/{id}":
    delete:
      tags:
        - zfs.snapshot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: |-
        Delete snapshot of name `id`.

        `options.defer` will defer the deletion of snapshot.
    get:
      tags:
        - zfs.snapshot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: >-
        Query all ZFS Snapshots with `query-filters` and `query-options`.


        `query-options.extra` can be specified as query parameters with prefixing them with `extra.` prefix. For example, `extra.retrieve_properties=false` will pass `retrieve_properties` as an extra argument to pool/dataset endpoint.
    put:
      tags:
        - zfs.snapshot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: ""
  /zfs/snapshot/clone:
    post:
      tags:
        - zfs.snapshot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Clone a given snapshot to a new dataset.

        Returns:
            bool: True if succeed otherwise False.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zfs_snapshot_clone_0"
  /zfs/snapshot/remove:
    post:
      tags:
        - zfs.snapshot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: |-
        Remove a snapshot from a given dataset.

        Returns:
            bool: True if succeed otherwise False.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zfs_snapshot_remove_0"
  /zfs/snapshot/rollback:
    post:
      tags:
        - zfs.snapshot
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/Unauthorized"
      parameters: []
      description: >-
        Rollback to a given snapshot `id`.


        `options.recursive` will destroy any snapshots and bookmarks more recent than the one

        specified.


        `options.recursive_clones` is just like `recursive` but will also destroy any clones.


        `options.force` will force unmount of any clones.


        `options.recursive_rollback` will do a complete recursive rollback of each child snapshots for `id`. If

        any child does not have specified snapshot, this operation will fail.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zfs_snapshot_rollback"
servers:
  - url: https://truenas.example.com/api/v2.0
components:
  schemas:
    core_bulk_0:
      title: method
      type: string
    core_bulk_1:
      title: params
      default: []
      type: array
      items: {}
    core_bulk_2:
      title: description
      default: null
      type: string
      description: '`description` contains format string for job progress (e.g.
        "Deleting snapshot {0[dataset]}@{0[name]}")'
      nullable: true
    core_bulk:
      type: object
      properties:
        method:
          $ref: "#/components/schemas/core_bulk_0"
        params:
          $ref: "#/components/schemas/core_bulk_1"
        description:
          $ref: "#/components/schemas/core_bulk_2"
    core_debug_0:
      title: engine
      type: string
      enum:
        - PTVS
        - PYDEV
        - REMOTE_PDB
    core_debug_1:
      type: object
      properties:
        secret:
          title: secret
          type: string
        bind_address:
          title: bind_address
          default: 0.0.0.0
          type: string
        bind_port:
          type: integer
          title: bind_port
          default: 3000
        host:
          title: host
          type: string
        wait_attach:
          type: boolean
          title: wait_attach
          default: false
        local_path:
          title: local_path
          type: string
        threaded:
          type: boolean
          title: threaded
          default: false
      additionalProperties: false
      title: options
    core_debug:
      type: object
      properties:
        engine:
          $ref: "#/components/schemas/core_debug_0"
        options:
          $ref: "#/components/schemas/core_debug_1"
    core_download_0:
      title: method
      type: string
    core_download_1:
      title: args
      default: []
      type: array
      items: {}
    core_download_2:
      title: filename
      type: string
    core_download_3:
      type: boolean
      title: buffered
      default: false
      description: >-
        Non-`buffered` downloads will allow job to write to pipe as soon as
        download URL is requested, job will stay

        blocked meanwhile. `buffered` downloads must wait for job to complete before requesting download URL, job's

        pipe output will be buffered to ramfs.
    core_download:
      type: object
      properties:
        method:
          $ref: "#/components/schemas/core_download_0"
        args:
          $ref: "#/components/schemas/core_download_1"
        filename:
          $ref: "#/components/schemas/core_download_2"
        buffered:
          $ref: "#/components/schemas/core_download_3"
    core_job_abort_0:
      type: integer
      title: id
    core_job_update_0:
      type: integer
      title: id
    core_job_update_1:
      type: object
      properties:
        progress:
          type: object
          properties: {}
          additionalProperties: true
          title: progress
      additionalProperties: false
      title: job-update
    core_job_update:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/core_job_update_0"
        job-update:
          $ref: "#/components/schemas/core_job_update_1"
    core_job_wait_0:
      type: integer
      title: id
    core_ping_remote_0:
      type: object
      properties:
        type:
          title: type
          default: ICMP
          type: string
          enum:
            - ICMP
            - ICMPV4
            - ICMPV6
        hostname:
          title: hostname
          type: string
        timeout:
          type: integer
          title: timeout
          default: 4
      additionalProperties: false
      title: options
    core_resize_shell_0:
      title: id
      type: string
    core_resize_shell_1:
      type: integer
      title: cols
    core_resize_shell_2:
      type: integer
      title: rows
    core_resize_shell:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/core_resize_shell_0"
        cols:
          $ref: "#/components/schemas/core_resize_shell_1"
        rows:
          $ref: "#/components/schemas/core_resize_shell_2"
    core_set_debug_mode_0:
      type: boolean
      title: debug_mode
    acme_dns_authenticator_create_0:
      type: object
      properties:
        authenticator:
          title: authenticator
          type: string
          enum:
            - cloudflare
            - route53
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
          description: Specific attributes of each `authenticator`
        name:
          title: name
          description: User defined name of authenticator
          type: string
      additionalProperties: false
      title: acme_dns_authenticator_entry
    activedirectory_update_0:
      type: object
      properties:
        domainname:
          title: domainname
          type: string
          description: "`domainname` full DNS domain name of the Active Directory domain."
        bindname:
          title: bindname
          type: string
          description: "`bindname` username used to perform the intial domain join."
        bindpw:
          title: bindpw
          type: string
          description: |-
            `bindpw` password used to perform the initial domain join. User-
            provided credentials are used to obtain a kerberos ticket, which
            is used to perform the actual domain join.
        verbose_logging:
          type: boolean
          title: verbose_logging
          description: "`verbose_logging` increase logging during the domain join process."
        use_default_domain:
          type: boolean
          title: use_default_domain
          description: "`use_default_domain` controls whether domain users and groups have

            the pre-windows 2000 domain name prepended to the user
            account. When

            enabled, the user appears as \"administrator\" rather
            than

            \"EXAMPLE\administrator\""
        allow_trusted_doms:
          type: boolean
          title: allow_trusted_doms
          description: >-
            `allow_trusted_doms` enable support for trusted domains. If this

            parameter is enabled, then separate idmap backends _must_ be configured

            for each trusted domain, and the idmap cache should be cleared.
        allow_dns_updates:
          type: boolean
          title: allow_dns_updates
          description: >-
            `allow_dns_updates` during the domain join process, automatically

            generate DNS entries in the AD domain for the NAS. If this is disabled,

            then a domain administrator must manually add appropriate DNS entries

            for the NAS. This parameter is recommended for TrueNAS HA servers.
        disable_freenas_cache:
          type: boolean
          title: disable_freenas_cache
          description: >-
            `disable_freenas_cache` disables active caching of AD users and
            groups.

            When disabled, only users cached in winbind's internal cache are

            visible in GUI dropdowns. Disabling active caching is recommended

            in environments with a large amount of users.
        restrict_pam:
          type: boolean
          title: restrict_pam
          default: false
        site:
          title: site
          type: string
          description: >-
            `site` AD site of which the NAS is a member. This parameter is
            auto-

            detected during the domain join process. If no AD site is configured

            for the subnet in which the NAS is configured, then this parameter

            appears as 'Default-First-Site-Name'. Auto-detection is only performed

            during the initial domain join.
          nullable: true
        kerberos_realm:
          type: integer
          title: kerberos_realm
          description: >-
            `kerberos_realm` in which the server is located. This parameter is

            automatically populated during the initial domain join. If the NAS has

            an AD site configured and that site has multiple kerberos servers, then

            the kerberos realm is automatically updated with a site-specific

            configuration to use those servers. Auto-detection is only performed

            during initial domain join.
          nullable: true
        kerberos_principal:
          title: kerberos_principal
          type: string
          description: |-
            `kerberos_principal` kerberos principal to use for AD-related
            operations outside of Samba. After intial domain join, this field is
            updated with the kerberos principal associated with the AD machine
            account for the NAS.
          nullable: true
        timeout:
          type: integer
          title: timeout
          default: 60
          description: >-
            `timeout` timeout value for winbind-related operations. This value
            may

            need to be increased in  environments with high latencies for

            communications with domain controllers or a large number of domain

            controllers. Lowering the value may cause status checks to fail.
        dns_timeout:
          type: integer
          title: dns_timeout
          default: 10
          description: >-
            `dns_timeout` timeout value for DNS queries during the initial
            domain

            join. This value is also set as the NETWORK_TIMEOUT in the ldap config

            file.
        nss_info:
          title: nss_info
          default: ""
          type: string
          enum:
            - SFU
            - SFU20
            - RFC2307
          description: >-
            `nss_info` controls how Winbind retrieves Name Service Information
            to

            construct a user's home directory and login shell. This parameter

            is only effective if the Active Directory Domain Controller supports

            the Microsoft Services for Unix (SFU) LDAP schema.
          nullable: true
        createcomputer:
          title: createcomputer
          type: string
          description: |-
            `createcomputer` Active Directory Organizational Unit in which new
            computer accounts are created.
        netbiosname:
          title: netbiosname
          type: string
        netbiosname_b:
          title: netbiosname_b
          type: string
        netbiosalias:
          title: netbiosalias
          default: []
          type: array
          items: {}
        enable:
          type: boolean
          title: enable
          description: >-
            The Active Directory service is started after a configuration

            update if the service was initially disabled, and the updated

            configuration sets `enable` to `True`. The Active Directory

            service is stopped if `enable` is changed to `False`. If the

            configuration is updated, but the initial `enable` state is `True`, and

            remains unchanged, then the samba server is only restarted.
      additionalProperties: false
      title: activedirectory_update
    activedirectory_domain_info_0:
      title: domain
      default: ""
      type: string
    activedirectory_leave_0:
      type: object
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      additionalProperties: false
      title: kerberos_username_password
    alert_dismiss_0:
      title: uuid
      type: string
    alert_restore_0:
      title: uuid
      type: string
    alertclasses_update_0:
      type: object
      properties:
        classes:
          type: object
          properties: {}
          additionalProperties: true
          title: classes
      additionalProperties: false
      title: alertclasses_entry
    alertservice_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          type: string
          description: >-
            Create an Alert Service of specified `type`.

            If `enabled`, it sends alerts to the configured `type` of Alert Service.
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
        level:
          title: level
          type: string
          enum:
            - INFO
            - NOTICE
            - WARNING
            - ERROR
            - CRITICAL
            - ALERT
            - EMERGENCY
        enabled:
          type: boolean
          title: enabled
          default: true
          description: If `enabled`, it sends alerts to the configured `type` of Alert
            Service.
      additionalProperties: false
      title: alert_service_create
    alertservice_test_0:
      type: object
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          type: string
          description: Send a test alert using `type` of Alert Service.
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
        level:
          title: level
          type: string
          enum:
            - INFO
            - NOTICE
            - WARNING
            - ERROR
            - CRITICAL
            - ALERT
            - EMERGENCY
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: alert_service_create
    api_key_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
        allowlist:
          title: allowlist
          default: []
          type: array
          items:
            type: object
            properties:
              method:
                title: method
                type: string
                enum:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - CALL
                  - SUBSCRIBE
              resource:
                title: resource
                type: string
            additionalProperties: false
            title: allowlist_item
      additionalProperties: false
      title: api_key_create
    auth_check_password_0:
      title: username
      type: string
    auth_check_password_1:
      title: password
      type: string
    auth_check_password:
      type: object
      properties:
        username:
          $ref: "#/components/schemas/auth_check_password_0"
        password:
          $ref: "#/components/schemas/auth_check_password_1"
    auth_check_user_0:
      title: username
      type: string
    auth_check_user_1:
      title: password
      type: string
    auth_check_user:
      type: object
      properties:
        username:
          $ref: "#/components/schemas/auth_check_user_0"
        password:
          $ref: "#/components/schemas/auth_check_user_1"
    auth_generate_token_0:
      type: integer
      title: ttl
      default: 600
      description: >-
        `ttl` stands for Time To Live, in seconds. The token will be
        invalidated if the connection

        has been inactive for a time greater than this.
      nullable: true
    auth_generate_token_1:
      type: object
      properties: {}
      additionalProperties: true
      title: attrs
    auth_generate_token:
      type: object
      properties:
        ttl:
          $ref: "#/components/schemas/auth_generate_token_0"
        attrs:
          $ref: "#/components/schemas/auth_generate_token_1"
    auth_twofactor_update_0:
      type: object
      properties:
        enabled:
          type: boolean
          title: enabled
        otp_digits:
          type: integer
          title: otp_digits
          description: "`otp_digits` represents number of allowed digits in the OTP."
        window:
          type: integer
          title: window
          description: "`window` extends the validity to `window` many counter ticks
            before and after the current one."
        interval:
          type: integer
          title: interval
        services:
          type: object
          properties:
            ssh:
              type: boolean
              title: ssh
              default: false
          additionalProperties: false
          title: services
      additionalProperties: false
      title: auth_twofactor_entry
    auth_twofactor_verify_0:
      title: token
      type: string
      nullable: true
    boot_attach_0:
      title: dev
      type: string
    boot_attach_1:
      type: object
      properties:
        expand:
          type: boolean
          title: expand
          default: false
      additionalProperties: false
      title: options
    boot_attach:
      type: object
      properties:
        dev:
          $ref: "#/components/schemas/boot_attach_0"
        options:
          $ref: "#/components/schemas/boot_attach_1"
    boot_detach_0:
      title: dev
      type: string
    boot_replace_0:
      title: label
      type: string
    boot_replace_1:
      title: dev
      type: string
    boot_replace:
      type: object
      properties:
        label:
          $ref: "#/components/schemas/boot_replace_0"
        dev:
          $ref: "#/components/schemas/boot_replace_1"
    boot_set_scrub_interval_0:
      type: integer
      title: interval
    bootenv_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: >-
            Create a new boot environment using `name`.

            If a new boot environment is desired which is a clone of another boot environment, `source` can be passed.

            Then, a new boot environment of `name` is created using boot environment `source` by cloning it.
        source:
          title: source
          type: string
          description: >-
            If a new boot environment is desired which is a clone of another
            boot environment, `source` can be passed.

            Then, a new boot environment of `name` is created using boot environment `source` by cloning it.
      additionalProperties: false
      title: bootenv_create
    catalog_create_0:
      type: object
      properties:
        label:
          title: label
          type: string
        repository:
          title: repository
          type: string
        branch:
          title: branch
          type: string
        preferred_trains:
          title: preferred_trains
          default: []
          type: array
          items: {}
        force:
          type: boolean
          title: force
          default: false
      additionalProperties: false
      title: catalog_entry
    catalog_get_item_details_0:
      title: item_name
      type: string
    catalog_get_item_details_1:
      type: object
      properties:
        cache:
          type: boolean
          title: cache
        catalog:
          title: catalog
          type: string
        train:
          title: train
          type: string
      additionalProperties: false
      title: item_version_details
    catalog_get_item_details:
      type: object
      properties:
        item_name:
          $ref: "#/components/schemas/catalog_get_item_details_0"
        item_version_details:
          $ref: "#/components/schemas/catalog_get_item_details_1"
    catalog_items_0:
      title: label
      type: string
      description: >-
        Retrieve item details for `label` catalog.

        `options.cache` is a boolean which when set will try to get items details for `label` catalog from cache

        if available.
    catalog_items_1:
      type: object
      properties:
        cache:
          type: boolean
          title: cache
          default: true
        cache_only:
          type: boolean
          title: cache_only
          default: false
        retrieve_all_trains:
          type: boolean
          title: retrieve_all_trains
          default: true
        trains:
          title: trains
          default: []
          type: array
          items:
            title: train_name
            type: string
      additionalProperties: false
      title: options
    catalog_items:
      type: object
      properties:
        label:
          $ref: "#/components/schemas/catalog_items_0"
        options:
          $ref: "#/components/schemas/catalog_items_1"
    catalog_sync_0:
      title: label
      type: string
    catalog_validate_0:
      title: label
      type: string
      description: Validates `label` catalog format which includes validating trains
        and applications with their versions.
    certificate_create_0:
      type: object
      properties:
        tos:
          type: boolean
          title: tos
        dns_mapping:
          type: object
          properties: {}
          additionalProperties: true
          title: dns_mapping
        csr_id:
          type: integer
          title: csr_id
        signedby:
          type: integer
          title: signedby
        key_length:
          type: integer
          title: key_length
        renew_days:
          type: integer
          title: renew_days
        type:
          type: integer
          title: type
        lifetime:
          type: integer
          title: lifetime
        serial:
          type: integer
          title: serial
        acme_directory_uri:
          title: acme_directory_uri
          type: string
        certificate:
          title: certificate
          type: string
        city:
          title: city
          type: string
        common:
          title: common
          type: string
          nullable: true
        country:
          title: country
          type: string
        CSR:
          title: CSR
          type: string
        ec_curve:
          title: ec_curve
          default: SECP384R1
          type: string
          enum:
            - BrainpoolP512R1
            - BrainpoolP384R1
            - BrainpoolP256R1
            - SECP256K1
            - SECP384R1
            - SECP521R1
            - ed25519
          description: >-
            `key_type` attribute. If the `ec_curve` attribute is not specified
            for the Elliptic Curve Key, then default to

            using "BrainpoolP384R1" curve.
        email:
          title: email
          type: string
        key_type:
          title: key_type
          default: RSA
          type: string
          enum:
            - RSA
            - EC
          description: >-
            `key_type` attribute. If the `ec_curve` attribute is not specified
            for the Elliptic Curve Key, then default to

            using "BrainpoolP384R1" curve.
        name:
          title: name
          type: string
        organization:
          title: organization
          type: string
        organizational_unit:
          title: organizational_unit
          type: string
        passphrase:
          title: passphrase
          type: string
        privatekey:
          title: privatekey
          type: string
        state:
          title: state
          type: string
        create_type:
          title: create_type
          type: string
          enum:
            - CERTIFICATE_CREATE_INTERNAL
            - CERTIFICATE_CREATE_IMPORTED
            - CERTIFICATE_CREATE_CSR
            - CERTIFICATE_CREATE_IMPORTED_CSR
            - CERTIFICATE_CREATE_ACME
          description: >-
            Certificates are classified under following types and the necessary
            keywords to be passed

            for `create_type` attribute to create the respective type of certificate

            A type is selected by the Certificate Service based on `create_type`. The rest of the values in `data` are

            validated accordingly and finally a certificate is made based on the selected type.
        digest_algorithm:
          title: digest_algorithm
          type: string
          enum:
            - SHA224
            - SHA256
            - SHA384
            - SHA512
        san:
          title: san
          default: []
          type: array
          items:
            title: san
            type: string
        cert_extensions:
          type: object
          properties:
            BasicConstraints:
              type: object
              properties:
                ca:
                  type: boolean
                  title: ca
                  default: false
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                path_length:
                  type: integer
                  title: path_length
                  default: null
                  nullable: true
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: BasicConstraints
            AuthorityKeyIdentifier:
              type: object
              properties:
                authority_cert_issuer:
                  type: boolean
                  title: authority_cert_issuer
                  default: false
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: AuthorityKeyIdentifier
            ExtendedKeyUsage:
              type: object
              properties:
                usages:
                  title: usages
                  default: []
                  type: array
                  items:
                    title: usage
                    type: string
                    enum:
                      - ANY_EXTENDED_KEY_USAGE
                      - CLIENT_AUTH
                      - CODE_SIGNING
                      - EMAIL_PROTECTION
                      - OCSP_SIGNING
                      - SERVER_AUTH
                      - TIME_STAMPING
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: ExtendedKeyUsage
            KeyUsage:
              type: object
              properties:
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                digital_signature:
                  type: boolean
                  title: digital_signature
                  default: false
                content_commitment:
                  type: boolean
                  title: content_commitment
                  default: false
                key_encipherment:
                  type: boolean
                  title: key_encipherment
                  default: false
                data_encipherment:
                  type: boolean
                  title: data_encipherment
                  default: false
                key_agreement:
                  type: boolean
                  title: key_agreement
                  default: false
                key_cert_sign:
                  type: boolean
                  title: key_cert_sign
                  default: false
                crl_sign:
                  type: boolean
                  title: crl_sign
                  default: false
                encipher_only:
                  type: boolean
                  title: encipher_only
                  default: false
                decipher_only:
                  type: boolean
                  title: decipher_only
                  default: false
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: KeyUsage
          additionalProperties: false
          title: cert_extensions
          description: "`cert_extensions` can be specified to set X509v3 extensions."
      additionalProperties: false
      title: certificate_create
    certificateauthority_create_0:
      type: object
      properties:
        tos:
          type: boolean
          title: tos
        csr_id:
          type: integer
          title: csr_id
        signedby:
          type: integer
          title: signedby
        key_length:
          type: integer
          title: key_length
        renew_days:
          type: integer
          title: renew_days
        type:
          type: integer
          title: type
        lifetime:
          type: integer
          title: lifetime
        serial:
          type: integer
          title: serial
        acme_directory_uri:
          title: acme_directory_uri
          type: string
        certificate:
          title: certificate
          type: string
        city:
          title: city
          type: string
        common:
          title: common
          type: string
          nullable: true
        country:
          title: country
          type: string
        CSR:
          title: CSR
          type: string
        ec_curve:
          title: ec_curve
          default: SECP384R1
          type: string
          enum:
            - BrainpoolP512R1
            - BrainpoolP384R1
            - BrainpoolP256R1
            - SECP256K1
            - SECP384R1
            - SECP521R1
            - ed25519
          description: >-
            Created certificate authorities use RSA keys by default. If an
            Elliptic Curve Key is desired, then it can be

            specified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic

            Curve Key, default to using "BrainpoolP384R1" curve.
        email:
          title: email
          type: string
        key_type:
          title: key_type
          default: RSA
          type: string
          enum:
            - RSA
            - EC
          description: >-
            Created certificate authorities use RSA keys by default. If an
            Elliptic Curve Key is desired, then it can be

            specified with the `key_type` attribute. If the `ec_curve` attribute is not specified for the Elliptic

            Curve Key, default to using "BrainpoolP384R1" curve.
        name:
          title: name
          type: string
        organization:
          title: organization
          type: string
        organizational_unit:
          title: organizational_unit
          type: string
        passphrase:
          title: passphrase
          type: string
        privatekey:
          title: privatekey
          type: string
        state:
          title: state
          type: string
        create_type:
          title: create_type
          type: string
          enum:
            - CA_CREATE_INTERNAL
            - CA_CREATE_IMPORTED
            - CA_CREATE_INTERMEDIATE
          description: >-
            Certificate Authorities are classified under following types with
            the necessary keywords to be passed

            for `create_type` attribute to create the respective type of certificate authority

            A type is selected by the Certificate Authority Service based on `create_type`. The rest of the values

            are validated accordingly and finally a certificate is made based on the selected type.
        digest_algorithm:
          title: digest_algorithm
          type: string
          enum:
            - SHA224
            - SHA256
            - SHA384
            - SHA512
        san:
          title: san
          default: []
          type: array
          items:
            title: san
            type: string
        cert_extensions:
          type: object
          properties:
            BasicConstraints:
              type: object
              properties:
                ca:
                  type: boolean
                  title: ca
                  default: true
                enabled:
                  type: boolean
                  title: enabled
                  default: true
                path_length:
                  type: integer
                  title: path_length
                  default: null
                  nullable: true
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: true
              additionalProperties: false
              title: BasicConstraints
            AuthorityKeyIdentifier:
              type: object
              properties:
                authority_cert_issuer:
                  type: boolean
                  title: authority_cert_issuer
                  default: false
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: AuthorityKeyIdentifier
            ExtendedKeyUsage:
              type: object
              properties:
                usages:
                  title: usages
                  default:
                    - SERVER_AUTH
                  type: array
                  items:
                    title: usage
                    type: string
                    enum:
                      - ANY_EXTENDED_KEY_USAGE
                      - CLIENT_AUTH
                      - CODE_SIGNING
                      - EMAIL_PROTECTION
                      - OCSP_SIGNING
                      - SERVER_AUTH
                      - TIME_STAMPING
                enabled:
                  type: boolean
                  title: enabled
                  default: true
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: ExtendedKeyUsage
            KeyUsage:
              type: object
              properties:
                enabled:
                  type: boolean
                  title: enabled
                  default: true
                digital_signature:
                  type: boolean
                  title: digital_signature
                  default: false
                content_commitment:
                  type: boolean
                  title: content_commitment
                  default: false
                key_encipherment:
                  type: boolean
                  title: key_encipherment
                  default: false
                data_encipherment:
                  type: boolean
                  title: data_encipherment
                  default: false
                key_agreement:
                  type: boolean
                  title: key_agreement
                  default: false
                key_cert_sign:
                  type: boolean
                  title: key_cert_sign
                  default: true
                crl_sign:
                  type: boolean
                  title: crl_sign
                  default: true
                encipher_only:
                  type: boolean
                  title: encipher_only
                  default: false
                decipher_only:
                  type: boolean
                  title: decipher_only
                  default: false
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: true
              additionalProperties: false
              title: KeyUsage
          additionalProperties: false
          title: cert_extensions
          description: "`cert_extensions` can be specified to set X509v3 extensions."
        add_to_trusted_store:
          type: boolean
          title: add_to_trusted_store
          default: false
      additionalProperties: false
      title: certificate_create
    certificateauthority_ca_sign_csr_0:
      type: object
      properties:
        ca_id:
          type: integer
          title: ca_id
          description: >-
            Sign CSR by Certificate Authority of `ca_id`

            Sign CSR's and generate a certificate from it. `ca_id` provides which CA is to be used for signing

            a CSR of `csr_cert_id` which exists in the system
        csr_cert_id:
          type: integer
          title: csr_cert_id
          description: >-
            Sign CSR's and generate a certificate from it. `ca_id` provides
            which CA is to be used for signing

            a CSR of `csr_cert_id` which exists in the system
        name:
          title: name
          type: string
        cert_extensions:
          type: object
          properties:
            BasicConstraints:
              type: object
              properties:
                ca:
                  type: boolean
                  title: ca
                  default: false
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                path_length:
                  type: integer
                  title: path_length
                  default: null
                  nullable: true
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: BasicConstraints
            AuthorityKeyIdentifier:
              type: object
              properties:
                authority_cert_issuer:
                  type: boolean
                  title: authority_cert_issuer
                  default: false
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: AuthorityKeyIdentifier
            ExtendedKeyUsage:
              type: object
              properties:
                usages:
                  title: usages
                  default: []
                  type: array
                  items:
                    title: usage
                    type: string
                    enum:
                      - ANY_EXTENDED_KEY_USAGE
                      - CLIENT_AUTH
                      - CODE_SIGNING
                      - EMAIL_PROTECTION
                      - OCSP_SIGNING
                      - SERVER_AUTH
                      - TIME_STAMPING
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: ExtendedKeyUsage
            KeyUsage:
              type: object
              properties:
                enabled:
                  type: boolean
                  title: enabled
                  default: false
                digital_signature:
                  type: boolean
                  title: digital_signature
                  default: false
                content_commitment:
                  type: boolean
                  title: content_commitment
                  default: false
                key_encipherment:
                  type: boolean
                  title: key_encipherment
                  default: false
                data_encipherment:
                  type: boolean
                  title: data_encipherment
                  default: false
                key_agreement:
                  type: boolean
                  title: key_agreement
                  default: false
                key_cert_sign:
                  type: boolean
                  title: key_cert_sign
                  default: false
                crl_sign:
                  type: boolean
                  title: crl_sign
                  default: false
                encipher_only:
                  type: boolean
                  title: encipher_only
                  default: false
                decipher_only:
                  type: boolean
                  title: decipher_only
                  default: false
                extension_critical:
                  type: boolean
                  title: extension_critical
                  default: false
              additionalProperties: false
              title: KeyUsage
          additionalProperties: false
          title: cert_extensions
          description: "`cert_extensions` can be specified if specific extensions are to
            be set in the newly signed certificate."
      additionalProperties: false
      title: ca_sign_csr
    chart_release_create_0:
      type: object
      properties:
        values:
          type: object
          properties: {}
          additionalProperties: true
          title: values
        catalog:
          title: catalog
          type: string
          description: >-
            `catalog` is a valid catalog id where system will look for catalog
            `item` details.

            `train` is which train to look for under `catalog` i.e stable / testing etc.
        item:
          title: item
          type: string
          description: >-
            `catalog` is a valid catalog id where system will look for catalog
            `item` details.

            `version` specifies the catalog `item` version.
        release_name:
          title: release_name
          type: string
          description: "`release_name` is the name which will be used to identify the
            created chart release."
        train:
          title: train
          default: charts
          type: string
          description: "`train` is which train to look for under `catalog` i.e stable /
            testing etc."
        version:
          title: version
          default: latest
          type: string
          description: "`version` specifies the catalog `item` version."
      additionalProperties: false
      title: chart_release_create
    chart_release_events_0:
      title: release_name
      type: string
    chart_release_pod_console_choices_0:
      title: release_name
      type: string
    chart_release_pod_logs_0:
      title: release_name
      type: string
      description: Export logs of `options.container_name` container in
        `options.pod_name` pod in `release_name` chart release.
    chart_release_pod_logs_1:
      type: object
      properties:
        limit_bytes:
          type: integer
          title: limit_bytes
          default: null
          nullable: true
        tail_lines:
          type: integer
          title: tail_lines
          default: 500
          nullable: true
        pod_name:
          title: pod_name
          type: string
        container_name:
          title: container_name
          type: string
      additionalProperties: false
      title: options
    chart_release_pod_logs:
      type: object
      properties:
        release_name:
          $ref: "#/components/schemas/chart_release_pod_logs_0"
        options:
          $ref: "#/components/schemas/chart_release_pod_logs_1"
    chart_release_pod_logs_choices_0:
      title: release_name
      type: string
    chart_release_pod_status_0:
      title: release_name
      type: string
    chart_release_pull_container_images_0:
      title: release_name
      type: string
      description: Update container images being used by `release_name` chart release.
    chart_release_pull_container_images_1:
      type: object
      properties:
        redeploy:
          type: boolean
          title: redeploy
          default: true
      additionalProperties: false
      title: pull_container_images_options
    chart_release_pull_container_images:
      type: object
      properties:
        release_name:
          $ref: "#/components/schemas/chart_release_pull_container_images_0"
        pull_container_images_options:
          $ref: "#/components/schemas/chart_release_pull_container_images_1"
    chart_release_redeploy_0:
      title: release_name
      type: string
    chart_release_remove_ix_volume_0:
      title: release_name
      type: string
    chart_release_remove_ix_volume_1:
      title: volume_name
      type: string
    chart_release_remove_ix_volume:
      type: object
      properties:
        release_name:
          $ref: "#/components/schemas/chart_release_remove_ix_volume_0"
        volume_name:
          $ref: "#/components/schemas/chart_release_remove_ix_volume_1"
    chart_release_rollback_0:
      title: release_name
      type: string
    chart_release_rollback_1:
      type: object
      properties:
        force_rollback:
          type: boolean
          title: force_rollback
          default: false
          description: >-
            `force_rollback` is a boolean which when set will force rollback
            operation to move forward even if no

            snapshots are found. This is only useful when `rollback_snapshot` is set.
        recreate_resources:
          type: boolean
          title: recreate_resources
          default: false
          description: >-
            `recreate_resources` is a boolean which will delete and then create
            the kubernetes resources on rollback

            of chart release. This should be used with caution as if chart release is consuming immutable objects like

            a PVC, the rollback operation can't be performed and will fail as helm tries to do a 3 way patch for rollback.
        rollback_snapshot:
          type: boolean
          title: rollback_snapshot
          default: true
          description: >-
            `rollback_snapshot` is a boolean value which when set will rollback
            snapshots of any PVC's or ix volumes being

            consumed by the chart release.

            `force_rollback` is a boolean which when set will force rollback operation to move forward even if no

            snapshots are found. This is only useful when `rollback_snapshot` is set.
        item_version:
          title: item_version
          type: string
          description: "`item_version` is version which we want to rollback a chart
            release to."
      additionalProperties: false
      title: rollback_options
    chart_release_rollback:
      type: object
      properties:
        release_name:
          $ref: "#/components/schemas/chart_release_rollback_0"
        rollback_options:
          $ref: "#/components/schemas/chart_release_rollback_1"
    chart_release_scale_0:
      title: release_name
      type: string
      description: Scale a `release_name` chart release to
        `scale_options.replica_count` specified.
    chart_release_scale_1:
      type: object
      properties:
        replica_count:
          type: integer
          title: replica_count
      additionalProperties: false
      title: scale_options
    chart_release_scale:
      type: object
      properties:
        release_name:
          $ref: "#/components/schemas/chart_release_scale_0"
        scale_options:
          $ref: "#/components/schemas/chart_release_scale_1"
    chart_release_scale_workloads_0:
      title: release_name
      type: string
    chart_release_scale_workloads_1:
      title: workloads
      default: []
      type: array
      items:
        type: object
        properties:
          replica_count:
            type: integer
            title: replica_count
          type:
            title: type
            type: string
            enum:
              - DEPLOYMENT
              - STATEFULSET
          name:
            title: name
            type: string
        additionalProperties: false
        title: scale_workload
    chart_release_scale_workloads:
      type: object
      properties:
        release_name:
          $ref: "#/components/schemas/chart_release_scale_workloads_0"
        workloads:
          $ref: "#/components/schemas/chart_release_scale_workloads_1"
    chart_release_upgrade_0:
      title: release_name
      type: string
      description: >-
        Upgrade `release_name` chart release.

        System will update container images being used by `release_name` chart release as a chart release

        upgrade is not considered complete until the images in use have also been updated to latest versions.
    chart_release_upgrade_1:
      type: object
      properties:
        values:
          type: object
          properties: {}
          additionalProperties: true
          title: values
        item_version:
          title: item_version
          default: latest
          type: string
      additionalProperties: false
      title: upgrade_options
    chart_release_upgrade:
      type: object
      properties:
        release_name:
          $ref: "#/components/schemas/chart_release_upgrade_0"
        upgrade_options:
          $ref: "#/components/schemas/chart_release_upgrade_1"
    chart_release_upgrade_summary_0:
      title: release_name
      type: string
      description: >-
        Retrieve upgrade summary for `release_name` which will include
        which container images will be updated

        and changelog for `options.item_version` chart version specified if applicable. If only container images

        need to be updated, changelog will be `null`.
    chart_release_upgrade_summary_1:
      type: object
      properties:
        item_version:
          title: item_version
          default: latest
          type: string
      additionalProperties: false
      title: options
    chart_release_upgrade_summary:
      type: object
      properties:
        release_name:
          $ref: "#/components/schemas/chart_release_upgrade_summary_0"
        options:
          $ref: "#/components/schemas/chart_release_upgrade_summary_1"
    cloudsync_create_0:
      type: object
      properties:
        description:
          title: description
          default: ""
          type: string
        direction:
          title: direction
          type: string
          enum:
            - PUSH
            - PULL
        transfer_mode:
          title: transfer_mode
          type: string
          enum:
            - SYNC
            - COPY
            - MOVE
        path:
          title: path
          type: string
        credentials:
          type: integer
          title: credentials
        encryption:
          type: boolean
          title: encryption
          default: false
        filename_encryption:
          type: boolean
          title: filename_encryption
          default: false
        encryption_password:
          title: encryption_password
          default: ""
          type: string
        encryption_salt:
          title: encryption_salt
          default: ""
          type: string
        schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
          additionalProperties: false
          title: schedule
        follow_symlinks:
          type: boolean
          title: follow_symlinks
          default: false
        transfers:
          type: integer
          title: transfers
          default: null
          nullable: true
        bwlimit:
          title: bwlimit
          default: []
          type: array
          items:
            type: object
            properties:
              time:
                title: time
                type: string
              bandwidth:
                title: bandwidth
                nullable: true
                type: integer
            additionalProperties: false
            title: cloud_sync_bwlimit
        include:
          title: include
          default: []
          type: array
          items:
            title: path
            type: string
        exclude:
          title: exclude
          default: []
          type: array
          items:
            title: path
            type: string
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
        snapshot:
          type: boolean
          title: snapshot
          default: false
        pre_script:
          title: pre_script
          default: ""
          type: string
        post_script:
          title: post_script
          default: ""
          type: string
        args:
          title: args
          default: ""
          type: string
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: cloud_sync_create
    cloudsync_list_buckets_0:
      type: integer
      title: credentials_id
    cloudsync_list_directory_0:
      type: object
      properties:
        credentials:
          type: integer
          title: credentials
        encryption:
          type: boolean
          title: encryption
          default: false
        filename_encryption:
          type: boolean
          title: filename_encryption
          default: false
        encryption_password:
          title: encryption_password
          default: ""
          type: string
        encryption_salt:
          title: encryption_salt
          default: ""
          type: string
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
          description: >-
            If remote supports buckets, path is constructed by two keys
            "bucket"/"folder" in `attributes`.

            If remote does not support buckets, path is constructed using "folder" key only in `attributes`.

            "folder" is directory name and "bucket" is bucket name for remote.
        args:
          title: args
          default: ""
          type: string
      additionalProperties: false
      title: cloud_sync_ls
    cloudsync_onedrive_list_drives_0:
      type: object
      properties:
        client_id:
          title: client_id
          default: ""
          type: string
        client_secret:
          title: client_secret
          default: ""
          type: string
        token:
          title: token
          type: string
      additionalProperties: false
      title: onedrive_list_drives
    cloudsync_sync_onetime_0:
      type: object
      properties:
        description:
          title: description
          default: ""
          type: string
        direction:
          title: direction
          type: string
          enum:
            - PUSH
            - PULL
        transfer_mode:
          title: transfer_mode
          type: string
          enum:
            - SYNC
            - COPY
            - MOVE
        path:
          title: path
          type: string
        credentials:
          type: integer
          title: credentials
        encryption:
          type: boolean
          title: encryption
          default: false
        filename_encryption:
          type: boolean
          title: filename_encryption
          default: false
        encryption_password:
          title: encryption_password
          default: ""
          type: string
        encryption_salt:
          title: encryption_salt
          default: ""
          type: string
        schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
          additionalProperties: false
          title: schedule
        follow_symlinks:
          type: boolean
          title: follow_symlinks
          default: false
        transfers:
          type: integer
          title: transfers
          default: null
          nullable: true
        bwlimit:
          title: bwlimit
          default: []
          type: array
          items:
            type: object
            properties:
              time:
                title: time
                type: string
              bandwidth:
                title: bandwidth
                nullable: true
                type: integer
            additionalProperties: false
            title: cloud_sync_bwlimit
        include:
          title: include
          default: []
          type: array
          items:
            title: path
            type: string
        exclude:
          title: exclude
          default: []
          type: array
          items:
            title: path
            type: string
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
        snapshot:
          type: boolean
          title: snapshot
          default: false
        pre_script:
          title: pre_script
          default: ""
          type: string
        post_script:
          title: post_script
          default: ""
          type: string
        args:
          title: args
          default: ""
          type: string
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: cloud_sync_create
    cloudsync_sync_onetime_1:
      type: object
      properties:
        dry_run:
          type: boolean
          title: dry_run
          default: false
      additionalProperties: false
      title: cloud_sync_sync_options
    cloudsync_sync_onetime:
      type: object
      properties:
        cloud_sync_create:
          $ref: "#/components/schemas/cloudsync_sync_onetime_0"
        cloud_sync_sync_options:
          $ref: "#/components/schemas/cloudsync_sync_onetime_1"
    cloudsync_credentials_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
        provider:
          title: provider
          type: string
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
      additionalProperties: false
      title: cloud_sync_credentials_create
    cloudsync_credentials_verify_0:
      type: object
      properties:
        provider:
          title: provider
          type: string
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
      additionalProperties: false
      title: cloud_sync_credentials_verify
    config_reset_0:
      type: object
      properties:
        reboot:
          type: boolean
          title: reboot
          default: true
      additionalProperties: false
      title: options
    config_save_0:
      type: object
      properties:
        secretseed:
          type: boolean
          title: secretseed
          default: false
          description: "`secretseed`: include password secret seed."
        pool_keys:
          type: boolean
          title: pool_keys
          default: false
          description: "`pool_keys`: include GELI encryption keys."
        root_authorized_keys:
          type: boolean
          title: root_authorized_keys
          default: false
          description: '`root_authorized_keys`: include "authorized_keys" file for the
            root user.'
      additionalProperties: false
      title: configsave
    container_update_0:
      type: object
      properties:
        enable_image_updates:
          type: boolean
          title: enable_image_updates
      additionalProperties: false
      title: container_entry
    container_prune_0:
      type: object
      properties:
        remove_unused_images:
          type: boolean
          title: remove_unused_images
          default: false
        remove_stopped_containers:
          type: boolean
          title: remove_stopped_containers
          default: false
      additionalProperties: false
      title: prune_options
    container_image_pull_0:
      type: object
      properties:
        docker_authentication:
          type: object
          properties:
            username:
              title: username
              type: string
            password:
              title: password
              type: string
          additionalProperties: false
          title: docker_authentication
        from_image:
          title: from_image
          type: string
          description: >-
            `from_image` is the name of the image to pull. Format for the name
            is "registry/repo/image" where

            registry may be omitted and it will default to docker registry in this case.
        tag:
          title: tag
          default: null
          type: string
          description: >-
            `tag` specifies tag of the image and defaults to `null`. In case of
            `null` it will retrieve all the tags

            of the image.
          nullable: true
      additionalProperties: false
      title: image_pull
    cronjob_create_0:
      type: object
      properties:
        enabled:
          type: boolean
          title: enabled
        stderr:
          type: boolean
          title: stderr
          default: false
          description: >-
            `stderr` and `stdout` are boolean values which if `true`, represent
            that we would like to suppress

            standard error / standard output respectively.
        stdout:
          type: boolean
          title: stdout
          default: true
          description: >-
            `stderr` and `stdout` are boolean values which if `true`, represent
            that we would like to suppress

            standard error / standard output respectively.
        schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
          additionalProperties: false
          title: schedule
        command:
          title: command
          type: string
        description:
          title: description
          type: string
        user:
          title: user
          type: string
      additionalProperties: false
      title: cron_job_create
    cronjob_run_0:
      type: integer
      title: id
    cronjob_run_1:
      type: boolean
      title: skip_disabled
      default: false
    cronjob_run:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/cronjob_run_0"
        skip_disabled:
          $ref: "#/components/schemas/cronjob_run_1"
    ctdb_general_ips_0:
      type: object
      properties:
        all_nodes:
          type: boolean
          title: all_nodes
          default: true
      additionalProperties: false
      title: ctdb_ips
    ctdb_general_status_0:
      type: object
      properties:
        all_nodes:
          type: boolean
          title: all_nodes
          default: true
      additionalProperties: false
      title: ctdb_status
    ctdb_private_ips_create_0:
      type: object
      properties:
        ip:
          title: ip
          type: string
      additionalProperties: false
      title: private_create
    ctdb_public_ips_create_0:
      type: object
      properties:
        pnn:
          type: integer
          title: pnn
          description: "`pnn` node number of record to adjust"
        ip:
          title: ip
          type: string
          description: "`ip` string representing an IP v4/v6 address"
        netmask:
          type: integer
          title: netmask
          description: "`netmask` integer representing a cidr notated netmask (i.e.
            16/24/48/64 etc)"
        interface:
          title: interface
          type: string
      additionalProperties: false
      title: public_create
    ctdb_public_ips_interface_choices_0:
      title: exclude_ifaces
      default: []
      type: array
      items:
        title: exclude_iface
        type: string
    device_get_info_0:
      title: type
      type: string
      enum:
        - SERIAL
        - DISK
        - GPU
    disk_get_unused_0:
      type: boolean
      title: join_partitions
      default: false
    disk_smart_attributes_0:
      title: name
      type: string
    disk_temperature_0:
      title: name
      type: string
    disk_temperature_1:
      title: powermode
      default: NEVER
      type: string
      enum:
        - NEVER
        - SLEEP
        - STANDBY
        - IDLE
    disk_temperature:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/disk_temperature_0"
        powermode:
          $ref: "#/components/schemas/disk_temperature_1"
    disk_temperatures_0:
      title: names
      default: []
      type: array
      items:
        title: name
        type: string
    disk_temperatures_1:
      title: powermode
      default: NEVER
      type: string
      enum:
        - NEVER
        - SLEEP
        - STANDBY
        - IDLE
    disk_temperatures:
      type: object
      properties:
        names:
          $ref: "#/components/schemas/disk_temperatures_0"
        powermode:
          $ref: "#/components/schemas/disk_temperatures_1"
    disk_wipe_0:
      title: dev
      type: string
    disk_wipe_1:
      title: mode
      type: string
      enum:
        - QUICK
        - FULL
        - FULL_RANDOM
    disk_wipe_2:
      type: boolean
      title: synccache
      default: true
    disk_wipe_3:
      type: object
      properties:
        configure_swap:
          type: boolean
          title: configure_swap
          default: true
      additionalProperties: false
      title: swap_removal_options
    disk_wipe:
      type: object
      properties:
        dev:
          $ref: "#/components/schemas/disk_wipe_0"
        mode:
          $ref: "#/components/schemas/disk_wipe_1"
        synccache:
          $ref: "#/components/schemas/disk_wipe_2"
        swap_removal_options:
          $ref: "#/components/schemas/disk_wipe_3"
    dyndns_update_0:
      type: object
      properties:
        provider:
          title: provider
          type: string
        checkip_ssl:
          type: boolean
          title: checkip_ssl
        checkip_server:
          title: checkip_server
          type: string
        checkip_path:
          title: checkip_path
          type: string
        ssl:
          type: boolean
          title: ssl
        custom_ddns_server:
          title: custom_ddns_server
          type: string
        custom_ddns_path:
          title: custom_ddns_path
          type: string
        domain:
          title: domain
          default: []
          type: array
          items:
            title: domain
            type: string
        username:
          title: username
          type: string
        password:
          title: password
          type: string
        period:
          type: integer
          title: period
          description: "`period` indicates how often the IP is checked in seconds."
      additionalProperties: false
      title: dyndns_entry
    enclosure_set_slot_status_0:
      title: enclosure_id
      type: string
    enclosure_set_slot_status_1:
      type: integer
      title: slot
    enclosure_set_slot_status_2:
      title: status
      type: string
      enum:
        - CLEAR
        - FAULT
        - IDENTIFY
    enclosure_set_slot_status:
      type: object
      properties:
        enclosure_id:
          $ref: "#/components/schemas/enclosure_set_slot_status_0"
        slot:
          $ref: "#/components/schemas/enclosure_set_slot_status_1"
        status:
          $ref: "#/components/schemas/enclosure_set_slot_status_2"
    failover_update_0:
      type: object
      properties:
        disabled:
          type: boolean
          title: disabled
          description: "`disabled` When true indicates that HA will be disabled."
        timeout:
          type: integer
          title: timeout
          description: >-
            `timeout` is the time to WAIT until a failover occurs when a
            network
                event occurs on an interface that is marked critical for failover AND
                HA is enabled and working appropriately.
        master:
          type: boolean
          title: master
          description: >-
            `master`  Marks the particular node in the chassis as the master
            node.
                        The standby node will have the opposite value.
          nullable: true
      additionalProperties: false
      title: failover_entry
    failover_call_remote_0:
      title: method
      type: string
    failover_call_remote_1:
      title: args
      default: []
      type: array
      items: {}
    failover_call_remote_2:
      type: object
      properties:
        timeout:
          type: integer
          title: timeout
          default: 60
        job:
          type: boolean
          title: job
          default: false
        job_return:
          type: boolean
          title: job_return
          default: null
          nullable: true
        callback:
          anyOf:
            - type: string
            - type: integer
            - type: boolean
            - type: object
            - type: array
              items: {}
          nullable: true
          title: callback
          default: null
      additionalProperties: false
      title: options
    failover_call_remote:
      type: object
      properties:
        method:
          $ref: "#/components/schemas/failover_call_remote_0"
        args:
          $ref: "#/components/schemas/failover_call_remote_1"
        options:
          $ref: "#/components/schemas/failover_call_remote_2"
    failover_control_0:
      title: action
      type: string
      enum:
        - ENABLE
        - DISABLE
    failover_control_1:
      type: object
      properties:
        active:
          type: boolean
          title: active
      additionalProperties: false
      title: options
    failover_control:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/failover_control_0"
        options:
          $ref: "#/components/schemas/failover_control_1"
    failover_sync_to_peer_0:
      type: object
      properties:
        reboot:
          type: boolean
          title: reboot
          default: false
      additionalProperties: false
      title: options
    failover_unlock_0:
      type: object
      properties:
        pools:
          title: pools
          default: []
          type: array
          items:
            type: object
            properties:
              name:
                title: name
                type: string
              passphrase:
                title: passphrase
                type: string
            additionalProperties: false
            title: pool_keys
        datasets:
          title: datasets
          default: []
          type: array
          items:
            type: object
            properties:
              name:
                title: name
                type: string
              passphrase:
                title: passphrase
                type: string
            additionalProperties: false
            title: dataset_keys
      additionalProperties: false
      title: options
    failover_upgrade_0:
      type: object
      properties:
        train:
          title: train
          type: string
      additionalProperties: false
      title: failover_upgrade
    filesystem_acl_is_trivial_0:
      title: path
      type: string
    filesystem_can_access_as_user_0:
      title: username
      type: string
    filesystem_can_access_as_user_1:
      title: path
      type: string
    filesystem_can_access_as_user_2:
      type: object
      properties:
        read:
          type: boolean
          title: read
          default: null
          nullable: true
        write:
          type: boolean
          title: write
          default: null
          nullable: true
        execute:
          type: boolean
          title: execute
          default: null
          nullable: true
      additionalProperties: false
      title: permissions
    filesystem_can_access_as_user:
      type: object
      properties:
        username:
          $ref: "#/components/schemas/filesystem_can_access_as_user_0"
        path:
          $ref: "#/components/schemas/filesystem_can_access_as_user_1"
        permissions:
          $ref: "#/components/schemas/filesystem_can_access_as_user_2"
    filesystem_chown_0:
      type: object
      properties:
        path:
          title: path
          type: string
          description: Change owner or group of file at `path`.
        uid:
          type: integer
          title: uid
          default: null
          description: |-
            `uid` and `gid` specify new owner of the file. If either
            key is absent or None, then existing value on the file is not
            changed.
          nullable: true
        gid:
          type: integer
          title: gid
          default: null
          description: |-
            `uid` and `gid` specify new owner of the file. If either
            key is absent or None, then existing value on the file is not
            changed.
          nullable: true
        options:
          type: object
          properties:
            recursive:
              type: boolean
              title: recursive
              default: false
            traverse:
              type: boolean
              title: traverse
              default: false
          additionalProperties: false
          title: options
      additionalProperties: false
      title: filesystem_ownership
    filesystem_default_acl_choices_0:
      title: path
      default: ""
      type: string
    filesystem_get_0:
      title: path
      type: string
    filesystem_get_default_acl_0:
      title: acl_type
      default: POSIX_OPEN
      type: string
    filesystem_get_default_acl_1:
      title: share_type
      default: NONE
      type: string
      enum:
        - NONE
        - SMB
        - NFS
    filesystem_get_default_acl:
      type: object
      properties:
        acl_type:
          $ref: "#/components/schemas/filesystem_get_default_acl_0"
        share_type:
          $ref: "#/components/schemas/filesystem_get_default_acl_1"
    filesystem_get_dosmode_0:
      title: path
      type: string
    filesystem_getacl_0:
      title: path
      type: string
    filesystem_getacl_1:
      type: boolean
      title: simplified
      default: true
      description: >-
        `simplified` - effect of this depends on ACL type on underlying
        filesystem. In the case of

        NFSv4 ACLs simplified permissions and flags are returned for ACL entries where applicable.

        NFSv4 errata below. In the case of POSIX1E ACls, this setting has no impact on returned ACL.

        `simplified` returns a shortened form of the ACL permset and flags where applicable. If permissions

        have been simplified, then the `perms` object will contain only a single `BASIC` key with a string

        describing the underlying permissions set.
    filesystem_getacl_2:
      type: boolean
      title: resolve_ids
      default: false
      description: >-
        `resolve_ids` - adds additional `who` key to each ACL entry, that
        converts the numeric id to

        a user name or group name. In the case of owner@ and group@ (NFSv4) or USER_OBJ and GROUP_OBJ

        (POSIX1E), st_uid or st_gid will be converted from stat() return for file. In the case of

        MASK (POSIX1E), OTHER (POSIX1E), everyone@ (NFSv4), key `who` will be included, but set to null.

        In case of failure to resolve the id to a name, `who` will be set to null. This option should

        only be used if resolving ids to names is required.
    filesystem_getacl:
      type: object
      properties:
        path:
          $ref: "#/components/schemas/filesystem_getacl_0"
        simplified:
          $ref: "#/components/schemas/filesystem_getacl_1"
        resolve_ids:
          $ref: "#/components/schemas/filesystem_getacl_2"
    filesystem_is_immutable_0:
      title: path
      type: string
    filesystem_listdir_0:
      title: path
      type: string
    filesystem_listdir_1:
      title: query-filters
      default: []
      type: array
      items: {}
    filesystem_listdir_2:
      type: object
      properties:
        relationships:
          type: boolean
          title: relationships
          default: true
        extend:
          title: extend
          default: null
          type: string
          nullable: true
        extend_context:
          title: extend_context
          default: null
          type: string
          nullable: true
        prefix:
          title: prefix
          default: null
          type: string
          nullable: true
        extra:
          type: object
          properties: {}
          additionalProperties: true
          title: extra
        order_by:
          title: order_by
          default: []
          type: array
          items: {}
        select:
          title: select
          default: []
          type: array
          items: {}
        count:
          type: boolean
          title: count
          default: false
        get:
          type: boolean
          title: get
          default: false
        offset:
          type: integer
          title: offset
          default: 0
        limit:
          type: integer
          title: limit
          default: 0
        force_sql_filters:
          type: boolean
          title: force_sql_filters
          default: false
      additionalProperties: false
      title: query-options
    filesystem_listdir:
      type: object
      properties:
        path:
          $ref: "#/components/schemas/filesystem_listdir_0"
        query-filters:
          $ref: "#/components/schemas/filesystem_listdir_1"
        query-options:
          $ref: "#/components/schemas/filesystem_listdir_2"
    filesystem_mkdir_0:
      title: path
      type: string
    filesystem_put_0:
      title: path
      type: string
    filesystem_put_1:
      type: object
      properties:
        append:
          type: boolean
          title: append
          default: false
        mode:
          type: integer
          title: mode
      additionalProperties: false
      title: options
    filesystem_put:
      type: object
      properties:
        path:
          $ref: "#/components/schemas/filesystem_put_0"
        options:
          $ref: "#/components/schemas/filesystem_put_1"
    filesystem_set_dosmode_0:
      type: object
      properties:
        path:
          title: path
          type: string
        dosmode:
          type: object
          properties:
            readonly:
              type: boolean
              title: readonly
            hidden:
              type: boolean
              title: hidden
            system:
              type: boolean
              title: system
            archive:
              type: boolean
              title: archive
            reparse:
              type: boolean
              title: reparse
            offline:
              type: boolean
              title: offline
            sparse:
              type: boolean
              title: sparse
          additionalProperties: false
          title: dosmode
      additionalProperties: false
      title: set_dosmode
    filesystem_set_immutable_0:
      type: boolean
      title: set_flag
    filesystem_set_immutable_1:
      title: path
      type: string
      description: Set/Unset immutable flag at `path`.
    filesystem_set_immutable:
      type: object
      properties:
        set_flag:
          $ref: "#/components/schemas/filesystem_set_immutable_0"
        path:
          $ref: "#/components/schemas/filesystem_set_immutable_1"
    filesystem_setacl_0:
      type: object
      properties:
        path:
          title: path
          type: string
          description: "`path` full path to directory or file."
        uid:
          type: integer
          title: uid
          default: null
          description: "`uid` the desired UID of the file user. If set to None (the
            default), then user is not changed."
          nullable: true
        gid:
          type: integer
          title: gid
          default: null
          description: "`gid` the desired GID of the file group. If set to None (the
            default), then group is not changed."
          nullable: true
        dacl:
          anyOf:
            - title: nfs4_acl
              default: []
              type: array
              items:
                type: object
                properties:
                  tag:
                    title: tag
                    type: string
                    enum:
                      - owner@
                      - group@
                      - everyone@
                      - USER
                      - GROUP
                  id:
                    title: id
                    nullable: true
                    type: integer
                  type:
                    title: type
                    type: string
                    enum:
                      - ALLOW
                      - DENY
                  perms:
                    type: object
                    properties:
                      READ_DATA:
                        type: boolean
                        title: READ_DATA
                      WRITE_DATA:
                        type: boolean
                        title: WRITE_DATA
                      APPEND_DATA:
                        type: boolean
                        title: APPEND_DATA
                      READ_NAMED_ATTRS:
                        type: boolean
                        title: READ_NAMED_ATTRS
                      WRITE_NAMED_ATTRS:
                        type: boolean
                        title: WRITE_NAMED_ATTRS
                      EXECUTE:
                        type: boolean
                        title: EXECUTE
                      DELETE_CHILD:
                        type: boolean
                        title: DELETE_CHILD
                      READ_ATTRIBUTES:
                        type: boolean
                        title: READ_ATTRIBUTES
                      WRITE_ATTRIBUTES:
                        type: boolean
                        title: WRITE_ATTRIBUTES
                      DELETE:
                        type: boolean
                        title: DELETE
                      READ_ACL:
                        type: boolean
                        title: READ_ACL
                      WRITE_ACL:
                        type: boolean
                        title: WRITE_ACL
                      WRITE_OWNER:
                        type: boolean
                        title: WRITE_OWNER
                      SYNCHRONIZE:
                        type: boolean
                        title: SYNCHRONIZE
                      BASIC:
                        title: BASIC
                        type: string
                        enum:
                          - FULL_CONTROL
                          - MODIFY
                          - READ
                          - TRAVERSE
                    additionalProperties: false
                    title: perms
                  flags:
                    type: object
                    properties:
                      FILE_INHERIT:
                        type: boolean
                        title: FILE_INHERIT
                      DIRECTORY_INHERIT:
                        type: boolean
                        title: DIRECTORY_INHERIT
                      NO_PROPAGATE_INHERIT:
                        type: boolean
                        title: NO_PROPAGATE_INHERIT
                      INHERIT_ONLY:
                        type: boolean
                        title: INHERIT_ONLY
                      INHERITED:
                        type: boolean
                        title: INHERITED
                      BASIC:
                        title: BASIC
                        type: string
                        enum:
                          - INHERIT
                          - NOINHERIT
                    additionalProperties: false
                    title: flags
                additionalProperties: false
                title: nfs4_ace
            - title: posix1e_acl
              default: []
              type: array
              items:
                type: object
                properties:
                  default:
                    type: boolean
                    title: default
                    default: false
                  tag:
                    title: tag
                    type: string
                    enum:
                      - USER_OBJ
                      - GROUP_OBJ
                      - USER
                      - GROUP
                      - OTHER
                      - MASK
                  id:
                    type: integer
                    title: id
                    default: -1
                  perms:
                    type: object
                    properties:
                      READ:
                        type: boolean
                        title: READ
                        default: false
                      WRITE:
                        type: boolean
                        title: WRITE
                        default: false
                      EXECUTE:
                        type: boolean
                        title: EXECUTE
                        default: false
                    additionalProperties: false
                    title: perms
                additionalProperties: false
                title: posix1e_ace
          nullable: false
          description: >-
            `dacl` ACL entries. Formatting depends on the underlying `acltype`.
            NFS4ACL requires

            NFSv4 entries. POSIX1e requires POSIX1e entries.
        nfs41_flags:
          type: object
          properties:
            autoinherit:
              type: boolean
              title: autoinherit
              default: false
            protected:
              type: boolean
              title: protected
              default: false
          additionalProperties: false
          title: nfs41_flags
        acltype:
          title: acltype
          type: string
          enum:
            - NFS4
            - POSIX1E
            - DISABLED
          description: >-
            `dacl` ACL entries. Formatting depends on the underlying `acltype`.
            NFS4ACL requires

            NFSv4 entries. POSIX1e requires POSIX1e entries.
          nullable: true
        options:
          type: object
          properties:
            stripacl:
              type: boolean
              title: stripacl
              default: false
            recursive:
              type: boolean
              title: recursive
              default: false
            traverse:
              type: boolean
              title: traverse
              default: false
            canonicalize:
              type: boolean
              title: canonicalize
              default: true
          additionalProperties: false
          title: options
      additionalProperties: false
      title: filesystem_acl
    filesystem_setperm_0:
      type: object
      properties:
        path:
          title: path
          type: string
          description: >-
            Set unix permissions on given `path`.

            `stripacl` setperm will fail if an extended ACL is present on `path`,

            unless `stripacl` is set to True.
        mode:
          title: mode
          type: string
          description: |-
            If `mode` is specified then the mode will be applied to the
            path and files and subdirectories depending on which `options` are
            selected. Mode should be formatted as string representation of octal
            permissions bits.
          nullable: true
        uid:
          type: integer
          title: uid
          default: null
          description: "`uid` the desired UID of the file user. If set to None (the
            default), then user is not changed."
          nullable: true
        gid:
          type: integer
          title: gid
          default: null
          description: "`gid` the desired GID of the file group. If set to None (the
            default), then group is not changed."
          nullable: true
        options:
          type: object
          properties:
            stripacl:
              type: boolean
              title: stripacl
              default: false
            recursive:
              type: boolean
              title: recursive
              default: false
            traverse:
              type: boolean
              title: traverse
              default: false
          additionalProperties: false
          title: options
          description: |-
            If `mode` is specified then the mode will be applied to the
            path and files and subdirectories depending on which `options` are
            selected. Mode should be formatted as string representation of octal
            permissions bits.
      additionalProperties: false
      title: filesystem_permission
    filesystem_stat_0:
      title: path
      type: string
      description: Return the filesystem stat(2) for a given `path`.
    filesystem_statfs_0:
      title: path
      type: string
    filesystem_acltemplate_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
        acltype:
          title: acltype
          type: string
          enum:
            - NFS4
            - POSIX1E
        acl:
          anyOf:
            - title: nfs4_acl
              default: []
              type: array
              items:
                type: object
                properties:
                  tag:
                    title: tag
                    type: string
                    enum:
                      - owner@
                      - group@
                      - everyone@
                      - USER
                      - GROUP
                  id:
                    title: id
                    nullable: true
                    type: integer
                  type:
                    title: type
                    type: string
                    enum:
                      - ALLOW
                      - DENY
                  perms:
                    type: object
                    properties:
                      READ_DATA:
                        type: boolean
                        title: READ_DATA
                      WRITE_DATA:
                        type: boolean
                        title: WRITE_DATA
                      APPEND_DATA:
                        type: boolean
                        title: APPEND_DATA
                      READ_NAMED_ATTRS:
                        type: boolean
                        title: READ_NAMED_ATTRS
                      WRITE_NAMED_ATTRS:
                        type: boolean
                        title: WRITE_NAMED_ATTRS
                      EXECUTE:
                        type: boolean
                        title: EXECUTE
                      DELETE_CHILD:
                        type: boolean
                        title: DELETE_CHILD
                      READ_ATTRIBUTES:
                        type: boolean
                        title: READ_ATTRIBUTES
                      WRITE_ATTRIBUTES:
                        type: boolean
                        title: WRITE_ATTRIBUTES
                      DELETE:
                        type: boolean
                        title: DELETE
                      READ_ACL:
                        type: boolean
                        title: READ_ACL
                      WRITE_ACL:
                        type: boolean
                        title: WRITE_ACL
                      WRITE_OWNER:
                        type: boolean
                        title: WRITE_OWNER
                      SYNCHRONIZE:
                        type: boolean
                        title: SYNCHRONIZE
                      BASIC:
                        title: BASIC
                        type: string
                        enum:
                          - FULL_CONTROL
                          - MODIFY
                          - READ
                          - TRAVERSE
                    additionalProperties: false
                    title: perms
                  flags:
                    type: object
                    properties:
                      FILE_INHERIT:
                        type: boolean
                        title: FILE_INHERIT
                      DIRECTORY_INHERIT:
                        type: boolean
                        title: DIRECTORY_INHERIT
                      NO_PROPAGATE_INHERIT:
                        type: boolean
                        title: NO_PROPAGATE_INHERIT
                      INHERIT_ONLY:
                        type: boolean
                        title: INHERIT_ONLY
                      INHERITED:
                        type: boolean
                        title: INHERITED
                      BASIC:
                        title: BASIC
                        type: string
                        enum:
                          - INHERIT
                          - NOINHERIT
                    additionalProperties: false
                    title: flags
                additionalProperties: false
                title: nfs4_ace
            - title: posix1e_acl
              default: []
              type: array
              items:
                type: object
                properties:
                  default:
                    type: boolean
                    title: default
                    default: false
                  tag:
                    title: tag
                    type: string
                    enum:
                      - USER_OBJ
                      - GROUP_OBJ
                      - USER
                      - GROUP
                      - OTHER
                      - MASK
                  id:
                    type: integer
                    title: id
                    default: -1
                  perms:
                    type: object
                    properties:
                      READ:
                        type: boolean
                        title: READ
                        default: false
                      WRITE:
                        type: boolean
                        title: WRITE
                        default: false
                      EXECUTE:
                        type: boolean
                        title: EXECUTE
                        default: false
                    additionalProperties: false
                    title: perms
                additionalProperties: false
                title: posix1e_ace
          nullable: false
          description: null
      additionalProperties: false
      title: acltemplate_create
    filesystem_acltemplate_by_path_0:
      type: object
      properties:
        path:
          title: path
          default: ""
          type: string
          description: Retrieve list of available ACL templates for a given `path`.
        query-filters:
          title: query-filters
          default: []
          type: array
          items: {}
        query-options:
          type: object
          properties:
            relationships:
              type: boolean
              title: relationships
              default: true
            extend:
              title: extend
              default: null
              type: string
              nullable: true
            extend_context:
              title: extend_context
              default: null
              type: string
              nullable: true
            prefix:
              title: prefix
              default: null
              type: string
              nullable: true
            extra:
              type: object
              properties: {}
              additionalProperties: true
              title: extra
            order_by:
              title: order_by
              default: []
              type: array
              items: {}
            select:
              title: select
              default: []
              type: array
              items: {}
            count:
              type: boolean
              title: count
              default: false
            get:
              type: boolean
              title: get
              default: false
            offset:
              type: integer
              title: offset
              default: 0
            limit:
              type: integer
              title: limit
              default: 0
            force_sql_filters:
              type: boolean
              title: force_sql_filters
              default: false
          additionalProperties: false
          title: query-options
        format-options:
          type: object
          properties:
            canonicalize:
              type: boolean
              title: canonicalize
              default: false
            ensure_builtins:
              type: boolean
              title: ensure_builtins
              default: false
            resolve_names:
              type: boolean
              title: resolve_names
              default: false
          additionalProperties: false
          title: format-options
      additionalProperties: false
      title: acltemplate_by_path
    ftp_update_0:
      type: object
      properties:
        port:
          type: integer
          title: port
        clients:
          type: integer
          title: clients
          description: "`clients` is an integer value which sets the maximum number of
            simultaneous clients allowed. It defaults to 32."
        ipconnections:
          type: integer
          title: ipconnections
          description: >-
            `ipconnections` is an integer value which shows the maximum number
            of connections per IP address. It defaults

            to 0 which equals to unlimited.
        loginattempt:
          type: integer
          title: loginattempt
        timeout:
          type: integer
          title: timeout
          description: >-
            `timeout` is the maximum number of seconds that proftpd will allow
            clients to stay connected without receiving

            any data on either the control or data connection.
        timeout_notransfer:
          type: integer
          title: timeout_notransfer
          description: >-
            `timeout_notransfer` is the maximum number of seconds a client is
            allowed to spend connected, after

            authentication, without issuing a command which results in creating an active or passive data connection

            (i.e. sending/receiving a file, or receiving a directory listing).
        rootlogin:
          type: boolean
          title: rootlogin
          description: >-
            `rootlogin` is a boolean value which when configured to true
            enables login as root. This is generally

            discouraged because of the security risks.
        onlyanonymous:
          type: boolean
          title: onlyanonymous
          description: "`onlyanonymous` allows anonymous FTP logins with access to the
            directory specified by `anonpath`."
        anonpath:
          title: anonpath
          type: string
          description: "`onlyanonymous` allows anonymous FTP logins with access to the
            directory specified by `anonpath`."
          nullable: true
        onlylocal:
          type: boolean
          title: onlylocal
        banner:
          title: banner
          type: string
          description: >-
            `banner` is a message displayed to local login users after they
            successfully authenticate. It is not displayed

            to anonymous login users.
        filemask:
          title: filemask
          type: string
          description: "`filemask` sets the default permissions for newly created files
            which by default are 077."
        dirmask:
          title: dirmask
          type: string
          description: "`dirmask` sets the default permissions for newly created
            directories which by default are 077."
        fxp:
          type: boolean
          title: fxp
          description: >-
            `fxp` if set to true indicates that File eXchange Protocol is
            enabled. Generally it is discouraged as it

            makes the server vulnerable to FTP bounce attacks.
        resume:
          type: boolean
          title: resume
          description: "`resume` if set allows FTP clients to resume interrupted transfers."
        defaultroot:
          type: boolean
          title: defaultroot
          description: >-
            `defaultroot` when set ensures that for local users, home directory
            access is only granted if the user

            is a member of group wheel.
        ident:
          type: boolean
          title: ident
          description: >-
            `ident` is a boolean value which when set to true indicates that
            IDENT authentication is required. If identd

            is not running on the client, this can result in timeouts.
        reversedns:
          type: boolean
          title: reversedns
        masqaddress:
          title: masqaddress
          type: string
          description: >-
            `masqaddress` is the public IP address or hostname which is set if
            FTP clients cannot connect through a

            NAT device.
        passiveportsmin:
          type: integer
          title: passiveportsmin
        passiveportsmax:
          type: integer
          title: passiveportsmax
        localuserbw:
          type: integer
          title: localuserbw
          description: >-
            `localuserbw` is a positive integer value which indicates maximum
            upload bandwidth in KB/s for local user.

            Default of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).
        localuserdlbw:
          type: integer
          title: localuserdlbw
          description: >-
            `localuserdlbw` is a positive integer value which indicates maximum
            download bandwidth in KB/s for local user.

            Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).
        anonuserbw:
          type: integer
          title: anonuserbw
          description: >-
            `anonuserbw` is a positive integer value which indicates maximum
            upload bandwidth in KB/s for anonymous user.

            Default of zero indicates unlimited upload bandwidth ( from the FTP server configuration ).
        anonuserdlbw:
          type: integer
          title: anonuserdlbw
          description: >-
            `anonuserdlbw` is a positive integer value which indicates maximum
            download bandwidth in KB/s for anonymous

            user. Default of zero indicates unlimited download bandwidth ( from the FTP server configuration ).
        tls:
          type: boolean
          title: tls
          description: >-
            `tls` is a boolean value which when set indicates that encrypted
            connections are enabled. This requires a

            certificate to be configured first with the certificate service and the id of certificate is passed on in
        tls_policy:
          title: tls_policy
          type: string
          enum:
            - on
            - off
            - data
            - "!data"
            - auth
            - ctrl
            - ctrl+data
            - ctrl+!data
            - auth+data
            - auth+!data
          description: >-
            `tls_policy` defines whether the control channel, data channel,
            both channels, or neither channel of an FTP

            session must occur over SSL/TLS.
        tls_opt_allow_client_renegotiations:
          type: boolean
          title: tls_opt_allow_client_renegotiations
        tls_opt_allow_dot_login:
          type: boolean
          title: tls_opt_allow_dot_login
        tls_opt_allow_per_user:
          type: boolean
          title: tls_opt_allow_per_user
        tls_opt_common_name_required:
          type: boolean
          title: tls_opt_common_name_required
        tls_opt_enable_diags:
          type: boolean
          title: tls_opt_enable_diags
          description: >-
            `tls_opt_enable_diags` is a boolean value when set, logs verbosely.
            This is helpful when troubleshooting a

            connection.
        tls_opt_export_cert_data:
          type: boolean
          title: tls_opt_export_cert_data
        tls_opt_no_cert_request:
          type: boolean
          title: tls_opt_no_cert_request
        tls_opt_no_empty_fragments:
          type: boolean
          title: tls_opt_no_empty_fragments
        tls_opt_no_session_reuse_required:
          type: boolean
          title: tls_opt_no_session_reuse_required
        tls_opt_stdenvvars:
          type: boolean
          title: tls_opt_stdenvvars
        tls_opt_dns_name_required:
          type: boolean
          title: tls_opt_dns_name_required
        tls_opt_ip_address_required:
          type: boolean
          title: tls_opt_ip_address_required
        ssltls_certificate:
          type: integer
          title: ssltls_certificate
          description: "`ssltls_certificate`."
          nullable: true
        options:
          title: options
          type: string
      additionalProperties: false
      title: ftp_entry
    gluster_eventsd_create_0:
      type: object
      properties:
        url:
          title: url
          type: string
          description: |-
            Add `url` webhook that will be called
            with a JSON formatted POST request that
            will include the event that was triggered
            along with the relevant data.
            `url` is a http address (i.e. http://192.168.1.50/endpoint)
        bearer_token:
          title: bearer_token
          type: string
          description: "`bearer_token` is a bearer token"
        secret:
          title: secret
          type: string
          description: "`secret` secret to encode the JWT message"
      additionalProperties: false
      title: webhook_create
    gluster_eventsd_delete_0:
      type: object
      properties:
        url:
          title: url
          type: string
          description: Delete `url` webhook
      additionalProperties: false
      title: webhook_delete
    gluster_fuse_is_mounted_0:
      type: object
      properties:
        name:
          title: name
          type: string
      additionalProperties: false
      title: glusterfuse_mounted
    gluster_fuse_mount_0:
      type: object
      properties:
        name:
          title: name
          default: null
          type: string
          description: "`name` String representing the name of the gluster volume"
        all:
          type: boolean
          title: all
          default: false
          description: |-
            `all` Boolean if True locally FUSE mount all detected
                    gluster volumes
        raise:
          type: boolean
          title: raise
          default: false
      additionalProperties: false
      title: gluserfuse_mount
    gluster_fuse_umount_0:
      type: object
      properties:
        name:
          title: name
          default: null
          type: string
          description: "`name` String representing the name of the gluster volume"
        all:
          type: boolean
          title: all
          default: false
          description: |-
            `all` Boolean if True umount all locally detected FUSE
                    mounted gluster volumes
        raise:
          type: boolean
          title: raise
          default: false
      additionalProperties: false
      title: glusterfuse_umount
    gluster_localevents_add_jwt_secret_0:
      type: object
      properties:
        secret:
          title: secret
          type: string
          description: |-
            Add a `secret` key used to encode/decode
            JWT messages for sending/receiving gluster
            events.
            `secret` String representing the key to be used
                        to encode/decode JWT messages
        force:
          type: boolean
          title: force
          default: false
          description: |-
            `force` Boolean if set to True, will forcefully
                        wipe any existing jwt key for this
                        peer. Note, if forcefully adding a
                        new key, the other peers in the TSP
                        will also need to be sent this key.
      additionalProperties: false
      title: add_secret
    gluster_peer_create_0:
      type: object
      properties:
        hostname:
          title: hostname
          type: string
      additionalProperties: false
      title: peer_create
    gluster_peer_status_0:
      type: object
      properties:
        localhost:
          type: boolean
          title: localhost
          default: true
      additionalProperties: false
      title: peer_status
    gluster_rebalance_fix_layout_0:
      type: object
      properties:
        name:
          title: name
          type: string
      additionalProperties: false
      title: rebalance_fix_layout
    gluster_rebalance_start_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing the gluster volume."
        force:
          type: boolean
          title: force
          default: false
      additionalProperties: false
      title: rebalance_start
    gluster_rebalance_status_0:
      type: object
      properties:
        name:
          title: name
          type: string
      additionalProperties: false
      title: rebalance_status
    gluster_rebalance_stop_0:
      type: object
      properties:
        name:
          title: name
          type: string
      additionalProperties: false
      title: rebalance_stop
    gluster_volume_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name to be given to the volume"
        bricks:
          title: bricks
          default: []
          type: array
          items:
            type: object
            properties:
              peer_name:
                title: peer_name
                type: string
              peer_path:
                title: peer_path
                type: string
            additionalProperties: false
            title: brick
          description: |-
            `bricks` List representing the brick paths
                `peer_name` String representing IP or DNS name of the peer
                `peer_path` String representing the full path of the brick
        replica:
          type: integer
          title: replica
          description: "`replica` Integer representing number of replica bricks"
        arbiter:
          type: integer
          title: arbiter
          description: "`arbiter` Integer representing number of arbiter bricks"
        disperse:
          type: integer
          title: disperse
          description: "`disperse` Integer representing number of disperse bricks"
        disperse_data:
          type: integer
          title: disperse_data
          description: "`disperse_data` Integer representing number of disperse data bricks"
        redundancy:
          type: integer
          title: redundancy
          description: "`redundancy` Integer representing number of redundancy bricks"
        force:
          type: boolean
          title: force
      additionalProperties: false
      title: glustervolume_create
    gluster_volume_addbrick_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        bricks:
          title: bricks
          default: []
          type: array
          items:
            type: object
            properties:
              peer_name:
                title: peer_name
                type: string
              peer_path:
                title: peer_path
                type: string
            additionalProperties: false
            title: brick
          description: |-
            `bricks` List representing the brick paths
                `peer_name` String representing IP or DNS name of the peer
                `peer_path` String representing the full path of the brick
        replica:
          type: integer
          title: replica
          description: "`replica` Integer replicating replica count"
        arbiter:
          type: integer
          title: arbiter
          description: "`arbiter` Integer replicating arbiter count"
        force:
          type: boolean
          title: force
      additionalProperties: false
      title: volume_addbrick
    gluster_volume_info_0:
      type: object
      properties:
        name:
          title: name
          type: string
      additionalProperties: false
      title: volume_info
    gluster_volume_optreset_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        opt:
          title: opt
          type: string
          description: |-
            Reset volumes options.
                If `opt` is not provided, then all options
                will be reset.
            `opt` String representing name of the option to reset
        force:
          type: boolean
          title: force
      additionalProperties: false
      title: volume_optreset
    gluster_volume_optset_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        opts:
          type: object
          properties: {}
          additionalProperties: true
          title: opts
      additionalProperties: false
      title: volume_optset
    gluster_volume_quota_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        enable:
          type: boolean
          title: enable
      additionalProperties: false
      title: volume_quota
    gluster_volume_removebrick_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        bricks:
          title: bricks
          default: []
          type: array
          items:
            type: object
            properties:
              peer_name:
                title: peer_name
                type: string
              peer_path:
                title: peer_path
                type: string
            additionalProperties: false
            title: brick
          description: |-
            `bricks` List representing the brick paths
                `peer_name` String representing IP or DNS name of the peer
                `peer_path` String representing the full path of the brick
        operation:
          title: operation
          type: string
          enum:
            - START
            - STOP
            - COMMIT
            - STATUS
            - FORCE
          description: |-
            `operation` String representing the operation to be performed
                `START` Start the removal of the brick(s)
                `STOP` Stop the removal of the brick(s)
                `COMMIT` Commit the removal of the brick(s)
                `STATUS` Display status of the removal of the brick(s)
                `FORCE` Force the removal of the brick(s)
        replica:
          type: integer
          title: replica
      additionalProperties: false
      title: volume_removebrick
    gluster_volume_replacebrick_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        src_brick:
          type: object
          properties:
            peer_name:
              title: peer_name
              type: string
            peer_path:
              title: peer_path
              type: string
          additionalProperties: false
          title: src_brick
          description: >-
            `src_brick` Dict where
                `peer_name` key is a string representing IP or DNS name of the peer
                `peer_path` key is a string representing the full path of the brick
        new_brick:
          type: object
          properties:
            peer_name:
              title: peer_name
              type: string
            peer_path:
              title: peer_path
              type: string
          additionalProperties: false
          title: new_brick
      additionalProperties: false
      title: volume_replacebrick
    gluster_volume_restart_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        force:
          type: boolean
          title: force
          default: true
      additionalProperties: false
      title: volume_restart
    gluster_volume_start_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        force:
          type: boolean
          title: force
          default: true
      additionalProperties: false
      title: volume_start
    gluster_volume_status_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        verbose:
          type: boolean
          title: verbose
          default: true
      additionalProperties: false
      title: volume_status
    gluster_volume_stop_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` String representing name of gluster volume"
        force:
          type: boolean
          title: force
          default: false
      additionalProperties: false
      title: volume_stop
    group_create_0:
      type: object
      properties:
        gid:
          type: integer
          title: gid
          description: If `gid` is not provided it is automatically filled with the next
            one available.
        name:
          title: name
          type: string
        smb:
          type: boolean
          title: smb
          default: true
        sudo:
          type: boolean
          title: sudo
          default: false
        sudo_nopasswd:
          type: boolean
          title: sudo_nopasswd
          default: false
        sudo_commands:
          title: sudo_commands
          default: []
          type: array
          items:
            title: command
            type: string
        allow_duplicate_gid:
          type: boolean
          title: allow_duplicate_gid
          default: false
          description: "`allow_duplicate_gid` allows distinct group names to share the
            same gid."
        users:
          title: users
          default: []
          type: array
          items:
            type: integer
            title: id
          description: "`users` is a list of user ids (`id` attribute from `user.query`)."
      additionalProperties: false
      title: group_create
    group_get_group_obj_0:
      type: object
      properties:
        groupname:
          title: groupname
          default: null
          type: string
        gid:
          type: integer
          title: gid
          default: null
      additionalProperties: false
      title: get_group_obj
    idmap_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "`name` the pre-windows 2000 domain name."
        dns_domain_name:
          title: dns_domain_name
          type: string
        range_low:
          type: integer
          title: range_low
          description: >-
            `range_low` and `range_high` specify the UID and GID range for
            which this backend is authoritative.

            `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.
        range_high:
          type: integer
          title: range_high
          description: >-
            `range_low` and `range_high` specify the UID and GID range for
            which this backend is authoritative.

            `range_low` and `range_high` specify the UID and GID range for which this backend is authoritative.
        idmap_backend:
          title: idmap_backend
          type: string
          enum:
            - AD
            - AUTORID
            - LDAP
            - NSS
            - RFC2307
            - RID
            - TDB
          description: >-
            `idmap_backend` provides a plugin interface for Winbind to use
            varying

            backends to store SID/uid/gid mapping tables. The correct setting

            depends on the environment in which the NAS is deployed.
        certificate:
          type: integer
          title: certificate
          nullable: true
        options:
          anyOf:
            - type: object
              properties:
                schema_mode:
                  title: nss_info_ad
                  default: SFU
                  type: string
                  enum:
                    - SFU
                    - SFU20
                    - RFC2307
                unix_primary_group:
                  type: boolean
                  title: unix_primary_group
                  default: false
                unix_nss_info:
                  type: boolean
                  title: unix_nss_info
                  default: false
              additionalProperties: false
              title: idmap_ad_options
            - type: object
              properties:
                rangesize:
                  type: integer
                  title: rangesize
                  default: 100000
                readonly:
                  type: boolean
                  title: readonly
                  default: false
                ignore_builtin:
                  type: boolean
                  title: ignore_builtin
                  default: false
              additionalProperties: false
              title: idmap_autorid_options
            - type: object
              properties:
                ldap_base_dn:
                  title: ldap_base_dn
                  type: string
                ldap_user_dn:
                  title: ldap_user_dn
                  type: string
                ldap_user_dn_password:
                  title: ldap_user_dn_password
                  type: string
                ldap_url:
                  title: ldap_url
                  type: string
                readonly:
                  type: boolean
                  title: readonly
                  default: false
                ssl:
                  title: ldap_ssl_choice
                  default: ON
                  type: string
                  enum:
                    - OFF
                    - ON
                    - START_TLS
                validate_certificates:
                  type: boolean
                  title: validate_certificates
                  default: true
              additionalProperties: false
              title: idmap_ldap_options
            - type: object
              properties:
                linked_service:
                  title: linked_service
                  default: LOCAL_ACCOUNT
                  type: string
                  enum:
                    - LOCAL_ACCOUNT
                    - LDAP
              additionalProperties: false
              title: idmap_nss_options
            - type: object
              properties:
                ldap_server:
                  title: ldap_server
                  type: string
                  enum:
                    - AD
                    - STANDALONE
                ldap_realm:
                  type: boolean
                  title: ldap_realm
                  default: false
                bind_path_user:
                  title: bind_path_user
                  type: string
                bind_path_group:
                  title: bind_path_group
                  type: string
                user_cn:
                  type: boolean
                  title: user_cn
                  default: false
                cn_realm:
                  title: cn_realm
                  type: string
                ldap_domain:
                  title: ldap_domain
                  type: string
                ldap_url:
                  title: ldap_url
                  type: string
                ldap_user_dn:
                  title: ldap_user_dn
                  type: string
                ldap_user_dn_password:
                  title: ldap_user_dn_password
                  type: string
                ssl:
                  title: ldap_ssl_choice
                  default: ON
                  type: string
                  enum:
                    - OFF
                    - ON
                    - START_TLS
                validate_certificates:
                  type: boolean
                  title: validate_certificates
                  default: true
              additionalProperties: false
              title: idmap_rfc2307_options
            - type: object
              properties:
                sssd_compat:
                  type: boolean
                  title: sssd_compat
                  default: false
              additionalProperties: false
              title: idmap_rid_options
          nullable: false
          description: "`options` are additional parameters that are backend-dependent:"
      additionalProperties: false
      title: idmap_domain_create
    idmap_options_choices_0:
      title: idmap_backend
      type: string
      enum:
        - AD
        - AUTORID
        - LDAP
        - NSS
        - RFC2307
        - RID
        - TDB
    initshutdownscript_create_0:
      type: object
      properties:
        type:
          title: type
          type: string
          enum:
            - COMMAND
            - SCRIPT
          description: "`type` indicates if a command or script should be executed at
            `when`."
        command:
          title: command
          type: string
          nullable: true
        script_text:
          title: script_text
          type: string
          nullable: true
        script:
          title: script
          type: string
          nullable: true
        when:
          title: when
          type: string
          enum:
            - PREINIT
            - POSTINIT
            - SHUTDOWN
          description: >-
            `type` indicates if a command or script should be executed at
            `when`.

            There are three choices for `when`:
        enabled:
          type: boolean
          title: enabled
          default: true
        timeout:
          type: integer
          title: timeout
          default: 10
        comment:
          title: comment
          default: ""
          type: string
      additionalProperties: false
      title: init_shutdown_script_create
    interface_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
        description:
          title: description
          default: ""
          type: string
        type:
          title: type
          type: string
          enum:
            - BRIDGE
            - LINK_AGGREGATION
            - VLAN
          description: >-
            For BRIDGE `type` the following attribute is required:
            bridge_members.

            For LINK_AGGREGATION `type` the following attributes are required: lag_ports,

            lag_protocol.

            For VLAN `type` the following attributes are required: vlan_parent_interface,

            vlan_tag and vlan_pcp.
        ipv4_dhcp:
          type: boolean
          title: ipv4_dhcp
          default: false
        ipv6_auto:
          type: boolean
          title: ipv6_auto
          default: false
        aliases:
          title: aliases
          default: []
          type: array
          items:
            type: object
            properties:
              type:
                title: type
                default: INET
                type: string
                enum:
                  - INET
                  - INET6
              address:
                title: address
                type: string
              netmask:
                type: integer
                title: netmask
            additionalProperties: false
            title: interface_alias
        failover_critical:
          type: boolean
          title: failover_critical
          default: false
        failover_group:
          type: integer
          title: failover_group
          nullable: true
        failover_vhid:
          type: integer
          title: failover_vhid
          nullable: true
        failover_aliases:
          title: failover_aliases
          default: []
          type: array
          items:
            type: object
            properties:
              type:
                title: type
                default: INET
                type: string
                enum:
                  - INET
                  - INET6
              address:
                title: address
                type: string
            additionalProperties: false
            title: interface_failover_alias
        failover_virtual_aliases:
          title: failover_virtual_aliases
          default: []
          type: array
          items:
            type: object
            properties:
              type:
                title: type
                default: INET
                type: string
                enum:
                  - INET
                  - INET6
              address:
                title: address
                type: string
            additionalProperties: false
            title: interface_virtual_alias
        bridge_members:
          title: bridge_members
          default: []
          type: array
          items: {}
        stp:
          type: boolean
          title: stp
          default: true
        lag_protocol:
          title: lag_protocol
          type: string
          enum:
            - LACP
            - FAILOVER
            - LOADBALANCE
            - ROUNDROBIN
            - NONE
        xmit_hash_policy:
          title: xmit_hash_policy
          default: null
          type: string
          enum:
            - LAYER2
            - LAYER2+3
            - LAYER3+4
          nullable: true
        lacpdu_rate:
          title: lacpdu_rate
          default: null
          type: string
          enum:
            - SLOW
            - FAST
          nullable: true
        lag_ports:
          title: lag_ports
          default: []
          type: array
          items:
            title: interface
            type: string
        vlan_parent_interface:
          title: vlan_parent_interface
          type: string
        vlan_tag:
          type: integer
          title: vlan_tag
        vlan_pcp:
          type: integer
          title: vlan_pcp
          nullable: true
        mtu:
          type: integer
          title: mtu
          default: null
          nullable: true
      additionalProperties: false
      title: interface_create
    interface_bridge_members_choices_0:
      title: id
      default: null
      type: string
      nullable: true
    interface_choices_0:
      type: object
      properties:
        bridge_members:
          type: boolean
          title: bridge_members
          default: false
          description: "`bridge_members` will include BRIDGE members."
        lag_ports:
          type: boolean
          title: lag_ports
          default: false
          description: "`lag_ports` will include LINK_AGGREGATION ports."
        vlan_parent:
          type: boolean
          title: vlan_parent
          default: true
          description: "`vlan_parent` will include VLAN parent interface."
        exclude:
          title: exclude
          default:
            - epair
            - tap
            - vnet
          type: array
          items: {}
          description: "`exclude` is a list of interfaces prefix to remove."
        exclude_types:
          title: exclude_types
          default: []
          type: array
          items:
            title: type
            type: string
            enum:
              - BRIDGE
              - LINK_AGGREGATION
              - PHYSICAL
              - UNKNOWN
              - VLAN
        include:
          title: include
          default: []
          type: array
          items: {}
      additionalProperties: false
      title: options
    interface_commit_0:
      type: object
      properties:
        rollback:
          type: boolean
          title: rollback
          default: true
          description: "`rollback` as true (default) will rollback changes in case they
            fail to apply."
        checkin_timeout:
          type: integer
          title: checkin_timeout
          default: 60
      additionalProperties: false
      title: options
    interface_ip_in_use_0:
      type: object
      properties:
        ipv4:
          type: boolean
          title: ipv4
          default: true
        ipv6:
          type: boolean
          title: ipv6
          default: true
        ipv6_link_local:
          type: boolean
          title: ipv6_link_local
          default: false
        loopback:
          type: boolean
          title: loopback
          default: false
          description: "`loopback` will return loopback interface addresses."
        any:
          type: boolean
          title: any
          default: false
          description: "`any` will return wildcard addresses (0.0.0.0 and ::)."
        static:
          type: boolean
          title: static
          default: false
          description: "`static` when enabled will ensure we only return static ip's
            configured."
      additionalProperties: false
      title: ips
    interface_lag_ports_choices_0:
      title: id
      default: null
      type: string
      nullable: true
    interface_capabilities_get_0:
      title: name
      type: string
    interface_capabilities_set_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: |-
            `name` String representing name of the interface
            `capabilities` List representing capabilities to be acted upon
        capabilties:
          title: capabilties
          default: []
          type: array
          items: {}
        action:
          title: action
          type: string
          enum:
            - ENABLE
            - DISABLE
      additionalProperties: false
      title: capabilities_set
    ipmi_identify_0:
      type: object
      properties:
        seconds:
          type: integer
          title: seconds
        force:
          type: boolean
          title: force
      additionalProperties: false
      title: options
    iscsi_auth_create_0:
      type: object
      properties:
        tag:
          type: integer
          title: tag
          description: "`tag` should be unique among all configured iSCSI Authorized
            Accesses."
        user:
          title: user
          type: string
        secret:
          title: secret
          type: string
          description: "`secret` and `peersecret` should have length between 12-16 letters
            inclusive."
        peeruser:
          title: peeruser
          default: ""
          type: string
        peersecret:
          title: peersecret
          default: ""
          type: string
          description: "`secret` and `peersecret` should have length between 12-16 letters
            inclusive."
      additionalProperties: false
      title: iscsi_auth_create
    iscsi_extent_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          default: DISK
          type: string
          enum:
            - DISK
            - FILE
          description: >-
            When `type` is set to FILE, attribute `filesize` is used and it
            represents number of bytes. `filesize` if

            not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.

            With `type` being set to DISK, a valid ZFS volume is required.
        disk:
          title: disk
          default: null
          type: string
          nullable: true
        serial:
          title: serial
          default: null
          type: string
          nullable: true
        path:
          title: path
          default: null
          type: string
          description: >-
            When `type` is set to FILE, attribute `filesize` is used and it
            represents number of bytes. `filesize` if

            not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.
          nullable: true
        filesize:
          type: integer
          title: filesize
          default: 0
          description: >-
            When `type` is set to FILE, attribute `filesize` is used and it
            represents number of bytes. `filesize` if

            not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.
        blocksize:
          type: integer
          title: blocksize
          default: 512
          description: >-
            When `type` is set to FILE, attribute `filesize` is used and it
            represents number of bytes. `filesize` if

            not zero should be a multiple of `blocksize`. `path` is a required attribute with `type` set as FILE.
        pblocksize:
          type: boolean
          title: pblocksize
        avail_threshold:
          type: integer
          title: avail_threshold
          nullable: true
        comment:
          title: comment
          type: string
        insecure_tpc:
          type: boolean
          title: insecure_tpc
          default: true
          description: >-
            `insecure_tpc` when enabled allows an initiator to bypass normal
            access control and access any scannable

            target. This allows xcopy operations otherwise blocked by access control.
        xen:
          type: boolean
          title: xen
          description: "`xen` is a boolean value which is set to true if Xen is being used
            as the iSCSI initiator."
        rpm:
          title: rpm
          default: SSD
          type: string
          enum:
            - UNKNOWN
            - SSD
            - "5400"
            - "7200"
            - "10000"
            - "15000"
        ro:
          type: boolean
          title: ro
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: iscsi_extent_create
    iscsi_global_update_0:
      type: object
      properties:
        basename:
          title: basename
          type: string
        isns_servers:
          title: isns_servers
          default: []
          type: array
          items:
            title: server
            type: string
        pool_avail_threshold:
          type: integer
          title: pool_avail_threshold
          nullable: true
        alua:
          type: boolean
          title: alua
      additionalProperties: false
      title: iscsiglobal_update
    iscsi_host_create_0:
      type: object
      properties:
        ip:
          title: ip
          type: string
          description: "`ip` indicates an IP address of the host."
        description:
          title: description
          default: ""
          type: string
          description: "`description` is a human-readable name for the host."
        iqns:
          title: iqns
          default: []
          type: array
          items:
            title: iqn
            type: string
        added_automatically:
          type: boolean
          title: added_automatically
          default: false
      additionalProperties: false
      title: iscsi_host_create
    iscsi_host_get_initiators_0:
      type: integer
      title: id
    iscsi_host_get_targets_0:
      type: integer
      title: id
    iscsi_host_set_initiators_0:
      type: integer
      title: id
      description: Associates initiator groups `ids` with host `id`.
    iscsi_host_set_initiators_1:
      title: ids
      default: []
      type: array
      items:
        type: integer
        title: id
      description: Associates initiator groups `ids` with host `id`.
    iscsi_host_set_initiators_2:
      type: boolean
      title: force
      default: false
    iscsi_host_set_initiators:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/iscsi_host_set_initiators_0"
        ids:
          $ref: "#/components/schemas/iscsi_host_set_initiators_1"
        force:
          $ref: "#/components/schemas/iscsi_host_set_initiators_2"
    iscsi_host_set_targets_0:
      type: integer
      title: id
    iscsi_host_set_targets_1:
      title: ids
      default: []
      type: array
      items:
        type: integer
        title: id
    iscsi_host_set_targets:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/iscsi_host_set_targets_0"
        ids:
          $ref: "#/components/schemas/iscsi_host_set_targets_1"
    iscsi_initiator_create_0:
      type: object
      properties:
        initiators:
          title: initiators
          default: []
          type: array
          items: {}
          description: >-
            `initiators` is a list of initiator hostnames which are authorized
            to access an iSCSI Target. To allow all

            possible initiators, `initiators` can be left empty.
        auth_network:
          title: auth_network
          default: []
          type: array
          items:
            title: ip
            type: string
        comment:
          title: comment
          type: string
      additionalProperties: false
      title: iscsi_initiator_create
    iscsi_portal_create_0:
      type: object
      properties:
        comment:
          title: comment
          type: string
        discovery_authmethod:
          title: discovery_authmethod
          default: NONE
          type: string
          enum:
            - NONE
            - CHAP
            - CHAP_MUTUAL
        discovery_authgroup:
          type: integer
          title: discovery_authgroup
          default: null
          nullable: true
        listen:
          title: listen
          default: []
          type: array
          items:
            type: object
            properties:
              ip:
                title: ip
                type: string
              port:
                type: integer
                title: port
                default: 3260
            additionalProperties: false
            title: listen
      additionalProperties: false
      title: iscsiportal_create
    iscsi_target_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
        alias:
          title: alias
          type: string
          nullable: true
        mode:
          title: mode
          default: ISCSI
          type: string
          enum:
            - ISCSI
            - FC
            - BOTH
        groups:
          title: groups
          default: []
          type: array
          items:
            type: object
            properties:
              portal:
                type: integer
                title: portal
              initiator:
                title: initiator
                default: null
                nullable: true
                type: integer
              authmethod:
                title: authmethod
                default: NONE
                type: string
                enum:
                  - NONE
                  - CHAP
                  - CHAP_MUTUAL
              auth:
                title: auth
                default: null
                nullable: true
                type: integer
            additionalProperties: false
            title: group
      additionalProperties: false
      title: iscsi_target_create
    iscsi_targetextent_create_0:
      type: object
      properties:
        target:
          type: integer
          title: target
        lunid:
          type: integer
          title: lunid
          nullable: true
        extent:
          type: integer
          title: extent
      additionalProperties: false
      title: iscsi_targetextent_create
    kerberos_update_0:
      type: object
      properties:
        appdefaults_aux:
          title: appdefaults_aux
          type: string
          description: '`appdefaults_aux` add parameters to "appdefaults" section of the
            krb5.conf file.'
        libdefaults_aux:
          title: libdefaults_aux
          type: string
      additionalProperties: false
      title: kerberos_settings_update
    kerberos_keytab_create_0:
      type: object
      properties:
        file:
          title: file
          type: string
          description: "`file` b64encoded kerberos keytab"
        name:
          title: name
          type: string
      additionalProperties: false
      title: kerberos_keytab_create
    kerberos_keytab_upload_keytab_0:
      type: object
      properties:
        name:
          title: name
          type: string
      additionalProperties: false
      title: keytab_data
    kerberos_realm_create_0:
      type: object
      properties:
        realm:
          title: realm
          type: string
        kdc:
          title: kdc
          default: []
          type: array
          items: {}
        admin_server:
          title: admin_server
          default: []
          type: array
          items: {}
        kpasswd_server:
          title: kpasswd_server
          default: []
          type: array
          items: {}
      additionalProperties: false
      title: kerberos_realm_create
    keychaincredential_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: Every Keychain Credential has a `name` which is used to distinguish
            it from others.
        type:
          title: type
          type: string
          description: >-
            The following `type`s are supported:
             * `SSH_KEY_PAIR`
               Which `attributes` are:
               * `private_key`
               * `public_key` (which can be omitted and thus automatically derived from private key)
               At least one attribute is required.
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
          description: >-
            The following `type`s are supported:
             * `SSH_KEY_PAIR`
               Which `attributes` are:
               * `private_key`
               * `public_key` (which can be omitted and thus automatically derived from private key)
               At least one attribute is required.
             * `SSH_CREDENTIALS`
               Which `attributes` are:
               * `host`
               * `port` (default 22)
               * `username` (default root)
               * `private_key` (Keychain Credential ID)
               * `remote_host_key` (you can use `keychaincredential.remote_ssh_host_key_scan` do discover it)
               * `cipher`: one of `STANDARD`, `FAST`, or `DISABLED` (last requires special support from both SSH server and
                 client)
               * `connect_timeout` (default 10)
      additionalProperties: false
      title: keychain_credential_create
    keychaincredential_remote_ssh_host_key_scan_0:
      type: object
      properties:
        host:
          title: host
          type: string
        port:
          title: port
          default: 22
          type: string
        connect_timeout:
          type: integer
          title: connect_timeout
          default: 10
      additionalProperties: false
      title: keychain_remote_ssh_host_key_scan
    keychaincredential_remote_ssh_semiautomatic_setup_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: >-
            Perform semi-automatic SSH connection setup with other FreeNAS
            machine. It creates a `SSH_CREDENTIALS`

            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and

            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
        url:
          title: url
          type: string
          description: >-
            Perform semi-automatic SSH connection setup with other FreeNAS
            machine. It creates a `SSH_CREDENTIALS`

            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and

            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
        token:
          title: token
          type: string
          description: >-
            Perform semi-automatic SSH connection setup with other FreeNAS
            machine. It creates a `SSH_CREDENTIALS`

            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and

            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
        password:
          title: password
          type: string
        username:
          title: username
          default: root
          type: string
          description: >-
            Perform semi-automatic SSH connection setup with other FreeNAS
            machine. It creates a `SSH_CREDENTIALS`

            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and

            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
        private_key:
          type: integer
          title: private_key
          description: >-
            Perform semi-automatic SSH connection setup with other FreeNAS
            machine. It creates a `SSH_CREDENTIALS`

            credential with specified `name` that can be used to connect to FreeNAS machine with specified `url` and

            temporary auth `token`. Other FreeNAS machine adds `private_key` to allowed `username`'s private keys. Other
        cipher:
          title: cipher
          default: STANDARD
          type: string
          enum:
            - STANDARD
            - FAST
            - DISABLED
          description: "`SSH_CREDENTIALS` attributes such as `cipher` and
            `connect_timeout` can be specified as well."
        connect_timeout:
          type: integer
          title: connect_timeout
          default: 10
          description: "`SSH_CREDENTIALS` attributes such as `cipher` and
            `connect_timeout` can be specified as well."
      additionalProperties: false
      title: keychain_remote_ssh_semiautomatic_setup
    keychaincredential_setup_ssh_connection_0:
      type: object
      properties:
        private_key:
          type: object
          properties:
            generate_key:
              type: boolean
              title: generate_key
              default: true
            existing_key_id:
              type: integer
              title: existing_key_id
            name:
              title: name
              type: string
          additionalProperties: false
          title: private_key
        connection_name:
          title: connection_name
          type: string
        setup_type:
          title: setup_type
          default: MANUAL
          type: string
          enum:
            - SEMI-AUTOMATIC
            - MANUAL
          description: |-
            1) Generating SSH Key Pair if required
            2) Setting up SSH Credentials based on `setup_type`
        semi_automatic_setup:
          type: object
          properties:
            url:
              title: url
              type: string
            token:
              title: token
              type: string
            password:
              title: password
              type: string
            username:
              title: username
              default: root
              type: string
            cipher:
              title: cipher
              default: STANDARD
              type: string
              enum:
                - STANDARD
                - FAST
                - DISABLED
            connect_timeout:
              type: integer
              title: connect_timeout
              default: 10
          additionalProperties: false
          title: keychain_remote_ssh_semiautomatic_setup
        manual_setup:
          type: object
          properties: {}
          additionalProperties: true
          title: manual_setup
      additionalProperties: false
      title: setup_ssh_connection
    keychaincredential_used_by_0:
      type: integer
      title: id
    kmip_update_0:
      type: object
      properties:
        enabled:
          type: boolean
          title: enabled
          description: >-
            `enabled` if true, cannot be set to disabled if there are existing
            keys pending to be synced. However users

            can still perform this action by enabling `force_clear`.
        manage_sed_disks:
          type: boolean
          title: manage_sed_disks
          description: >-
            `manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys
            from local database to remote KMIP server.

            When disabled, if there are any keys left to be retrieved from the KMIP server,

            it will sync them back to local database.
        manage_zfs_keys:
          type: boolean
          title: manage_zfs_keys
          description: >-
            `manage_zfs_keys`/`manage_sed_disks` when enabled will sync keys
            from local database to remote KMIP server.

            When disabled, if there are any keys left to be retrieved from the KMIP server,

            it will sync them back to local database.
        certificate:
          type: integer
          title: certificate
          description: System currently authenticates connection with remote KMIP Server
            with a TLS handshake. `certificate` and
          nullable: true
        certificate_authority:
          type: integer
          title: certificate_authority
          description: "`certificate_authority` determine the certs which will be used to
            initiate the TLS handshake with `server`."
          nullable: true
        port:
          type: integer
          title: port
        server:
          title: server
          type: string
          description: >-
            `certificate_authority` determine the certs which will be used to
            initiate the TLS handshake with `server`.

            `validate` is enabled by default. When enabled, system will test connection to `server` making sure

            it's reachable.
          nullable: true
        ssl_version:
          title: ssl_version
          type: string
          enum:
            - PROTOCOL_TLSv1
            - PROTOCOL_TLSv1_1
            - PROTOCOL_TLSv1_2
          description: "`ssl_version` can be specified to match the ssl configuration
            being used by KMIP server."
        force_clear:
          type: boolean
          title: force_clear
          description: >-
            `enabled` if true, cannot be set to disabled if there are existing
            keys pending to be synced. However users

            can still perform this action by enabling `force_clear`.

            `change_server` is a boolean field which allows users to migrate data between two KMIP servers. System

            will first migrate keys from old KMIP server to local database and then migrate the keys from local database

            to new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass

            this by enabling `force_clear`.
        change_server:
          type: boolean
          title: change_server
          description: >-
            `change_server` is a boolean field which allows users to migrate
            data between two KMIP servers. System

            will first migrate keys from old KMIP server to local database and then migrate the keys from local database

            to new KMIP server. If it is unable to retrieve all the keys from old server, this will fail. Users can bypass

            this by enabling `force_clear`.
        validate:
          type: boolean
          title: validate
          description: >-
            `validate` is enabled by default. When enabled, system will test
            connection to `server` making sure

            it's reachable.
      additionalProperties: false
      title: kmip_entry
    kubernetes_update_0:
      type: object
      properties:
        servicelb:
          type: boolean
          title: servicelb
          description: >-
            `servicelb` is a boolean to enable or disable the integrated k3s
            Service Loadbalancer called "Klipper".

            This can be set to disabled to enable the user to run another LoadBalancer or no LoadBalancer at all.
        configure_gpus:
          type: boolean
          title: configure_gpus
          description: >-
            `configure_gpus` is a boolean to enable or disable to prevent
            automatically loading any GPU Support

            into kubernetes. This includes not loading any daemonsets for Intel and NVIDIA support.
        pool:
          title: pool
          type: string
          description: >-
            `pool` must be a valid ZFS pool configured in the system.
            Kubernetes service will initialise the pool by

            creating datasets under `pool_name/ix-applications`.
          nullable: true
        cluster_cidr:
          title: cluster_cidr
          type: string
          description: >-
            `cluster_cidr` is the CIDR to be used for default NAT network
            between workloads.

            Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change

            requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset

            and any data within it when any of the values for the above configuration change.
        service_cidr:
          title: service_cidr
          type: string
          description: >-
            `service_cidr` is the CIDR to be used for kubernetes services which
            are an abstraction and refer to a

            logically set of kubernetes pods.

            `cluster_dns_ip` is the IP of the DNS server running for the kubernetes cluster. It must be in the range

            of `service_cidr`.

            Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change

            requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset

            and any data within it when any of the values for the above configuration change.
        cluster_dns_ip:
          title: cluster_dns_ip
          type: string
          description: >-
            `cluster_dns_ip` is the IP of the DNS server running for the
            kubernetes cluster. It must be in the range

            of `service_cidr`.

            Specifying values for `cluster_cidr`, `service_cidr` and `cluster_dns_ip` are permanent and a subsequent change

            requires re-initialisation of the applications. To clarify, system will destroy old `ix-applications` dataset

            and any data within it when any of the values for the above configuration change.
        node_ip:
          title: node_ip
          type: string
          description: >-
            `node_ip` is the IP address which the kubernetes cluster will
            assign to the TrueNAS node. It defaults to

            0.0.0.0 and the cluster in this case will automatically manage which IP address to use for managing traffic

            for default NAT network.
        route_v4_interface:
          title: route_v4_interface
          type: string
          description: >-
            If users want to restrict traffic over a certain gateway /
            interface, they can specify a default route

            for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes

            cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default

            route for IPv6 traffic.
          nullable: true
        route_v4_gateway:
          title: route_v4_gateway
          type: string
          description: >-
            If users want to restrict traffic over a certain gateway /
            interface, they can specify a default route

            for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes

            cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default

            route for IPv6 traffic.
          nullable: true
        route_v6_interface:
          title: route_v6_interface
          type: string
          description: >-
            If users want to restrict traffic over a certain gateway /
            interface, they can specify a default route

            for the NAT traffic. `route_v4_interface` and `route_v4_gateway` will set a default route for the kubernetes

            cluster IPv4 traffic. Similarly `route_v6_interface` and 'route_v6_gateway` can be used to specify default

            route for IPv6 traffic.
          nullable: true
        route_v6_gateway:
          title: route_v6_gateway
          type: string
          nullable: true
        migrate_applications:
          type: boolean
          title: migrate_applications
      additionalProperties: false
      title: kubernetes_entry
    kubernetes_backup_chart_releases_0:
      title: backup_name
      default: null
      type: string
      nullable: true
    kubernetes_delete_backup_0:
      title: backup_name
      type: string
    kubernetes_restore_backup_0:
      title: backup_name
      type: string
      description: Restore `backup_name` chart releases backup.
    kubernetes_restore_backup_1:
      type: object
      properties:
        wait_for_csi:
          type: boolean
          title: wait_for_csi
          default: true
      additionalProperties: false
      title: options
    kubernetes_restore_backup:
      type: object
      properties:
        backup_name:
          $ref: "#/components/schemas/kubernetes_restore_backup_0"
        options:
          $ref: "#/components/schemas/kubernetes_restore_backup_1"
    ldap_update_0:
      type: object
      properties:
        hostname:
          title: hostname
          default: []
          type: array
          items: {}
          description: |-
            `hostname` list of ip addresses or hostnames of LDAP servers with
            which to communicate in order of preference. Failover only occurs
            if the current LDAP server is unresponsive.
        basedn:
          title: basedn
          type: string
          description: >-
            `basedn` specifies the default base DN to use when performing ldap

            operations. The base must be specified as a Distinguished Name in LDAP

            format.
        binddn:
          title: binddn
          type: string
          description: >-
            `binddn` specifies the default bind DN to use when performing ldap

            operations. The bind DN must be specified as a Distinguished Name in

            LDAP format.

            `kerberos_principal` kerberos principal to use for SASL GSSAPI

            authentication to the remote server. If `kerberos_realm` is specified

            without a keytab, then the `binddn` and `bindpw` are used to

            perform to obtain the ticket necessary for GSSAPI authentication.
        bindpw:
          title: bindpw
          type: string
          description: >-
            `kerberos_principal` kerberos principal to use for SASL GSSAPI

            authentication to the remote server. If `kerberos_realm` is specified

            without a keytab, then the `binddn` and `bindpw` are used to

            perform to obtain the ticket necessary for GSSAPI authentication.
        anonbind:
          type: boolean
          title: anonbind
          default: false
          description: "`anonbind` use anonymous authentication."
        ssl:
          title: ldap_ssl_choice
          default: ON
          type: string
          enum:
            - OFF
            - ON
            - START_TLS
          description: |-
            `ssl` establish SSL/TLS-protected connections to the LDAP server(s).
            GSSAPI signing is disabled on SSL/TLS-protected connections if
            kerberos authentication is used.
        certificate:
          type: integer
          title: certificate
          description: |-
            `certificate` LDAPs client certificate to be used for certificate-
            based authentication.
          nullable: true
        validate_certificates:
          type: boolean
          title: validate_certificates
          default: true
          description: >-
            `validate_certificates` specifies whether to perform checks on
            server

            certificates in a TLS session. If enabled, TLS_REQCERT demand is set.

            The server certificate is requested. If no certificate is provided or

            if a bad certificate is provided, the session is immediately terminated.

            If disabled, TLS_REQCERT allow is set. The server certificate is

            requested, but all errors are ignored.
        disable_freenas_cache:
          type: boolean
          title: disable_freenas_cache
        timeout:
          type: integer
          title: timeout
          default: 30
          description: |-
            `timeout` specifies  a  timeout  (in  seconds) after which calls to
            synchronous LDAP APIs will abort if no response is received.
        dns_timeout:
          type: integer
          title: dns_timeout
          default: 5
          description: >-
            `dns_timeout` specifies the timeout (in seconds) after which the

            poll(2)/select(2) following a connect(2) returns in case of no activity

            for openldap. For nslcd this specifies the time limit (in seconds) to

            use when connecting to the directory server. This directly impacts the

            length of time that the LDAP service tries before failing over to

            a secondary LDAP URI.
        kerberos_realm:
          type: integer
          title: kerberos_realm
          description: >-
            `kerberos_realm` in which the server is located. This parameter is

            only required for SASL GSSAPI authentication to the remote LDAP server.

            `kerberos_principal` kerberos principal to use for SASL GSSAPI

            authentication to the remote server. If `kerberos_realm` is specified

            without a keytab, then the `binddn` and `bindpw` are used to

            perform to obtain the ticket necessary for GSSAPI authentication.
          nullable: true
        kerberos_principal:
          title: kerberos_principal
          type: string
          description: >-
            `kerberos_principal` kerberos principal to use for SASL GSSAPI

            authentication to the remote server. If `kerberos_realm` is specified

            without a keytab, then the `binddn` and `bindpw` are used to

            perform to obtain the ticket necessary for GSSAPI authentication.
        has_samba_schema:
          type: boolean
          title: has_samba_schema
          default: false
        auxiliary_parameters:
          title: auxiliary_parameters
          default: false
          type: string
        schema:
          title: nss_info_ldap
          default: RFC2307
          type: string
          enum:
            - RFC2307
            - RFC2307BIS
        enable:
          type: boolean
          title: enable
      additionalProperties: false
      title: ldap_update
    lldp_update_0:
      type: object
      properties:
        intdesc:
          type: boolean
          title: intdesc
        country:
          title: country
          type: string
          description: "`country` is a two letter ISO 3166 country code required for LLDP
            location support."
        location:
          title: location
          type: string
      additionalProperties: false
      title: lldp_entry
    mail_update_0:
      type: object
      properties:
        fromemail:
          title: fromemail
          type: string
          description: "`fromemail` is used as a sending address which the mail server
            will use for sending emails."
        fromname:
          title: fromname
          type: string
        outgoingserver:
          title: outgoingserver
          type: string
          description: "`outgoingserver` is the hostname or IP address of SMTP server used
            for sending an email."
        port:
          type: integer
          title: port
        security:
          title: security
          type: string
          enum:
            - PLAIN
            - SSL
            - TLS
          description: "`security` is type of encryption desired."
        smtp:
          type: boolean
          title: smtp
        user:
          title: user
          type: string
          nullable: true
        pass:
          title: pass
          type: string
          nullable: true
        oauth:
          type: object
          properties:
            client_id:
              title: client_id
              type: string
            client_secret:
              title: client_secret
              type: string
            refresh_token:
              title: refresh_token
              type: string
          additionalProperties: false
          title: oauth
      additionalProperties: false
      title: mail_entry
    mail_send_0:
      type: object
      properties:
        subject:
          title: subject
          type: string
        text:
          title: text
          type: string
          description: "`text` will be formatted to HTML using Markdown and rendered using
            default E-Mail template."
        html:
          title: html
          type: string
          description: You can put your own HTML using `html`. If `html` is null, no HTML
            MIME part will be added to E-Mail.
          nullable: true
        to:
          title: to
          default: []
          type: array
          items:
            title: email
            type: string
        cc:
          title: cc
          default: []
          type: array
          items:
            title: email
            type: string
        interval:
          type: integer
          title: interval
          nullable: true
        channel:
          title: channel
          type: string
          nullable: true
        timeout:
          type: integer
          title: timeout
          default: 300
        attachments:
          type: boolean
          title: attachments
          default: false
          description: >-
            If `attachments` is true, a list compromised of the following dict
            is required

            via HTTP upload:
              - headers(list)
                - name(str)
                - value(str)
                - params(dict)
              - content (str)
        queue:
          type: boolean
          title: queue
          default: true
        extra_headers:
          type: object
          properties: {}
          additionalProperties: true
          title: extra_headers
      additionalProperties: false
      title: mail_message
    mail_send_1:
      type: object
      properties:
        fromemail:
          title: fromemail
          type: string
        fromname:
          title: fromname
          type: string
        outgoingserver:
          title: outgoingserver
          type: string
        port:
          type: integer
          title: port
        security:
          title: security
          type: string
          enum:
            - PLAIN
            - SSL
            - TLS
        smtp:
          type: boolean
          title: smtp
        user:
          title: user
          type: string
          nullable: true
        pass:
          title: pass
          type: string
          nullable: true
        oauth:
          type: object
          properties:
            client_id:
              title: client_id
              type: string
            client_secret:
              title: client_secret
              type: string
            refresh_token:
              title: refresh_token
              type: string
          additionalProperties: false
          title: oauth
      additionalProperties: false
      title: mail_entry
    mail_send:
      type: object
      properties:
        mail_message:
          $ref: "#/components/schemas/mail_send_0"
        mail_entry:
          $ref: "#/components/schemas/mail_send_1"
    network_configuration_update_0:
      type: object
      properties:
        hostname:
          title: hostname
          type: string
        domain:
          title: domain
          type: string
        ipv4gateway:
          title: ipv4gateway
          type: string
          description: "`ipv4gateway` if set is used instead of the default gateway
            provided by DHCP."
        ipv6gateway:
          title: ipv6gateway
          type: string
        nameserver1:
          title: nameserver1
          type: string
          description: "`nameserver1` is primary DNS server."
        nameserver2:
          title: nameserver2
          type: string
          description: "`nameserver2` is secondary DNS server."
        nameserver3:
          title: nameserver3
          type: string
          description: "`nameserver3` is tertiary DNS server."
        httpproxy:
          title: httpproxy
          type: string
          description: "`httpproxy` attribute must be provided if a proxy is to be used
            for network operations."
        netwait_enabled:
          type: boolean
          title: netwait_enabled
          description: >-
            `netwait_enabled` is a boolean attribute which when set indicates
            that network services will not start at

            boot unless they are able to ping the addresses listed in `netwait_ip` list.
        netwait_ip:
          title: netwait_ip
          default: []
          type: array
          items:
            title: netwait_ip
            type: string
          description: >-
            `netwait_enabled` is a boolean attribute which when set indicates
            that network services will not start at

            boot unless they are able to ping the addresses listed in `netwait_ip` list.
        hosts:
          title: hosts
          type: string
        domains:
          title: domains
          default: []
          type: array
          items:
            title: domain
            type: string
        service_announcement:
          type: object
          properties:
            netbios:
              type: boolean
              title: netbios
            mdns:
              type: boolean
              title: mdns
            wsd:
              type: boolean
              title: wsd
          additionalProperties: false
          title: service_announcement
        activity:
          type: object
          properties:
            type:
              title: type
              type: string
              enum:
                - ALLOW
                - DENY
            activities:
              title: activities
              default: []
              type: array
              items:
                title: activity
                type: string
          additionalProperties: false
          title: activity
        hostname_b:
          title: hostname_b
          type: string
          nullable: true
        hostname_virtual:
          title: hostname_virtual
          type: string
          nullable: true
      additionalProperties: false
      title: network_configuration_entry
    nfs_update_0:
      type: object
      properties:
        servers:
          type: integer
          title: servers
          description: "`servers` represents number of servers to create."
        udp:
          type: boolean
          title: udp
        allow_nonroot:
          type: boolean
          title: allow_nonroot
          description: When `allow_nonroot` is set, it allows non-root mount requests to
            be served.
        v4:
          type: boolean
          title: v4
          description: "`v4` when set means that we switch from NFSv3 to NFSv4."
        v4_v3owner:
          type: boolean
          title: v4_v3owner
          description: "`v4_v3owner` when set means that system will use NFSv3 ownership
            model for NFSv4."
        v4_krb:
          type: boolean
          title: v4_krb
          description: "`v4_krb` will force NFS shares to fail if the Kerberos ticket is
            unavailable."
        v4_domain:
          title: v4_domain
          type: string
          description: "`v4_domain` overrides the default DNS domain name for NFSv4."
        bindip:
          title: bindip
          default: []
          type: array
          items:
            title: ip
            type: string
          description: >-
            `bindip` is a list of IP's on which NFS will listen for requests.
            When it is unset/empty, NFS listens on

            all available addresses.
        mountd_port:
          type: integer
          title: mountd_port
          description: "`mountd_port` specifies the port mountd(8) binds to."
          nullable: true
        rpcstatd_port:
          type: integer
          title: rpcstatd_port
          description: "`rpcstatd_port` specifies the port rpc.statd(8) binds to."
          nullable: true
        rpclockd_port:
          type: integer
          title: rpclockd_port
          description: "`rpclockd_port` specifies the port rpclockd_port(8) binds to."
          nullable: true
        mountd_log:
          type: boolean
          title: mountd_log
        statd_lockd_log:
          type: boolean
          title: statd_lockd_log
        userd_manage_gids:
          type: boolean
          title: userd_manage_gids
      additionalProperties: false
      title: nfs_entry
    nfs_add_principal_0:
      type: object
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      additionalProperties: false
      title: kerberos_username_password
    openvpn_client_update_0:
      type: object
      properties:
        nobind:
          type: boolean
          title: nobind
        tls_crypt_auth_enabled:
          type: boolean
          title: tls_crypt_auth_enabled
        client_certificate:
          type: integer
          title: client_certificate
          nullable: true
        root_ca:
          type: integer
          title: root_ca
          nullable: true
        port:
          type: integer
          title: port
        additional_parameters:
          title: additional_parameters
          type: string
        authentication_algorithm:
          title: authentication_algorithm
          type: string
          nullable: true
        cipher:
          title: cipher
          type: string
          nullable: true
        compression:
          title: compression
          type: string
          enum:
            - LZO
            - LZ4
          nullable: true
        device_type:
          title: device_type
          type: string
          enum:
            - TUN
            - TAP
        protocol:
          title: protocol
          type: string
          enum:
            - UDP
            - UDP4
            - UDP6
            - TCP
            - TCP4
            - TCP6
        remote:
          title: remote
          type: string
          description: "`remote` can be a valid ip address / domain which openvpn will try
            to connect to."
        tls_crypt_auth:
          title: tls_crypt_auth
          type: string
          nullable: true
      additionalProperties: false
      title: openvpn_client_entry
    openvpn_server_update_0:
      type: object
      properties:
        tls_crypt_auth_enabled:
          type: boolean
          title: tls_crypt_auth_enabled
        netmask:
          type: integer
          title: netmask
        server_certificate:
          type: integer
          title: server_certificate
          nullable: true
        port:
          type: integer
          title: port
        root_ca:
          type: integer
          title: root_ca
          nullable: true
        server:
          title: server
          type: string
        additional_parameters:
          title: additional_parameters
          type: string
        authentication_algorithm:
          title: authentication_algorithm
          type: string
          nullable: true
        cipher:
          title: cipher
          type: string
          nullable: true
        compression:
          title: compression
          type: string
          enum:
            - LZO
            - LZ4
          nullable: true
        device_type:
          title: device_type
          type: string
          enum:
            - TUN
            - TAP
        protocol:
          title: protocol
          type: string
          enum:
            - UDP
            - UDP4
            - UDP6
            - TCP
            - TCP4
            - TCP6
        tls_crypt_auth:
          title: tls_crypt_auth
          type: string
          nullable: true
        topology:
          title: topology
          type: string
          enum:
            - NET30
            - P2P
            - SUBNET
          nullable: true
      additionalProperties: false
      title: openvpn_server_entry
    openvpn_server_client_configuration_generation_0:
      type: integer
      title: client_certificate_id
      description: "`client_certificate_id` should be a valid certificate issued for
        use with OpenVPN client service."
    openvpn_server_client_configuration_generation_1:
      title: server_address
      default: null
      type: string
      nullable: true
    openvpn_server_client_configuration_generation:
      type: object
      properties:
        client_certificate_id:
          $ref: "#/components/schemas/openvpn_server_client_configuration_generation_0"
        server_address:
          $ref: "#/components/schemas/openvpn_server_client_configuration_generation_1"
    pool_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: >-
            `encryption` when enabled will create an ZFS encrypted root dataset
            for `name` pool.

            `encryption_options` specifies configuration for encryption of root dataset for `name` pool.

            `encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase

            as a key.

            Otherwise a hex encoded key can be specified by providing `encryption_options.key`.

            `encryption_options.generate_key` when enabled automatically generates the key to be used

            for dataset encryption.
        encryption:
          type: boolean
          title: encryption
          default: false
          description: "`encryption` when enabled will create an ZFS encrypted root
            dataset for `name` pool."
        deduplication:
          title: deduplication
          default: null
          type: string
          enum:
            - null
            - ON
            - VERIFY
            - OFF
          description: >-
            `deduplication` when set to ON or VERIFY makes sure that no block
            of data is duplicated in the pool. When

            VERIFY is specified, if two blocks have similar signatures, byte to byte comparison is performed to ensure that

            the blocks are identical. This should be used in special circumstances as it carries a significant overhead.
          nullable: true
        checksum:
          title: checksum
          default: null
          type: string
          enum:
            - null
            - ON
            - OFF
            - FLETCHER2
            - FLETCHER4
            - SHA256
            - SHA512
            - SKEIN
            - EDONR
          nullable: true
        encryption_options:
          type: object
          properties:
            generate_key:
              type: boolean
              title: generate_key
              default: false
            pbkdf2iters:
              type: integer
              title: pbkdf2iters
              default: 350000
            algorithm:
              title: algorithm
              default: AES-256-GCM
              type: string
              enum:
                - AES-128-CCM
                - AES-192-CCM
                - AES-256-CCM
                - AES-128-GCM
                - AES-192-GCM
                - AES-256-GCM
            passphrase:
              title: passphrase
              default: null
              type: string
              nullable: true
            key:
              title: key
              default: null
              type: string
              nullable: true
          additionalProperties: false
          title: encryption_options
          description: >-
            `encryption_options` specifies configuration for encryption of root
            dataset for `name` pool.

            `encryption_options.passphrase` must be specified if encryption for root dataset is desired with a passphrase

            as a key.

            Otherwise a hex encoded key can be specified by providing `encryption_options.key`.

            `encryption_options.generate_key` when enabled automatically generates the key to be used

            for dataset encryption.
        topology:
          type: object
          properties:
            data:
              title: data
              default: []
              type: array
              items:
                type: object
                properties:
                  type:
                    title: type
                    type: string
                    enum:
                      - RAIDZ1
                      - RAIDZ2
                      - RAIDZ3
                      - MIRROR
                      - STRIPE
                  disks:
                    title: disks
                    default: []
                    type: array
                    items:
                      title: disk
                      type: string
                additionalProperties: false
                title: datavdevs
            special:
              title: special
              default: []
              type: array
              items:
                type: object
                properties:
                  type:
                    title: type
                    type: string
                    enum:
                      - MIRROR
                      - STRIPE
                  disks:
                    title: disks
                    default: []
                    type: array
                    items:
                      title: disk
                      type: string
                additionalProperties: false
                title: specialvdevs
            dedup:
              title: dedup
              default: []
              type: array
              items:
                type: object
                properties:
                  type:
                    title: type
                    type: string
                    enum:
                      - MIRROR
                      - STRIPE
                  disks:
                    title: disks
                    default: []
                    type: array
                    items:
                      title: disk
                      type: string
                additionalProperties: false
                title: dedupvdevs
            cache:
              title: cache
              default: []
              type: array
              items:
                type: object
                properties:
                  type:
                    title: type
                    type: string
                    enum:
                      - STRIPE
                  disks:
                    title: disks
                    default: []
                    type: array
                    items:
                      title: disk
                      type: string
                additionalProperties: false
                title: cachevdevs
            log:
              title: log
              default: []
              type: array
              items:
                type: object
                properties:
                  type:
                    title: type
                    type: string
                    enum:
                      - STRIPE
                      - MIRROR
                  disks:
                    title: disks
                    default: []
                    type: array
                    items:
                      title: disk
                      type: string
                additionalProperties: false
                title: logvdevs
            spares:
              title: spares
              default: []
              type: array
              items:
                title: disk
                type: string
          additionalProperties: false
          title: topology
          description: |-
            `topology` is a object which requires at least one `data` entry.
            All of `data` entries (vdevs) require to be of the same type.
            Example of `topology`:
        allow_duplicate_serials:
          type: boolean
          title: allow_duplicate_serials
          default: false
      additionalProperties: false
      title: pool_create
    pool_attach_0:
      type: integer
      title: oid
      description: >-
        For TrueNAS Core/Enterprise platform, if the `oid` pool is
        passphrase GELI encrypted, `passphrase`

        must be specified for this operation to succeed.
    pool_attach_1:
      type: object
      properties:
        target_vdev:
          title: target_vdev
          type: string
        new_disk:
          title: new_disk
          type: string
        passphrase:
          title: passphrase
          type: string
          description: >-
            For TrueNAS Core/Enterprise platform, if the `oid` pool is
            passphrase GELI encrypted, `passphrase`

            must be specified for this operation to succeed.
        allow_duplicate_serials:
          type: boolean
          title: allow_duplicate_serials
          default: false
      additionalProperties: false
      title: pool_attach
    pool_attach:
      type: object
      properties:
        oid:
          $ref: "#/components/schemas/pool_attach_0"
        pool_attach:
          $ref: "#/components/schemas/pool_attach_1"
    pool_filesystem_choices_0:
      title: types
      default:
        - FILESYSTEM
        - VOLUME
      type: array
      items:
        title: type
        type: string
        enum:
          - FILESYSTEM
          - VOLUME
    pool_get_instance_by_name_0:
      title: name
      type: string
    pool_import_disk_0:
      title: device
      type: string
    pool_import_disk_1:
      title: fs_type
      type: string
    pool_import_disk_2:
      type: object
      properties: {}
      additionalProperties: true
      title: fs_options
    pool_import_disk_3:
      title: dst_path
      type: string
    pool_import_disk:
      type: object
      properties:
        device:
          $ref: "#/components/schemas/pool_import_disk_0"
        fs_type:
          $ref: "#/components/schemas/pool_import_disk_1"
        fs_options:
          $ref: "#/components/schemas/pool_import_disk_2"
        dst_path:
          $ref: "#/components/schemas/pool_import_disk_3"
    pool_import_disk_autodetect_fs_type_0:
      title: device
      type: string
    pool_import_pool_0:
      type: object
      properties:
        guid:
          title: guid
          type: string
        name:
          title: name
          type: string
          description: If a `name` is specified the pool will be imported using that new
            name.
        passphrase:
          title: passphrase
          type: string
          description: "`passphrase` DEPRECATED. GELI not supported on SCALE."
        enable_attachments:
          type: boolean
          title: enable_attachments
          description: >-
            If `enable_attachments` is set to true, attachments that were
            disabled during pool export will be

            re-enabled.
      additionalProperties: false
      title: pool_import
    pool_dataset_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: >-
            `encryption` when enabled will create an ZFS encrypted root dataset
            for `name` pool.

            There are 2 cases where ZFS encryption is not allowed for a dataset:

            1) Pool in question is GELI encrypted.

            2) If the parent dataset is encrypted with a passphrase and `name` is being created
               with a key for encrypting the dataset.
            `encryption_options` specifies configuration for encryption of dataset for `name` pool.

            `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase

            as a key.

            Otherwise a hex encoded key can be specified by providing `encryption_options.key`.

            `encryption_options.generate_key` when enabled automatically generates the key to be used

            for dataset encryption.
        type:
          title: type
          default: FILESYSTEM
          type: string
          enum:
            - FILESYSTEM
            - VOLUME
        volsize:
          type: integer
          title: volsize
          description: "`volsize` is required for type=VOLUME and is supposed to be a
            multiple of the block size."
        volblocksize:
          title: volblocksize
          type: string
          enum:
            - "512"
            - 1K
            - 2K
            - 4K
            - 8K
            - 16K
            - 32K
            - 64K
            - 128K
          description: "`sparse` and `volblocksize` are only used for type=VOLUME."
        sparse:
          type: boolean
          title: sparse
          description: "`sparse` and `volblocksize` are only used for type=VOLUME."
        force_size:
          type: boolean
          title: force_size
        comments:
          title: comments
          nullable: false
          anyOf:
            - type: string
            - type: string
              enum:
                - INHERIT
        sync:
          title: sync
          enum:
            - STANDARD
            - ALWAYS
            - DISABLED
            - INHERIT
          nullable: false
          type: string
        compression:
          title: compression
          enum:
            - OFF
            - LZ4
            - GZIP
            - GZIP-1
            - GZIP-9
            - ZSTD
            - ZSTD-FAST
            - ZLE
            - LZJB
            - ZSTD-1
            - ZSTD-2
            - ZSTD-3
            - ZSTD-4
            - ZSTD-5
            - ZSTD-6
            - ZSTD-7
            - ZSTD-8
            - ZSTD-9
            - ZSTD-10
            - ZSTD-11
            - ZSTD-12
            - ZSTD-13
            - ZSTD-14
            - ZSTD-15
            - ZSTD-16
            - ZSTD-17
            - ZSTD-18
            - ZSTD-19
            - ZSTD-FAST-1
            - ZSTD-FAST-2
            - ZSTD-FAST-3
            - ZSTD-FAST-4
            - ZSTD-FAST-5
            - ZSTD-FAST-6
            - ZSTD-FAST-7
            - ZSTD-FAST-8
            - ZSTD-FAST-9
            - ZSTD-FAST-10
            - ZSTD-FAST-20
            - ZSTD-FAST-30
            - ZSTD-FAST-40
            - ZSTD-FAST-50
            - ZSTD-FAST-60
            - ZSTD-FAST-70
            - ZSTD-FAST-80
            - ZSTD-FAST-90
            - ZSTD-FAST-100
            - ZSTD-FAST-500
            - ZSTD-FAST-1000
            - INHERIT
          nullable: false
          type: string
        atime:
          title: atime
          enum:
            - ON
            - OFF
            - INHERIT
          nullable: false
          type: string
        exec:
          title: exec
          enum:
            - ON
            - OFF
            - INHERIT
          nullable: false
          type: string
        managedby:
          title: managedby
          nullable: false
          anyOf:
            - type: string
            - type: string
              enum:
                - INHERIT
        quota:
          type: integer
          title: quota
          nullable: true
        quota_warning:
          title: quota_warning
          nullable: false
          anyOf:
            - type: integer
            - type: string
              enum:
                - INHERIT
        quota_critical:
          title: quota_critical
          nullable: false
          anyOf:
            - type: integer
            - type: string
              enum:
                - INHERIT
        refquota:
          type: integer
          title: refquota
          nullable: true
        refquota_warning:
          title: refquota_warning
          nullable: false
          anyOf:
            - type: integer
            - type: string
              enum:
                - INHERIT
        refquota_critical:
          title: refquota_critical
          nullable: false
          anyOf:
            - type: integer
            - type: string
              enum:
                - INHERIT
        reservation:
          type: integer
          title: reservation
        refreservation:
          type: integer
          title: refreservation
        special_small_block_size:
          title: special_small_block_size
          nullable: false
          anyOf:
            - type: integer
            - type: string
              enum:
                - INHERIT
        copies:
          title: copies
          nullable: false
          anyOf:
            - type: integer
            - type: string
              enum:
                - INHERIT
        snapdir:
          title: snapdir
          enum:
            - VISIBLE
            - HIDDEN
            - INHERIT
          nullable: false
          type: string
        deduplication:
          title: deduplication
          enum:
            - ON
            - VERIFY
            - OFF
            - INHERIT
          nullable: false
          type: string
        checksum:
          title: checksum
          enum:
            - ON
            - OFF
            - FLETCHER2
            - FLETCHER4
            - SHA256
            - SHA512
            - SKEIN
            - EDONR
            - INHERIT
          nullable: false
          type: string
        readonly:
          title: readonly
          enum:
            - ON
            - OFF
            - INHERIT
          nullable: false
          type: string
        recordsize:
          title: recordsize
          nullable: false
          anyOf:
            - type: string
            - type: string
              enum:
                - INHERIT
        casesensitivity:
          title: casesensitivity
          enum:
            - SENSITIVE
            - INSENSITIVE
            - MIXED
            - INHERIT
          nullable: false
          type: string
        aclmode:
          title: aclmode
          enum:
            - PASSTHROUGH
            - RESTRICTED
            - DISCARD
            - INHERIT
          nullable: false
          type: string
        acltype:
          title: acltype
          enum:
            - OFF
            - NOACL
            - NFSV4
            - NFS4ACL
            - POSIX
            - POSIXACL
            - INHERIT
          nullable: false
          type: string
        share_type:
          title: share_type
          default: GENERIC
          type: string
          enum:
            - GENERIC
            - SMB
        xattr:
          title: xattr
          default: SA
          enum:
            - ON
            - SA
            - INHERIT
          nullable: false
          type: string
        encryption_options:
          type: object
          properties:
            generate_key:
              type: boolean
              title: generate_key
              default: false
            pbkdf2iters:
              type: integer
              title: pbkdf2iters
              default: 350000
            algorithm:
              title: algorithm
              default: AES-256-GCM
              type: string
              enum:
                - AES-128-CCM
                - AES-192-CCM
                - AES-256-CCM
                - AES-128-GCM
                - AES-192-GCM
                - AES-256-GCM
            passphrase:
              title: passphrase
              default: null
              type: string
              nullable: true
            key:
              title: key
              default: null
              type: string
              nullable: true
          additionalProperties: false
          title: encryption_options
          description: >-
            `encryption_options` specifies configuration for encryption of
            dataset for `name` pool.

            `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase

            as a key.

            Otherwise a hex encoded key can be specified by providing `encryption_options.key`.

            `encryption_options.generate_key` when enabled automatically generates the key to be used

            for dataset encryption.
        encryption:
          type: boolean
          title: encryption
          default: false
          description: >-
            `encryption` when enabled will create an ZFS encrypted root dataset
            for `name` pool.

            There are 2 cases where ZFS encryption is not allowed for a dataset:

            1) Pool in question is GELI encrypted.

            2) If the parent dataset is encrypted with a passphrase and `name` is being created
               with a key for encrypting the dataset.
        inherit_encryption:
          type: boolean
          title: inherit_encryption
          default: true
        user_properties:
          title: user_properties
          default: []
          type: array
          items:
            type: object
            properties:
              key:
                title: key
                type: string
              value:
                title: value
                type: string
            additionalProperties: false
            title: user_property
        create_ancestors:
          type: boolean
          title: create_ancestors
          default: false
      additionalProperties: false
      title: pool_dataset_create
    pool_dataset_change_key_0:
      title: id
      type: string
      description: Change encryption properties for `id` encrypted dataset.
    pool_dataset_change_key_1:
      type: object
      properties:
        generate_key:
          type: boolean
          title: generate_key
          default: false
        key_file:
          type: boolean
          title: key_file
          default: false
        pbkdf2iters:
          type: integer
          title: pbkdf2iters
          default: 350000
        passphrase:
          title: passphrase
          default: null
          type: string
          nullable: true
        key:
          title: key
          default: null
          type: string
          nullable: true
      additionalProperties: false
      title: change_key_options
    pool_dataset_change_key:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/pool_dataset_change_key_0"
        change_key_options:
          $ref: "#/components/schemas/pool_dataset_change_key_1"
    pool_dataset_destroy_snapshots_0:
      title: name
      type: string
    pool_dataset_destroy_snapshots_1:
      type: object
      properties:
        all:
          type: boolean
          title: all
          default: true
        recursive:
          type: boolean
          title: recursive
          default: false
        snapshots:
          title: snapshots
          default: []
          type: array
          items:
            oneOf:
              - type: object
                properties:
                  start:
                    title: start
                    type: string
                  end:
                    title: end
                    type: string
                additionalProperties: false
                title: snapshot_spec
              - title: snapshot_name
                type: string
      additionalProperties: false
      title: snapshots
    pool_dataset_destroy_snapshots:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/pool_dataset_destroy_snapshots_0"
        snapshots:
          $ref: "#/components/schemas/pool_dataset_destroy_snapshots_1"
    pool_dataset_encryption_summary_0:
      title: id
      type: string
      description: >-
        Retrieve summary of all encrypted roots under `id`.

        It should be noted that there are 2 keys which show if a recursive unlock operation is

        done for `id`, which dataset will be unlocked and if not why it won't be unlocked. The keys

        namely are "unlock_successful" and "unlock_error". The former is a boolean value showing if unlock

        would succeed/fail. The latter is description why it failed if it failed.
    pool_dataset_encryption_summary_1:
      type: object
      properties:
        key_file:
          type: boolean
          title: key_file
          default: false
        force:
          type: boolean
          title: force
          default: false
        datasets:
          title: datasets
          default: []
          type: array
          items:
            type: object
            properties:
              force:
                type: boolean
                title: force
                default: false
              name:
                title: name
                type: string
              key:
                title: key
                type: string
              passphrase:
                title: passphrase
                type: string
            additionalProperties: false
            title: dataset
      additionalProperties: false
      title: encryption_root_summary_options
    pool_dataset_encryption_summary:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/pool_dataset_encryption_summary_0"
        encryption_root_summary_options:
          $ref: "#/components/schemas/pool_dataset_encryption_summary_1"
    pool_dataset_export_key_0:
      title: id
      type: string
      description: >-
        Export own encryption key for dataset `id`. If `download` is
        `true`, key will be downloaded in a json file

        where the same file can be used to unlock the dataset, otherwise it will be returned as string.
    pool_dataset_export_key_1:
      type: boolean
      title: download
      default: false
      description: >-
        Export own encryption key for dataset `id`. If `download` is
        `true`, key will be downloaded in a json file

        where the same file can be used to unlock the dataset, otherwise it will be returned as string.
    pool_dataset_export_key:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/pool_dataset_export_key_0"
        download:
          $ref: "#/components/schemas/pool_dataset_export_key_1"
    pool_dataset_export_keys_0:
      title: id
      type: string
      description: >-
        Export keys for `id` and its children which are stored in the
        system. The exported file is a JSON file

        which has a dictionary containing dataset names as keys and their keys as the value.
    pool_dataset_inherit_parent_encryption_properties_0:
      title: id
      type: string
    pool_dataset_lock_0:
      title: id
      type: string
      description: Locks `id` dataset. It will unmount the dataset and its children
        before locking.
    pool_dataset_lock_1:
      type: object
      properties:
        force_umount:
          type: boolean
          title: force_umount
          default: false
      additionalProperties: false
      title: lock_options
    pool_dataset_lock:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/pool_dataset_lock_0"
        lock_options:
          $ref: "#/components/schemas/pool_dataset_lock_1"
    pool_dataset_recommended_zvol_blocksize_0:
      title: pool
      type: string
    pool_dataset_unlock_0:
      title: id
      type: string
      description: >-
        Unlock `id` dataset.

        If `id` dataset is not encrypted an exception will be raised. There is one exception:

        when `id` is a root dataset and `unlock_options.recursive` is specified, encryption

        validation will not be performed for `id`. This allow unlocking encrypted children the `id` pool.
    pool_dataset_unlock_1:
      type: object
      properties:
        force:
          type: boolean
          title: force
          default: false
        key_file:
          type: boolean
          title: key_file
          default: false
        recursive:
          type: boolean
          title: recursive
          default: false
        toggle_attachments:
          type: boolean
          title: toggle_attachments
          default: true
          description: >-
            `toggle_attachments` controls whether attachments  should be put in
            action after unlocking dataset(s).

            Toggling attachments can theoretically lead to service interruption when daemons configurations are reloaded

            (this should not happen,  and if this happens it should be considered a bug). As TrueNAS does not have a state

            for resources that should be unlocked but are still locked, disabling this option will put the system into an

            inconsistent state so it should really never be disabled.
        datasets:
          title: datasets
          default: []
          type: array
          items:
            type: object
            properties:
              force:
                type: boolean
                title: force
                default: false
              name:
                title: name
                type: string
              key:
                title: key
                type: string
              passphrase:
                title: passphrase
                type: string
            additionalProperties: false
            title: dataset
      additionalProperties: false
      title: unlock_options
    pool_dataset_unlock:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/pool_dataset_unlock_0"
        unlock_options:
          $ref: "#/components/schemas/pool_dataset_unlock_1"
    pool_dataset_unlock_services_restart_choices_0:
      title: dataset
      type: string
    pool_dataset_userprop_create_0:
      type: object
      properties:
        id:
          title: id
          type: string
        property:
          type: object
          properties:
            name:
              title: name
              type: string
            value:
              title: value
              type: string
          additionalProperties: false
          title: property
      additionalProperties: false
      title: dataset_user_prop_create
    pool_resilver_update_0:
      type: object
      properties:
        begin:
          title: begin
          type: string
          description: >-
            If `begin` time is greater than `end` time it means it will
            rollover the day, e.g.

            begin = "19:00", end = "05:00" will increase pool resilver priority from 19:00 of one day

            until 05:00 of the next day.
        end:
          title: end
          type: string
          description: >-
            If `begin` time is greater than `end` time it means it will
            rollover the day, e.g.

            begin = "19:00", end = "05:00" will increase pool resilver priority from 19:00 of one day

            until 05:00 of the next day.
        enabled:
          type: boolean
          title: enabled
        weekday:
          title: weekday
          default: []
          type: array
          items:
            type: integer
            title: weekday
          description: "`weekday` follows crontab(5) values 0-7 (0 or 7 is Sun)."
      additionalProperties: false
      title: pool_resilver_entry
    pool_scrub_create_0:
      type: object
      properties:
        pool:
          type: integer
          title: pool
        threshold:
          type: integer
          title: threshold
          description: >-
            `threshold` refers to the minimum amount of time in days has to be
            passed before

            a scrub can run again.
        description:
          title: description
          type: string
        schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "00"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "7"
              type: string
          additionalProperties: false
          title: schedule
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: pool_scrub_entry
    pool_scrub_run_0:
      title: name
      type: string
    pool_scrub_run_1:
      type: integer
      title: threshold
      default: 35
    pool_scrub_run:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/pool_scrub_run_0"
        threshold:
          $ref: "#/components/schemas/pool_scrub_run_1"
    pool_scrub_scrub_0:
      title: name
      type: string
    pool_scrub_scrub_1:
      title: action
      default: START
      type: string
      enum:
        - START
        - STOP
        - PAUSE
    pool_scrub_scrub:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/pool_scrub_scrub_0"
        action:
          $ref: "#/components/schemas/pool_scrub_scrub_1"
    pool_snapshottask_create_0:
      type: object
      properties:
        dataset:
          title: dataset
          type: string
          description: Create a Periodic Snapshot Task that will take snapshots of
            specified `dataset` at specified `schedule`.
        recursive:
          type: boolean
          title: recursive
          description: >-
            Recursive snapshots can be created if `recursive` flag is enabled.
            You can `exclude` specific child datasets

            or zvols from the snapshot.

            Snapshots will be automatically destroyed after a certain amount of time, specified by
        exclude:
          title: exclude
          default: []
          type: array
          items:
            title: item
            type: string
          description: >-
            Recursive snapshots can be created if `recursive` flag is enabled.
            You can `exclude` specific child datasets

            or zvols from the snapshot.

            Snapshots will be automatically destroyed after a certain amount of time, specified by
        lifetime_value:
          type: integer
          title: lifetime_value
          description: >-
            `lifetime_value` and `lifetime_unit`.

            If multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot

            will be kept until the last of these tasks reaches its expiry time.
        lifetime_unit:
          title: lifetime_unit
          type: string
          enum:
            - HOUR
            - DAY
            - WEEK
            - MONTH
            - YEAR
          description: >-
            `lifetime_value` and `lifetime_unit`.

            If multiple periodic tasks create snapshots at the same time (for example hourly and daily at 00:00) the snapshot

            will be kept until the last of these tasks reaches its expiry time.
        naming_schema:
          title: naming_schema
          type: string
          description: >-
            Snapshots will be named according to `naming_schema` which is a
            `strftime`-like template for snapshot name

            and must contain `%Y`, `%m`, `%d`, `%H` and `%M`.
        schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
            begin:
              title: begin
              default: 00:00
              type: string
            end:
              title: end
              default: 23:59
              type: string
          additionalProperties: false
          title: schedule
          description: Create a Periodic Snapshot Task that will take snapshots of
            specified `dataset` at specified `schedule`.
        allow_empty:
          type: boolean
          title: allow_empty
          default: true
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: periodic_snapshot_create
    pool_snapshottask_foreseen_count_0:
      type: object
      properties:
        lifetime_value:
          type: integer
          title: lifetime_value
        lifetime_unit:
          title: lifetime_unit
          type: string
          enum:
            - HOUR
            - DAY
            - WEEK
            - MONTH
            - YEAR
        schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
            begin:
              title: begin
              default: 00:00
              type: string
            end:
              title: end
              default: 23:59
              type: string
          additionalProperties: false
          title: schedule
      additionalProperties: false
      title: periodic_snapshot_foreseen_count
    replication_create_0:
      type: object
      properties:
        name:
          title: name
          type: string
          description: "* `name` specifies a name for replication task"
        direction:
          title: direction
          type: string
          enum:
            - PUSH
            - PULL
          description: "* `direction` specifies whether task will `PUSH` or `PULL`
            snapshots"
        transport:
          title: transport
          type: string
          enum:
            - SSH
            - SSH+NETCAT
            - LOCAL
          description: >-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
        ssh_credentials:
          type: integer
          title: ssh_credentials
          default: null
          description: >-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
          nullable: true
        netcat_active_side:
          title: netcat_active_side
          default: null
          type: string
          enum:
            - LOCAL
            - REMOTE
          description: >-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
          nullable: true
        netcat_active_side_listen_address:
          title: netcat_active_side_listen_address
          default: null
          type: string
          nullable: true
        netcat_active_side_port_min:
          type: integer
          title: netcat_active_side_port_min
          default: null
          description: >-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
          nullable: true
        netcat_active_side_port_max:
          type: integer
          title: netcat_active_side_port_max
          default: null
          description: >-
            * `transport` is a method of snapshots transfer:
              * `SSH` transfers snapshots via SSH connection. This method is supported everywhere but does not achieve
                great performance
                `ssh_credentials` is a required field for this transport (Keychain Credential ID of type `SSH_CREDENTIALS`)
              * `SSH+NETCAT` uses unencrypted connection for data transfer. This can only be used in trusted networks
                and requires a port (specified by range from `netcat_active_side_port_min` to `netcat_active_side_port_max`)
                to be open on `netcat_active_side`
                `ssh_credentials` is also required for control connection
              * `LOCAL` replicates to or from localhost
          nullable: true
        netcat_passive_side_connect_address:
          title: netcat_passive_side_connect_address
          default: null
          type: string
          nullable: true
        source_datasets:
          title: source_datasets
          default: []
          type: array
          items:
            title: dataset
            type: string
          description: "* `source_datasets` is a non-empty list of datasets to replicate
            snapshots from"
        target_dataset:
          title: target_dataset
          type: string
          description: "* `target_dataset` is a dataset to put snapshots into. It must
            exist on target side"
        recursive:
          type: boolean
          title: recursive
          description: "* `recursive` and `exclude` have the same meaning as for Periodic
            Snapshot Task"
        exclude:
          title: exclude
          default: []
          type: array
          items:
            title: dataset
            type: string
          description: "* `recursive` and `exclude` have the same meaning as for Periodic
            Snapshot Task"
        properties:
          type: boolean
          title: properties
          default: true
          description: "* `properties` control whether we should send dataset properties
            along with snapshots"
        properties_exclude:
          title: properties_exclude
          default: []
          type: array
          items:
            title: property
            type: string
        properties_override:
          type: object
          properties: {}
          additionalProperties: true
          title: properties_override
        replicate:
          type: boolean
          title: replicate
          default: false
        encryption:
          type: boolean
          title: encryption
          default: false
        encryption_key:
          title: encryption_key
          default: null
          type: string
          nullable: true
        encryption_key_format:
          title: encryption_key_format
          default: null
          type: string
          enum:
            - HEX
            - PASSPHRASE
          nullable: true
        encryption_key_location:
          title: encryption_key_location
          default: null
          type: string
          nullable: true
        periodic_snapshot_tasks:
          title: periodic_snapshot_tasks
          default: []
          type: array
          items:
            type: integer
            title: periodic_snapshot_task
          description: >-
            * `periodic_snapshot_tasks` is a list of periodic snapshot task IDs
            that are sources of snapshots for this
              replication task. Only push replication tasks can be bound to periodic snapshot tasks.
        naming_schema:
          title: naming_schema
          default: []
          type: array
          items:
            title: naming_schema
            type: string
          description: "* `naming_schema` is a list of naming schemas for pull replication"
        also_include_naming_schema:
          title: also_include_naming_schema
          default: []
          type: array
          items:
            title: naming_schema
            type: string
          description: "* `also_include_naming_schema` is a list of naming schemas for
            push replication"
        name_regex:
          title: name_regex
          default: null
          type: string
          description: "* `name_regex` will replicate all snapshots which names match
            specified regular expression"
          nullable: true
        auto:
          type: boolean
          title: auto
          description: >-
            * `auto` allows replication to run automatically on schedule or
            after bound periodic snapshot task

            * `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic
              snapshot tasks can have a schedule
        schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
            begin:
              title: begin
              default: 00:00
              type: string
            end:
              title: end
              default: 23:59
              type: string
          additionalProperties: false
          title: schedule
          description: >-
            * `auto` allows replication to run automatically on schedule or
            after bound periodic snapshot task

            * `schedule` is a schedule to run replication task. Only `auto` replication tasks without bound periodic
              snapshot tasks can have a schedule
            * Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or
              `restrict_schedule`
        restrict_schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
            begin:
              title: begin
              default: 00:00
              type: string
            end:
              title: end
              default: 23:59
              type: string
          additionalProperties: false
          title: restrict_schedule
          description: >-
            * `restrict_schedule` restricts when replication task with bound
            periodic snapshot tasks runs. For example,
              you can have periodic snapshot tasks that run every 15 minutes, but only run replication task every hour.
            * Enabling `only_matching_schedule` will only replicate snapshots that match `schedule` or
              `restrict_schedule`
        only_matching_schedule:
          type: boolean
          title: only_matching_schedule
          default: false
          description: >-
            * Enabling `only_matching_schedule` will only replicate snapshots
            that match `schedule` or
              `restrict_schedule`
        allow_from_scratch:
          type: boolean
          title: allow_from_scratch
          default: false
          description: >-
            * `allow_from_scratch` will destroy all snapshots on target side
            and replicate everything from scratch if none
              of the snapshots on target side matches source snapshots
        readonly:
          title: readonly
          default: SET
          type: string
          enum:
            - SET
            - REQUIRE
            - IGNORE
          description: >-
            * `readonly` controls destination datasets readonly property:
              * `SET` will set all destination datasets to readonly=on after finishing the replication
              * `REQUIRE` will require all existing destination datasets to have readonly=on property
              * `IGNORE` will avoid this kind of behavior
        hold_pending_snapshots:
          type: boolean
          title: hold_pending_snapshots
          default: false
          description: >-
            * `hold_pending_snapshots` will prevent source snapshots from being
            deleted by retention of replication fails
              for some reason
        retention_policy:
          title: retention_policy
          type: string
          enum:
            - SOURCE
            - CUSTOM
            - NONE
          description: >-
            * `retention_policy` specifies how to delete old snapshots on
            target side:
              * `SOURCE` deletes snapshots that are absent on source side
              * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`
              * `NONE` does not delete any snapshots
        lifetime_value:
          type: integer
          title: lifetime_value
          default: null
          description: >-
            * `retention_policy` specifies how to delete old snapshots on
            target side:
              * `SOURCE` deletes snapshots that are absent on source side
              * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`
              * `NONE` does not delete any snapshots
          nullable: true
        lifetime_unit:
          title: lifetime_unit
          default: null
          type: string
          enum:
            - HOUR
            - DAY
            - WEEK
            - MONTH
            - YEAR
          description: >-
            * `retention_policy` specifies how to delete old snapshots on
            target side:
              * `SOURCE` deletes snapshots that are absent on source side
              * `CUSTOM` deletes snapshots that are older than `lifetime_value` and `lifetime_unit`
              * `NONE` does not delete any snapshots
          nullable: true
        lifetimes:
          title: lifetimes
          default: []
          type: array
          items:
            type: object
            properties:
              schedule:
                type: object
                properties:
                  minute:
                    title: minute
                    default: "*"
                    type: string
                  hour:
                    title: hour
                    default: "*"
                    type: string
                  dom:
                    title: dom
                    default: "*"
                    type: string
                  month:
                    title: month
                    default: "*"
                    type: string
                  dow:
                    title: dow
                    default: "*"
                    type: string
                additionalProperties: false
                title: schedule
              lifetime_value:
                type: integer
                title: lifetime_value
              lifetime_unit:
                title: lifetime_unit
                type: string
                enum:
                  - HOUR
                  - DAY
                  - WEEK
                  - MONTH
                  - YEAR
            additionalProperties: false
            title: lifetime
        compression:
          title: compression
          default: null
          type: string
          enum:
            - LZ4
            - PIGZ
            - PLZIP
          description: "* `compression` compresses SSH stream. Available only for SSH
            transport"
          nullable: true
        speed_limit:
          type: integer
          title: speed_limit
          default: null
          description: "* `speed_limit` limits speed of SSH stream. Available only for SSH
            transport"
          nullable: true
        large_block:
          type: boolean
          title: large_block
          default: true
          description: "* `large_block`, `embed` and `compressed` are various ZFS stream
            flag documented in `man zfs send`"
        embed:
          type: boolean
          title: embed
          default: false
          description: "* `large_block`, `embed` and `compressed` are various ZFS stream
            flag documented in `man zfs send`"
        compressed:
          type: boolean
          title: compressed
          default: true
          description: "* `large_block`, `embed` and `compressed` are various ZFS stream
            flag documented in `man zfs send`"
        retries:
          type: integer
          title: retries
          default: 5
          description: "* `retries` specifies number of retries before considering
            replication failed"
        logging_level:
          title: logging_level
          default: null
          type: string
          enum:
            - DEBUG
            - INFO
            - WARNING
            - ERROR
          nullable: true
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: replication_create
    replication_count_eligible_manual_snapshots_0:
      type: object
      properties:
        datasets:
          title: datasets
          default: []
          type: array
          items:
            title: dataset
            type: string
        naming_schema:
          title: naming_schema
          default: []
          type: array
          items:
            title: naming_schema
            type: string
          description: Count how many existing snapshots of `dataset` match `naming_schema`.
        name_regex:
          title: name_regex
          default: null
          type: string
          nullable: true
        transport:
          title: transport
          type: string
          enum:
            - SSH
            - SSH+NETCAT
            - LOCAL
        ssh_credentials:
          type: integer
          title: ssh_credentials
          default: null
          nullable: true
      additionalProperties: false
      title: count_eligible_manual_snapshots
    replication_create_dataset_0:
      title: dataset
      type: string
      description: Accepts `dataset` name, `transport` and SSH credentials ID (for
        non-local transport)
    replication_create_dataset_1:
      title: transport
      type: string
      enum:
        - SSH
        - SSH+NETCAT
        - LOCAL
      description: Accepts `dataset` name, `transport` and SSH credentials ID (for
        non-local transport)
    replication_create_dataset_2:
      type: integer
      title: ssh_credentials
      default: null
      nullable: true
    replication_create_dataset:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/replication_create_dataset_0"
        transport:
          $ref: "#/components/schemas/replication_create_dataset_1"
        ssh_credentials:
          $ref: "#/components/schemas/replication_create_dataset_2"
    replication_list_datasets_0:
      title: transport
      type: string
      enum:
        - SSH
        - SSH+NETCAT
        - LOCAL
      description: Accepts `transport` and SSH credentials ID (for non-local transport)
    replication_list_datasets_1:
      type: integer
      title: ssh_credentials
      default: null
      nullable: true
    replication_list_datasets:
      type: object
      properties:
        transport:
          $ref: "#/components/schemas/replication_list_datasets_0"
        ssh_credentials:
          $ref: "#/components/schemas/replication_list_datasets_1"
    replication_run_onetime_0:
      type: object
      properties:
        direction:
          title: direction
          type: string
          enum:
            - PUSH
            - PULL
        transport:
          title: transport
          type: string
          enum:
            - SSH
            - SSH+NETCAT
            - LOCAL
        ssh_credentials:
          type: integer
          title: ssh_credentials
          default: null
          nullable: true
        netcat_active_side:
          title: netcat_active_side
          default: null
          type: string
          enum:
            - LOCAL
            - REMOTE
          nullable: true
        netcat_active_side_listen_address:
          title: netcat_active_side_listen_address
          default: null
          type: string
          nullable: true
        netcat_active_side_port_min:
          type: integer
          title: netcat_active_side_port_min
          default: null
          nullable: true
        netcat_active_side_port_max:
          type: integer
          title: netcat_active_side_port_max
          default: null
          nullable: true
        netcat_passive_side_connect_address:
          title: netcat_passive_side_connect_address
          default: null
          type: string
          nullable: true
        source_datasets:
          title: source_datasets
          default: []
          type: array
          items:
            title: dataset
            type: string
        target_dataset:
          title: target_dataset
          type: string
        recursive:
          type: boolean
          title: recursive
        exclude:
          title: exclude
          default: []
          type: array
          items:
            title: dataset
            type: string
        properties:
          type: boolean
          title: properties
          default: true
        properties_exclude:
          title: properties_exclude
          default: []
          type: array
          items:
            title: property
            type: string
        properties_override:
          type: object
          properties: {}
          additionalProperties: true
          title: properties_override
        replicate:
          type: boolean
          title: replicate
          default: false
        encryption:
          type: boolean
          title: encryption
          default: false
        encryption_key:
          title: encryption_key
          default: null
          type: string
          nullable: true
        encryption_key_format:
          title: encryption_key_format
          default: null
          type: string
          enum:
            - HEX
            - PASSPHRASE
          nullable: true
        encryption_key_location:
          title: encryption_key_location
          default: null
          type: string
          nullable: true
        periodic_snapshot_tasks:
          title: periodic_snapshot_tasks
          default: []
          type: array
          items:
            type: integer
            title: periodic_snapshot_task
        naming_schema:
          title: naming_schema
          default: []
          type: array
          items:
            title: naming_schema
            type: string
        also_include_naming_schema:
          title: also_include_naming_schema
          default: []
          type: array
          items:
            title: naming_schema
            type: string
        name_regex:
          title: name_regex
          default: null
          type: string
          nullable: true
        restrict_schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
            begin:
              title: begin
              default: 00:00
              type: string
            end:
              title: end
              default: 23:59
              type: string
          additionalProperties: false
          title: restrict_schedule
        allow_from_scratch:
          type: boolean
          title: allow_from_scratch
          default: false
        readonly:
          title: readonly
          default: SET
          type: string
          enum:
            - SET
            - REQUIRE
            - IGNORE
        hold_pending_snapshots:
          type: boolean
          title: hold_pending_snapshots
          default: false
        retention_policy:
          title: retention_policy
          type: string
          enum:
            - SOURCE
            - CUSTOM
            - NONE
        lifetime_value:
          type: integer
          title: lifetime_value
          default: null
          nullable: true
        lifetime_unit:
          title: lifetime_unit
          default: null
          type: string
          enum:
            - HOUR
            - DAY
            - WEEK
            - MONTH
            - YEAR
          nullable: true
        lifetimes:
          title: lifetimes
          default: []
          type: array
          items:
            type: object
            properties:
              schedule:
                type: object
                properties:
                  minute:
                    title: minute
                    default: "*"
                    type: string
                  hour:
                    title: hour
                    default: "*"
                    type: string
                  dom:
                    title: dom
                    default: "*"
                    type: string
                  month:
                    title: month
                    default: "*"
                    type: string
                  dow:
                    title: dow
                    default: "*"
                    type: string
                additionalProperties: false
                title: schedule
              lifetime_value:
                type: integer
                title: lifetime_value
              lifetime_unit:
                title: lifetime_unit
                type: string
                enum:
                  - HOUR
                  - DAY
                  - WEEK
                  - MONTH
                  - YEAR
            additionalProperties: false
            title: lifetime
        compression:
          title: compression
          default: null
          type: string
          enum:
            - LZ4
            - PIGZ
            - PLZIP
          nullable: true
        speed_limit:
          type: integer
          title: speed_limit
          default: null
          nullable: true
        large_block:
          type: boolean
          title: large_block
          default: true
        embed:
          type: boolean
          title: embed
          default: false
        compressed:
          type: boolean
          title: compressed
          default: true
        retries:
          type: integer
          title: retries
          default: 5
        logging_level:
          title: logging_level
          default: null
          type: string
          enum:
            - DEBUG
            - INFO
            - WARNING
            - ERROR
          nullable: true
        exclude_mountpoint_property:
          type: boolean
          title: exclude_mountpoint_property
          default: true
        only_from_scratch:
          type: boolean
          title: only_from_scratch
          default: false
      additionalProperties: false
      title: replication_create
    replication_target_unmatched_snapshots_0:
      title: direction
      type: string
      enum:
        - PUSH
        - PULL
    replication_target_unmatched_snapshots_1:
      title: source_datasets
      default: []
      type: array
      items:
        title: dataset
        type: string
    replication_target_unmatched_snapshots_2:
      title: target_dataset
      type: string
    replication_target_unmatched_snapshots_3:
      title: transport
      type: string
      enum:
        - SSH
        - SSH+NETCAT
        - LOCAL
        - LEGACY
    replication_target_unmatched_snapshots_4:
      type: integer
      title: ssh_credentials
      default: null
      nullable: true
    replication_target_unmatched_snapshots:
      type: object
      properties:
        direction:
          $ref: "#/components/schemas/replication_target_unmatched_snapshots_0"
        source_datasets:
          $ref: "#/components/schemas/replication_target_unmatched_snapshots_1"
        target_dataset:
          $ref: "#/components/schemas/replication_target_unmatched_snapshots_2"
        transport:
          $ref: "#/components/schemas/replication_target_unmatched_snapshots_3"
        ssh_credentials:
          $ref: "#/components/schemas/replication_target_unmatched_snapshots_4"
    replication_config_update_0:
      type: object
      properties:
        max_parallel_replication_tasks:
          type: integer
          title: max_parallel_replication_tasks
          nullable: true
      additionalProperties: false
      title: replication_config_update
    reporting_update_0:
      type: object
      properties:
        cpu_in_percentage:
          type: boolean
          title: cpu_in_percentage
          description: If `cpu_in_percentage` is `true`, collectd reports CPU usage in
            percentage instead of "jiffies".
        graphite:
          title: graphite
          type: string
          description: "`graphite` specifies a destination hostname or IP for collectd
            data sent by the Graphite plugin.."
        graphite_separateinstances:
          type: boolean
          title: graphite_separateinstances
          description: "`graphite_separateinstances` corresponds to collectd
            SeparateInstances option."
        graph_age:
          type: integer
          title: graph_age
          description: >-
            `graph_age` specifies the maximum age of stored graphs in months.
            `graph_points` is the number of points for

            each hourly, daily, weekly, etc. graph. Changing these requires destroying the current reporting database,

            so when these fields are changed, an additional `confirm_rrd_destroy: true` flag must be present.
        graph_points:
          type: integer
          title: graph_points
          description: >-
            `graph_age` specifies the maximum age of stored graphs in months.
            `graph_points` is the number of points for

            each hourly, daily, weekly, etc. graph. Changing these requires destroying the current reporting database,

            so when these fields are changed, an additional `confirm_rrd_destroy: true` flag must be present.
        confirm_rrd_destroy:
          type: boolean
          title: confirm_rrd_destroy
      additionalProperties: false
      title: reporting_entry
    reporting_get_data_0:
      title: graphs
      default: []
      type: array
      items:
        type: object
        properties:
          name:
            title: name
            type: string
          identifier:
            title: identifier
            default: null
            nullable: true
            type: string
        additionalProperties: false
        title: graph
    reporting_get_data_1:
      type: object
      properties:
        unit:
          title: unit
          type: string
          enum:
            - HOUR
            - DAY
            - WEEK
            - MONTH
            - YEAR
          description: >-
            For the time period of the graph either `unit` and `page` OR
            `start` and `end` should be

            used, not both.
        page:
          type: integer
          title: page
          default: 0
          description: >-
            For the time period of the graph either `unit` and `page` OR
            `start` and `end` should be

            used, not both.
        start:
          title: start
          type: string
          description: >-
            For the time period of the graph either `unit` and `page` OR
            `start` and `end` should be

            used, not both.
        end:
          title: end
          type: string
          description: >-
            For the time period of the graph either `unit` and `page` OR
            `start` and `end` should be

            used, not both.
        aggregate:
          type: boolean
          title: aggregate
          default: true
          description: "`aggregate` will return aggregate available data for each graph
            (e.g. min, max, mean)."
      additionalProperties: false
      title: reporting_query
    reporting_get_data:
      type: object
      properties:
        graphs:
          $ref: "#/components/schemas/reporting_get_data_0"
        reporting_query:
          $ref: "#/components/schemas/reporting_get_data_1"
    route_ipv4gw_reachable_0:
      title: ipv4_gateway
      type: string
    rsyncd_update_0:
      type: object
      properties:
        port:
          type: integer
          title: port
        auxiliary:
          title: auxiliary
          type: string
      additionalProperties: false
      title: rsyncd_entry
    rsyncmod_create_0:
      type: object
      properties:
        enabled:
          type: boolean
          title: enabled
          default: true
        name:
          title: name
          type: string
        comment:
          title: comment
          type: string
        path:
          title: path
          type: string
          description: >-
            `path` represents the path to a dataset. Path length is limited to
            1023 characters maximum as per the limit

            enforced by FreeBSD. It is possible that we reach this max length recursively while transferring data. In that

            case, the user must ensure the maximum path will not be too long or modify the recursed path to shorter

            than the limit.
        mode:
          title: mode
          type: string
          enum:
            - RO
            - RW
            - WO
        maxconn:
          type: integer
          title: maxconn
          description: >-
            `maxconn` is an integer value representing the maximum number of
            simultaneous connections. Zero represents

            unlimited.
        user:
          title: user
          default: nobody
          type: string
        group:
          title: group
          default: nobody
          type: string
        hostsallow:
          title: hostsallow
          default: []
          type: array
          items:
            title: hostsallow
            type: string
          description: >-
            `hostsallow` is a list of patterns to match hostname/ip address of
            a connecting client. If list is empty,

            all hosts are allowed.
        hostsdeny:
          title: hostsdeny
          default: []
          type: array
          items:
            title: hostdeny
            type: string
          description: >-
            `hostsdeny` is a list of patterns to match hostname/ip address of a
            connecting client. If the pattern is

            matched, access is denied to the client. If no client should be denied, this should be left empty.
        auxiliary:
          title: auxiliary
          type: string
      additionalProperties: false
      title: rsyncmod_create
    rsynctask_create_0:
      type: object
      properties:
        path:
          title: path
          type: string
          description: See the comment in Rsyncmod about `path` length limits.
        user:
          title: user
          type: string
        remotehost:
          title: remotehost
          type: string
          description: >-
            `remotehost` is ip address or hostname of the remote system. If
            username differs on the remote host,

            "username@remote_host" format should be used.
        remoteport:
          type: integer
          title: remoteport
        mode:
          title: mode
          default: MODULE
          type: string
          enum:
            - MODULE
            - SSH
          description: >-
            `mode` represents different operating mechanisms for Rsync i.e
            Rsync Module mode / Rsync SSH mode.

            `remotemodule` is the name of remote module, this attribute should be specified when `mode` is set to MODULE.
        remotemodule:
          title: remotemodule
          type: string
          description: "`remotemodule` is the name of remote module, this attribute should
            be specified when `mode` is set to MODULE."
        remotepath:
          title: remotepath
          type: string
          description: "`remotepath` specifies the path on the remote system."
        validate_rpath:
          type: boolean
          title: validate_rpath
          default: true
          description: "`validate_rpath` is a boolean which when sets validates the
            existence of the remote path."
        direction:
          title: direction
          default: PUSH
          type: string
          enum:
            - PULL
            - PUSH
          description: "`direction` specifies if data should be PULLED or PUSHED from the
            remote system."
        desc:
          title: desc
          type: string
        schedule:
          type: object
          properties:
            minute:
              title: minute
              default: "00"
              type: string
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
          additionalProperties: false
          title: schedule
        recursive:
          type: boolean
          title: recursive
        times:
          type: boolean
          title: times
        compress:
          type: boolean
          title: compress
          description: "`compress` when set reduces the size of the data which is to be
            transmitted."
        archive:
          type: boolean
          title: archive
          description: >-
            `archive` when set makes rsync run recursively, preserving
            symlinks, permissions, modification times, group,

            and special files.
        delete:
          type: boolean
          title: delete
          description: "`delete` when set deletes files in the destination directory which
            do not exist in the source directory."
        quiet:
          type: boolean
          title: quiet
        preserveperm:
          type: boolean
          title: preserveperm
          description: "`preserveperm` when set preserves original file permissions."
        preserveattr:
          type: boolean
          title: preserveattr
        delayupdates:
          type: boolean
          title: delayupdates
        extra:
          title: extra
          default: []
          type: array
          items:
            title: extra
            type: string
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: rsync_task_create
    s3_update_0:
      type: object
      properties:
        bindip:
          title: bindip
          type: string
        bindport:
          type: integer
          title: bindport
        console_bindport:
          type: integer
          title: console_bindport
        access_key:
          title: access_key
          type: string
          description: "`access_key` must only contain alphanumeric characters and should
            be between 5 and 20 characters."
        secret_key:
          title: secret_key
          type: string
          description: "`secret_key` must only contain alphanumeric characters and should
            be between 8 and 40 characters."
        browser:
          type: boolean
          title: browser
          description: "`browser` when set, enables the web user interface for the S3
            Service."
        tls_server_uri:
          title: tls_server_uri
          type: string
          nullable: true
        storage_path:
          title: storage_path
          type: string
        certificate:
          type: integer
          title: certificate
          nullable: true
      additionalProperties: false
      title: s3_entry
    service_reload_0:
      title: service
      type: string
    service_reload_1:
      type: object
      properties:
        ha_propagate:
          type: boolean
          title: ha_propagate
          default: true
      additionalProperties: false
      title: service-control
    service_reload:
      type: object
      properties:
        service:
          $ref: "#/components/schemas/service_reload_0"
        service-control:
          $ref: "#/components/schemas/service_reload_1"
    service_restart_0:
      title: service
      type: string
    service_restart_1:
      type: object
      properties:
        ha_propagate:
          type: boolean
          title: ha_propagate
          default: true
      additionalProperties: false
      title: service-control
    service_restart:
      type: object
      properties:
        service:
          $ref: "#/components/schemas/service_restart_0"
        service-control:
          $ref: "#/components/schemas/service_restart_1"
    service_start_0:
      title: service
      type: string
    service_start_1:
      type: object
      properties:
        ha_propagate:
          type: boolean
          title: ha_propagate
          default: true
      additionalProperties: false
      title: service-control
    service_start:
      type: object
      properties:
        service:
          $ref: "#/components/schemas/service_start_0"
        service-control:
          $ref: "#/components/schemas/service_start_1"
    service_started_0:
      title: service
      type: string
    service_started_or_enabled_0:
      title: service
      type: string
    service_stop_0:
      title: service
      type: string
    service_stop_1:
      type: object
      properties:
        ha_propagate:
          type: boolean
          title: ha_propagate
          default: true
      additionalProperties: false
      title: service-control
    service_stop:
      type: object
      properties:
        service:
          $ref: "#/components/schemas/service_stop_0"
        service-control:
          $ref: "#/components/schemas/service_stop_1"
    service_terminate_process_0:
      type: integer
      title: pid
      description: Terminate process by `pid`.
    service_terminate_process_1:
      type: integer
      title: timeout
      default: 10
    service_terminate_process:
      type: object
      properties:
        pid:
          $ref: "#/components/schemas/service_terminate_process_0"
        timeout:
          $ref: "#/components/schemas/service_terminate_process_1"
    sharing_nfs_create_0:
      type: object
      properties:
        paths:
          title: paths
          default: []
          type: array
          items:
            title: path
            type: string
          description: "`paths` is a list of valid paths which are configured to be shared
            on this share."
        aliases:
          title: aliases
          default: []
          type: array
          items:
            title: path
            type: string
          description: "`aliases` IGNORED, for now."
        comment:
          title: comment
          default: ""
          type: string
        networks:
          title: networks
          default: []
          type: array
          items:
            title: network
            type: string
          description: >-
            `networks` is a list of authorized networks that are allowed to
            access the share having format

            "network/mask" CIDR notation. If empty, all networks are allowed.
        hosts:
          title: hosts
          default: []
          type: array
          items:
            title: host
            type: string
          description: >-
            `hosts` is a list of IP's/hostnames which are allowed to access the
            share. If empty, all IP's/hostnames are

            allowed.
        alldirs:
          type: boolean
          title: alldirs
          default: false
        ro:
          type: boolean
          title: ro
          default: false
        quiet:
          type: boolean
          title: quiet
          default: false
        maproot_user:
          title: maproot_user
          default: null
          type: string
          nullable: true
        maproot_group:
          title: maproot_group
          default: null
          type: string
          nullable: true
        mapall_user:
          title: mapall_user
          default: null
          type: string
          nullable: true
        mapall_group:
          title: mapall_group
          default: null
          type: string
          nullable: true
        security:
          title: security
          default: []
          type: array
          items:
            title: provider
            type: string
            enum:
              - SYS
              - KRB5
              - KRB5I
              - KRB5P
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: sharingnfs_create
    sharing_smb_create_0:
      type: object
      properties:
        purpose:
          title: purpose
          default: DEFAULT_SHARE
          type: string
          enum:
            - NO_PRESET
            - DEFAULT_CLUSTER_SHARE
            - DEFAULT_SHARE
            - ENHANCED_TIMEMACHINE
            - MULTI_PROTOCOL_NFS
            - PRIVATE_DATASETS
            - READ_ONLY
            - WORM_DROPBOX
          description: "`purpose` applies common configuration presets depending on
            intended purpose."
        path:
          title: path
          type: string
          description: >-
            `path` path to export over the SMB protocol. If server is
            clustered, then this path will be

            relative to the `cluster_volname`.
        path_suffix:
          title: path_suffix
          default: ""
          type: string
        home:
          type: boolean
          title: home
          default: false
        name:
          title: name
          type: string
        comment:
          title: comment
          default: ""
          type: string
        ro:
          type: boolean
          title: ro
          default: false
          description: "`ro` when enabled, prohibits write access to the share."
        browsable:
          type: boolean
          title: browsable
          default: true
        timemachine:
          type: boolean
          title: timemachine
          default: false
          description: "`timemachine` when set, enables Time Machine backups for this
            share."
        timemachine_quota:
          type: integer
          title: timemachine_quota
          default: 0
        recyclebin:
          type: boolean
          title: recyclebin
          default: false
        guestok:
          type: boolean
          title: guestok
          default: false
          description: "`guestok` when enabled, allows access to this share without a
            password."
        abe:
          type: boolean
          title: abe
          default: false
        hostsallow:
          title: hostsallow
          default: []
          type: array
          items: {}
          description: >-
            `hostsallow` is a list of hostnames / IP addresses which have
            access to this share.

            `hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful

            of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL" which means that it will deny

            access to ALL hostnames except for the ones which have been listed in `hostsallow`.
        hostsdeny:
          title: hostsdeny
          default: []
          type: array
          items: {}
          description: >-
            `hostsdeny` is a list of hostnames / IP addresses which are not
            allowed access to this share. If a handful

            of hostnames are to be only allowed access, `hostsdeny` can be passed "ALL" which means that it will deny

            access to ALL hostnames except for the ones which have been listed in `hostsallow`.
        aapl_name_mangling:
          type: boolean
          title: aapl_name_mangling
          default: false
        acl:
          type: boolean
          title: acl
          default: true
          description: "`acl` enables support for storing the SMB Security Descriptor as a
            Filesystem ACL."
        durablehandle:
          type: boolean
          title: durablehandle
          default: true
        shadowcopy:
          type: boolean
          title: shadowcopy
          default: true
          description: "`shadowcopy` enables support for the volume shadow copy service."
        streams:
          type: boolean
          title: streams
          default: true
          description: "`streams` enables support for storing alternate datastreams as
            filesystem extended attributes."
        fsrvp:
          type: boolean
          title: fsrvp
          default: false
          description: >-
            `fsrvp` enables support for the filesystem remote VSS protocol.
            This allows clients to create

            ZFS snapshots through RPC.
        auxsmbconf:
          title: auxsmbconf
          default: ""
          type: string
        enabled:
          type: boolean
          title: enabled
          default: true
        cluster_volname:
          title: cluster_volname
          default: ""
          type: string
          description: >-
            `path` path to export over the SMB protocol. If server is
            clustered, then this path will be

            relative to the `cluster_volname`.
        afp:
          type: boolean
          title: afp
          default: false
      additionalProperties: false
      title: sharingsmb_create
    sharing_webdav_create_0:
      type: object
      properties:
        perm:
          type: boolean
          title: perm
          default: true
        ro:
          type: boolean
          title: ro
          default: false
          description: "`ro` when enabled prohibits users from writing to this share."
        comment:
          title: comment
          type: string
        name:
          title: name
          type: string
        path:
          title: path
          type: string
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: webdav_share_create
    smart_update_0:
      type: object
      properties:
        interval:
          type: integer
          title: interval
          description: >-
            `interval` is an integer value in minutes which defines how often
            smartd activates to check if any tests

            are configured to run.
        powermode:
          title: powermode
          type: string
          enum:
            - NEVER
            - SLEEP
            - STANDBY
            - IDLE
        difference:
          type: integer
          title: difference
        informational:
          type: integer
          title: informational
        critical:
          type: integer
          title: critical
      additionalProperties: false
      title: smart_entry
    smart_test_create_0:
      type: object
      properties:
        schedule:
          type: object
          properties:
            hour:
              title: hour
              default: "*"
              type: string
            dom:
              title: dom
              default: "*"
              type: string
            month:
              title: month
              default: "*"
              type: string
            dow:
              title: dow
              default: "*"
              type: string
          additionalProperties: false
          title: schedule
        desc:
          title: desc
          type: string
        all_disks:
          type: boolean
          title: all_disks
          default: false
          description: "`all_disks` when enabled sets the task to cover all disks in which
            case `disks` is not required."
        disks:
          title: disks
          default: []
          type: array
          items:
            title: disk
            type: string
          description: >-
            `disks` is a list of valid disks which should be monitored in this
            task.

            `all_disks` when enabled sets the task to cover all disks in which case `disks` is not required.
        type:
          title: type
          type: string
          enum:
            - LONG
            - SHORT
            - CONVEYANCE
            - OFFLINE
          description: "`type` is specified to represent the type of SMART test to be
            executed."
      additionalProperties: false
      title: smart_task_create
    smart_test_disk_choices_0:
      type: boolean
      title: full_disk
      default: false
    smart_test_manual_test_0:
      title: disks
      default: []
      type: array
      items:
        type: object
        properties:
          identifier:
            title: identifier
            type: string
          mode:
            title: mode
            default: BACKGROUND
            type: string
            enum:
              - FOREGROUND
              - BACKGROUND
          type:
            title: type
            type: string
            enum:
              - LONG
              - SHORT
              - CONVEYANCE
              - OFFLINE
        additionalProperties: false
        title: disk_run
      description: Run manual SMART tests for `disks`.
    smb_update_0:
      type: object
      properties:
        netbiosname:
          title: netbiosname
          type: string
          description: >-
            `netbiosname` defaults to the original hostname of the system.

            `workgroup` specifies the NetBIOS workgroup to which the TrueNAS server belongs. This will be automatically

            set to the correct value during the process of joining an AD domain. `workgroup` and `netbiosname` should have different values.
        netbiosname_b:
          title: netbiosname_b
          type: string
        netbiosalias:
          title: netbiosalias
          default: []
          type: array
          items:
            title: netbios_alias
            type: string
          description: >-
            `netbiosalias` a list of netbios aliases. If Server is joined to an
            AD domain, additional Kerberos

            Service Principal Names will be generated for these aliases.
        workgroup:
          title: workgroup
          type: string
          description: >-
            `workgroup` specifies the NetBIOS workgroup to which the TrueNAS
            server belongs. This will be automatically

            set to the correct value during the process of joining an AD domain. `workgroup` and `netbiosname` should have different values.
        description:
          title: description
          type: string
        enable_smb1:
          type: boolean
          title: enable_smb1
          description: "`enable_smb1` allows legacy SMB clients to connect to the server
            when enabled."
        unixcharset:
          title: unixcharset
          type: string
        loglevel:
          title: loglevel
          type: string
          enum:
            - NONE
            - MINIMUM
            - NORMAL
            - FULL
            - DEBUG
        syslog:
          type: boolean
          title: syslog
        aapl_extensions:
          type: boolean
          title: aapl_extensions
          description: >-
            `aapl_extensions` enables support for SMB2 protocol extensions for
            MacOS clients. This is not a requirement for MacOS support,

            but is currently a requirement for time machine support.
        localmaster:
          type: boolean
          title: localmaster
          description: "`localmaster` when set, determines if the system participates in a
            browser election."
        guest:
          title: guest
          type: string
          description: '`guest` attribute is specified to select the account to be used
            for guest access. It defaults to "nobody".'
        admin_group:
          title: admin_group
          default: null
          type: string
          description: "The group specified as the SMB `admin_group` will be automatically
            added as a foreign group member of S-1-5-32-544 (builtin\admins).

            This will afford the group all privileges granted to a
            local admin. Any SMB group may be selected (including AD groups)."
          nullable: true
        filemask:
          title: filemask
          type: string
        dirmask:
          title: dirmask
          type: string
        ntlmv1_auth:
          type: boolean
          title: ntlmv1_auth
          description: >-
            `ntlmv1_auth` enables a legacy and insecure authentication method,
            which may be required for legacy or poorly-implemented

            SMB clients.
        multichannel:
          type: boolean
          title: multichannel
          default: false
        bindip:
          title: bindip
          default: []
          type: array
          items:
            title: ip
            type: string
        smb_options:
          title: smb_options
          type: string
      additionalProperties: false
      title: smb_update
    smb_get_remote_acl_0:
      type: object
      properties:
        server:
          title: server
          type: string
          description: "`server` IP Address or hostname of the remote server"
        share:
          title: share
          type: string
          description: "`share` Share name"
        path:
          title: path
          default: \
          type: string
          description: '`path` path on the remote SMB server. Use "" to separate path
            components'
        username:
          title: username
          type: string
          description: "`username` username to use for authentication"
        password:
          title: password
          type: string
          description: "`password` password to use for authentication"
        options:
          type: object
          properties:
            use_kerberos:
              type: boolean
              title: use_kerberos
              default: false
            output_format:
              title: output_format
              default: SMB
              type: string
              enum:
                - SMB
                - LOCAL
          additionalProperties: false
          title: options
      additionalProperties: false
      title: get_remote_acl
    smb_status_0:
      title: info_level
      default: ALL
      type: string
      enum:
        - AUTH_LOG
        - ALL
        - SESSIONS
        - SHARES
        - LOCKS
        - BYTERANGE
        - NOTIFICATIONS
      description: "`info_level` type of information requests. Defaults to ALL."
    smb_status_1:
      title: query-filters
      default: []
      type: array
      items: {}
    smb_status_2:
      type: object
      properties:
        relationships:
          type: boolean
          title: relationships
          default: true
        extend:
          title: extend
          default: null
          type: string
          nullable: true
        extend_context:
          title: extend_context
          default: null
          type: string
          nullable: true
        prefix:
          title: prefix
          default: null
          type: string
          nullable: true
        extra:
          type: object
          properties: {}
          additionalProperties: true
          title: extra
        order_by:
          title: order_by
          default: []
          type: array
          items: {}
        select:
          title: select
          default: []
          type: array
          items: {}
        count:
          type: boolean
          title: count
          default: false
        get:
          type: boolean
          title: get
          default: false
        offset:
          type: integer
          title: offset
          default: 0
        limit:
          type: integer
          title: limit
          default: 0
        force_sql_filters:
          type: boolean
          title: force_sql_filters
          default: false
      additionalProperties: false
      title: query-options
    smb_status_3:
      type: object
      properties:
        verbose:
          type: boolean
          title: verbose
          default: true
          description: >-
            `status_options` additional options to filter query results.
            Supported

            values are as follows: `verbose` gives more verbose status output
        fast:
          type: boolean
          title: fast
          default: false
        restrict_user:
          title: restrict_user
          default: ""
          type: string
        restrict_session:
          title: restrict_session
          default: ""
          type: string
      additionalProperties: false
      title: status_options
      description: |-
        `status_options` additional options to filter query results. Supported
        values are as follows: `verbose` gives more verbose status output
    smb_status:
      type: object
      properties:
        info_level:
          $ref: "#/components/schemas/smb_status_0"
        query-filters:
          $ref: "#/components/schemas/smb_status_1"
        query-options:
          $ref: "#/components/schemas/smb_status_2"
        status_options:
          $ref: "#/components/schemas/smb_status_3"
    smb_sharesec_create_0:
      type: object
      properties:
        share_name:
          title: share_name
          type: string
          description: "`share_name` - name of SMB share."
        share_acl:
          title: share_acl
          default:
            - ae_who_sid: S-1-1-0
              ae_perm: FULL
              ae_type: ALLOWED
          type: array
          items:
            type: object
            properties:
              ae_who_sid:
                title: ae_who_sid
                default: null
                type: string
              ae_who_name:
                type: object
                properties:
                  domain:
                    title: domain
                    default: ""
                    type: string
                  name:
                    title: name
                    default: ""
                    type: string
                additionalProperties: false
                title: ae_who_name
              ae_perm:
                title: ae_perm
                type: string
                enum:
                  - FULL
                  - CHANGE
                  - READ
              ae_type:
                title: ae_type
                type: string
                enum:
                  - ALLOWED
                  - DENIED
            additionalProperties: false
            title: aclentry
          description: "`share_acl` a list of ACL entries (dictionaries) with the
            following keys:"
      additionalProperties: false
      title: smbsharesec_create
    smb_sharesec_getacl_0:
      title: share_name
      type: string
      description: >-
        View the ACL information for `share_name`. The share ACL is
        distinct from filesystem

        ACLs which can be viewed by calling `filesystem.getacl`. `ae_who_name` will appear

        as `None` if the SMB service is stopped or if winbind is unable  to resolve the SID

        to a name.
    smb_sharesec_getacl_1:
      type: object
      properties:
        resolve_sids:
          type: boolean
          title: resolve_sids
          default: true
      additionalProperties: false
      title: options
    smb_sharesec_getacl:
      type: object
      properties:
        share_name:
          $ref: "#/components/schemas/smb_sharesec_getacl_0"
        options:
          $ref: "#/components/schemas/smb_sharesec_getacl_1"
    snmp_update_0:
      type: object
      properties:
        location:
          title: location
          type: string
        contact:
          title: contact
          type: string
        traps:
          type: boolean
          title: traps
        v3:
          type: boolean
          title: v3
          description: "`v3` when set enables SNMP version 3."
        community:
          title: community
          default: public
          type: string
        v3_username:
          title: v3_username
          type: string
        v3_authtype:
          title: v3_authtype
          type: string
          enum:
            - ""
            - MD5
            - SHA
        v3_password:
          title: v3_password
          type: string
        v3_privproto:
          title: v3_privproto
          type: string
          enum:
            - null
            - AES
            - DES
          nullable: true
        v3_privpassphrase:
          title: v3_privpassphrase
          type: string
          nullable: true
        loglevel:
          type: integer
          title: loglevel
        options:
          title: options
          type: string
        zilstat:
          type: boolean
          title: zilstat
      additionalProperties: false
      title: snmp_entry
    ssh_update_0:
      type: object
      properties:
        bindiface:
          title: bindiface
          default: []
          type: array
          items:
            title: iface
            type: string
          description: If `bindiface` is empty it will listen for all available addresses.
        tcpport:
          type: integer
          title: tcpport
        rootlogin:
          type: boolean
          title: rootlogin
        passwordauth:
          type: boolean
          title: passwordauth
        kerberosauth:
          type: boolean
          title: kerberosauth
        tcpfwd:
          type: boolean
          title: tcpfwd
        compression:
          type: boolean
          title: compression
        sftp_log_level:
          title: sftp_log_level
          type: string
          enum:
            - ""
            - QUIET
            - FATAL
            - ERROR
            - INFO
            - VERBOSE
            - DEBUG
            - DEBUG2
            - DEBUG3
        sftp_log_facility:
          title: sftp_log_facility
          type: string
          enum:
            - ""
            - DAEMON
            - USER
            - AUTH
            - LOCAL0
            - LOCAL1
            - LOCAL2
            - LOCAL3
            - LOCAL4
            - LOCAL5
            - LOCAL6
            - LOCAL7
        weak_ciphers:
          title: weak_ciphers
          default: []
          type: array
          items:
            title: cipher
            type: string
            enum:
              - AES128-CBC
              - NONE
        options:
          title: options
          type: string
      additionalProperties: false
      title: ssh_entry
    staticroute_create_0:
      type: object
      properties:
        destination:
          title: destination
          type: string
          description: Address families of `gateway` and `destination` should match when
            creating a static route.
        gateway:
          title: gateway
          type: string
          description: Address families of `gateway` and `destination` should match when
            creating a static route.
        description:
          title: description
          default: ""
          type: string
      additionalProperties: false
      title: staticroute_entry
    stats_get_data_0:
      title: stats_list
      default: []
      type: array
      items:
        type: object
        properties:
          source:
            title: source
            type: string
          type:
            title: type
            type: string
          dataset:
            title: dataset
            type: string
          cf:
            title: cf
            default: AVERAGE
            type: string
        additionalProperties: false
        title: stats-data
    stats_get_data_1:
      type: object
      properties:
        step:
          type: integer
          title: step
          default: 10
        start:
          title: start
          default: now-1h
          type: string
        end:
          title: end
          default: now
          type: string
      additionalProperties: false
      title: stats-filter
    stats_get_data:
      type: object
      properties:
        stats_list:
          $ref: "#/components/schemas/stats_get_data_0"
        stats-filter:
          $ref: "#/components/schemas/stats_get_data_1"
    stats_get_dataset_info_0:
      title: source
      type: string
    stats_get_dataset_info_1:
      title: type
      type: string
    stats_get_dataset_info:
      type: object
      properties:
        source:
          $ref: "#/components/schemas/stats_get_dataset_info_0"
        type:
          $ref: "#/components/schemas/stats_get_dataset_info_1"
    support_update_0:
      type: object
      properties:
        enabled:
          type: boolean
          title: enabled
          nullable: true
        name:
          title: name
          type: string
        title:
          title: title
          type: string
        email:
          title: email
          type: string
        phone:
          title: phone
          type: string
        secondary_name:
          title: secondary_name
          type: string
        secondary_title:
          title: secondary_title
          type: string
        secondary_email:
          title: secondary_email
          type: string
        secondary_phone:
          title: secondary_phone
          type: string
      additionalProperties: false
      title: support_entry
    support_attach_ticket_0:
      type: object
      properties:
        ticket:
          type: integer
          title: ticket
        filename:
          title: filename
          type: string
        token:
          title: token
          type: string
      additionalProperties: false
      title: attach_ticket
    support_fetch_categories_0:
      title: token
      type: string
    support_new_ticket_0:
      type: object
      properties:
        title:
          title: title
          type: string
        body:
          title: body
          type: string
        category:
          title: category
          type: string
        attach_debug:
          type: boolean
          title: attach_debug
          default: false
        token:
          title: token
          type: string
        type:
          title: type
          type: string
          enum:
            - BUG
            - FEATURE
        criticality:
          title: criticality
          type: string
          description: For SCALE `criticality`, `environment`, `phone`, `name` and `email`
            attributes are not required.
        environment:
          title: environment
          type: string
          description: For SCALE `criticality`, `environment`, `phone`, `name` and `email`
            attributes are not required.
        phone:
          title: phone
          type: string
          description: For SCALE `criticality`, `environment`, `phone`, `name` and `email`
            attributes are not required.
        name:
          title: name
          type: string
          description: For SCALE `criticality`, `environment`, `phone`, `name` and `email`
            attributes are not required.
        email:
          title: email
          type: string
          description: For SCALE `criticality`, `environment`, `phone`, `name` and `email`
            attributes are not required.
        cc:
          title: cc
          default: []
          type: array
          items:
            title: email
            type: string
      additionalProperties: false
      title: new_ticket
    system_feature_enabled_0:
      title: feature
      type: string
      enum:
        - DEDUP
        - FIBRECHANNEL
        - VM
    system_license_update_0:
      title: license
      type: string
    system_reboot_0:
      type: object
      properties:
        delay:
          type: integer
          title: delay
      additionalProperties: false
      title: system-reboot
    system_shutdown_0:
      type: object
      properties:
        delay:
          type: integer
          title: delay
      additionalProperties: false
      title: system-shutdown
    system_advanced_update_0:
      type: object
      properties:
        advancedmode:
          type: boolean
          title: advancedmode
        autotune:
          type: boolean
          title: autotune
          description: >-
            `autotune` when enabled executes autotune script which attempts to
            optimize the system based on the installed

            hardware.
        kdump_enabled:
          type: boolean
          title: kdump_enabled
        boot_scrub:
          type: integer
          title: boot_scrub
        consolemenu:
          type: boolean
          title: consolemenu
          description: >-
            `consolemenu` should be disabled if the menu at console is not
            desired. It will default to standard login

            in the console if disabled.
        consolemsg:
          type: boolean
          title: consolemsg
          description: >-
            `consolemsg` is a deprecated attribute and will be removed in
            further releases. Please, use `consolemsg`

            attribute in the `system.general` plugin.
        debugkernel:
          type: boolean
          title: debugkernel
        fqdn_syslog:
          type: boolean
          title: fqdn_syslog
        motd:
          title: motd
          type: string
        powerdaemon:
          type: boolean
          title: powerdaemon
        serialconsole:
          type: boolean
          title: serialconsole
        serialport:
          title: serialport
          type: string
        serialspeed:
          title: serialspeed
          type: string
          enum:
            - "9600"
            - "19200"
            - "38400"
            - "57600"
            - "115200"
        swapondrive:
          type: integer
          title: swapondrive
        overprovision:
          type: integer
          title: overprovision
          nullable: true
        traceback:
          type: boolean
          title: traceback
        uploadcrash:
          type: boolean
          title: uploadcrash
        anonstats:
          type: boolean
          title: anonstats
        sed_user:
          title: sed_user
          type: string
          enum:
            - USER
            - MASTER
        sysloglevel:
          title: sysloglevel
          type: string
          enum:
            - F_EMERG
            - F_ALERT
            - F_CRIT
            - F_ERR
            - F_WARNING
            - F_NOTICE
            - F_INFO
            - F_DEBUG
          description: When `syslogserver` is defined, logs of `sysloglevel` or above are
            sent.
        syslogserver:
          title: syslogserver
          type: string
          description: When `syslogserver` is defined, logs of `sysloglevel` or above are
            sent.
        syslog_transport:
          title: syslog_transport
          type: string
          enum:
            - UDP
            - TCP
            - TLS
        syslog_tls_certificate:
          type: integer
          title: syslog_tls_certificate
          nullable: true
        syslog_tls_certificate_authority:
          type: integer
          title: syslog_tls_certificate_authority
          nullable: true
        isolated_gpu_pci_ids:
          title: isolated_gpu_pci_ids
          default: []
          type: array
          items:
            title: pci_id
            type: string
        kernel_extra_options:
          title: kernel_extra_options
          type: string
        sed_passwd:
          title: sed_passwd
          type: string
      additionalProperties: false
      title: system_advanced_entry
    system_general_update_0:
      type: object
      properties:
        ui_httpsport:
          type: integer
          title: ui_httpsport
        ui_httpsredirect:
          type: boolean
          title: ui_httpsredirect
          description: >-
            `ui_httpsredirect` when set, makes sure that all HTTP requests are
            converted to HTTPS requests to better

            enhance security.
        ui_httpsprotocols:
          title: ui_httpsprotocols
          default: []
          type: array
          items:
            title: protocol
            type: string
            enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
        ui_port:
          type: integer
          title: ui_port
        ui_address:
          title: ui_address
          default: []
          type: array
          items:
            title: addr
            type: string
          description: >-
            `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6
            addresses respectively which the system will

            listen on.
        ui_v6address:
          title: ui_v6address
          default: []
          type: array
          items:
            title: addr
            type: string
          description: >-
            `ui_address` and `ui_v6address` are a list of valid ipv4/ipv6
            addresses respectively which the system will

            listen on.
        ui_consolemsg:
          type: boolean
          title: ui_consolemsg
        ui_x_frame_options:
          title: ui_x_frame_options
          type: string
          enum:
            - SAMEORIGIN
            - DENY
            - ALLOW_ALL
        kbdmap:
          title: kbdmap
          type: string
        language:
          title: language
          type: string
        timezone:
          title: timezone
          type: string
        crash_reporting:
          type: boolean
          title: crash_reporting
          nullable: true
        usage_collection:
          type: boolean
          title: usage_collection
          nullable: true
        birthday:
          title: birthday
          type: string
        sysloglevel:
          title: sysloglevel
          type: string
          enum:
            - F_EMERG
            - F_ALERT
            - F_CRIT
            - F_ERR
            - F_WARNING
            - F_NOTICE
            - F_INFO
            - F_DEBUG
        syslogserver:
          title: syslogserver
          type: string
        ui_certificate:
          type: integer
          title: ui_certificate
          description: >-
            `ui_certificate` is used to enable HTTPS access to the system. If
            `ui_certificate` is not configured on boot,

            it is automatically created by the system.
          nullable: true
      additionalProperties: false
      title: system_general_entry
    system_general_ui_restart_0:
      type: integer
      title: delay
      default: 3
    system_ntpserver_create_0:
      type: object
      properties:
        address:
          title: address
          type: string
          description: "`address` specifies the hostname/IP address of the NTP server."
        burst:
          type: boolean
          title: burst
          default: false
          description: >-
            `burst` when enabled makes sure that if server is reachable, sends
            a burst of eight packets instead of one.

            This is designed to improve timekeeping quality with the server command.
        iburst:
          type: boolean
          title: iburst
          default: true
          description: "`iburst` when enabled speeds up the initial synchronization,
            taking seconds rather than minutes."
        prefer:
          type: boolean
          title: prefer
          default: false
          description: >-
            `prefer` marks the specified server as preferred. When all other
            things are equal, this host is chosen

            for synchronization acquisition with the server command. It is recommended that they be used for servers with

            time monitoring hardware.
        minpoll:
          type: integer
          title: minpoll
          default: 6
          description: >-
            `minpoll` is minimum polling time in seconds. It must be a power of
            2 and less than `maxpoll`.

            `maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`.
        maxpoll:
          type: integer
          title: maxpoll
          default: 10
          description: >-
            `minpoll` is minimum polling time in seconds. It must be a power of
            2 and less than `maxpoll`.

            `maxpoll` is maximum polling time in seconds. It must be a power of 2 and greater than `minpoll`.
        force:
          type: boolean
          title: force
      additionalProperties: false
      title: ntp_create
    systemdataset_update_0:
      type: object
      properties:
        pool:
          title: pool
          type: string
          description: "`pool` is the name of a valid pool configured in the system which
            will be used to host the system dataset."
          nullable: true
        pool_exclude:
          title: pool_exclude
          type: string
          nullable: true
        syslog:
          type: boolean
          title: syslog
      additionalProperties: false
      title: sysdataset_update
    tftp_update_0:
      type: object
      properties:
        newfiles:
          type: boolean
          title: newfiles
          description: "`newfiles` when set enables network devices to send files to the
            system."
        host:
          title: host
          type: string
        port:
          type: integer
          title: port
        options:
          title: options
          type: string
        umask:
          title: umask
          type: string
        username:
          title: username
          type: string
        directory:
          title: directory
          type: string
      additionalProperties: false
      title: tftp_entry
    truecommand_update_0:
      type: object
      properties:
        enabled:
          type: boolean
          title: enabled
        api_key:
          title: api_key
          type: string
          nullable: true
      additionalProperties: false
      title: truecommand_update
    truenas_set_production_0:
      type: boolean
      title: production
    truenas_set_production_1:
      type: boolean
      title: attach_debug
      default: false
    truenas_set_production:
      type: object
      properties:
        production:
          $ref: "#/components/schemas/truenas_set_production_0"
        attach_debug:
          $ref: "#/components/schemas/truenas_set_production_1"
    truenas_update_customer_information_0:
      type: object
      properties:
        company:
          title: company
          type: string
        administrative_user:
          type: object
          properties:
            first_name:
              title: first_name
              type: string
            last_name:
              title: last_name
              type: string
            title:
              title: title
              type: string
            office_phone:
              title: office_phone
              type: string
            mobile_phone:
              title: mobile_phone
              type: string
            primary_email:
              title: primary_email
              type: string
            secondary_email:
              title: secondary_email
              type: string
            address:
              title: address
              type: string
            city:
              title: city
              type: string
            state:
              title: state
              type: string
            zip:
              title: zip
              type: string
            country:
              title: country
              type: string
          additionalProperties: false
          title: administrative_user
        technical_user:
          type: object
          properties:
            first_name:
              title: first_name
              type: string
            last_name:
              title: last_name
              type: string
            title:
              title: title
              type: string
            office_phone:
              title: office_phone
              type: string
            mobile_phone:
              title: mobile_phone
              type: string
            primary_email:
              title: primary_email
              type: string
            secondary_email:
              title: secondary_email
              type: string
            address:
              title: address
              type: string
            city:
              title: city
              type: string
            state:
              title: state
              type: string
            zip:
              title: zip
              type: string
            country:
              title: country
              type: string
          additionalProperties: false
          title: technical_user
        reseller:
          type: object
          properties:
            company:
              title: company
              type: string
            first_name:
              title: first_name
              type: string
            last_name:
              title: last_name
              type: string
            title:
              title: title
              type: string
            office_phone:
              title: office_phone
              type: string
            mobile_phone:
              title: mobile_phone
              type: string
          additionalProperties: false
          title: reseller
        physical_location:
          type: object
          properties:
            address:
              title: address
              type: string
            city:
              title: city
              type: string
            state:
              title: state
              type: string
            zip:
              title: zip
              type: string
            country:
              title: country
              type: string
            contact_name:
              title: contact_name
              type: string
            contact_phone_number:
              title: contact_phone_number
              type: string
            contact_email:
              title: contact_email
              type: string
          additionalProperties: false
          title: physical_location
        primary_use_case:
          title: primary_use_case
          type: string
        other_primary_use_case:
          title: other_primary_use_case
          type: string
      additionalProperties: false
      title: customer_information_update
    tunable_create_0:
      type: object
      properties:
        var:
          title: var
          type: string
          description: "`var` represents name of the sysctl/loader/rc variable."
        value:
          title: value
          type: string
        type:
          title: type
          type: string
          enum:
            - SYSCTL
        comment:
          title: comment
          type: string
        enabled:
          type: boolean
          title: enabled
          default: true
      additionalProperties: false
      title: tunable_create
    update_check_available_0:
      type: object
      properties:
        train:
          title: train
          type: string
      additionalProperties: false
      title: update-check-available
    update_file_0:
      type: object
      properties:
        destination:
          title: destination
          type: string
          nullable: true
      additionalProperties: false
      title: updatefile
    update_get_pending_0:
      title: path
      default: null
      type: string
      nullable: true
    update_manual_0:
      title: path
      type: string
    update_manual_1:
      type: object
      properties:
        cleanup:
          type: boolean
          title: cleanup
          default: true
      additionalProperties: false
      title: options
    update_manual:
      type: object
      properties:
        path:
          $ref: "#/components/schemas/update_manual_0"
        options:
          $ref: "#/components/schemas/update_manual_1"
    update_set_auto_download_0:
      type: boolean
      title: autocheck
    update_set_train_0:
      title: train
      type: string
    update_update_0:
      type: object
      properties:
        train:
          title: train
          type: string
        reboot:
          type: boolean
          title: reboot
          default: false
      additionalProperties: false
      title: update
    ups_update_0:
      type: object
      properties:
        powerdown:
          type: boolean
          title: powerdown
          description: "`powerdown` when enabled, sets UPS to power off after shutting
            down the system."
        rmonitor:
          type: boolean
          title: rmonitor
        nocommwarntime:
          type: integer
          title: nocommwarntime
          description: >-
            `nocommwarntime` is a value in seconds which makes UPS Service wait
            the specified seconds before alerting that

            the Service cannot reach configured UPS.
          nullable: true
        remoteport:
          type: integer
          title: remoteport
        shutdowntimer:
          type: integer
          title: shutdowntimer
          description: >-
            `shutdowntimer` is a value in seconds which tells the Service to
            wait specified seconds for the UPS before

            initiating a shutdown. This only applies when `shutdown` is set to "BATT".
        hostsync:
          type: integer
          title: hostsync
        description:
          title: description
          type: string
        driver:
          title: driver
          type: string
        extrausers:
          title: extrausers
          type: string
        identifier:
          title: identifier
          type: string
        mode:
          title: mode
          type: string
          enum:
            - MASTER
            - SLAVE
        monpwd:
          title: monpwd
          type: string
        monuser:
          title: monuser
          type: string
        options:
          title: options
          type: string
        optionsupsd:
          title: optionsupsd
          type: string
        port:
          title: port
          type: string
        remotehost:
          title: remotehost
          type: string
        shutdown:
          title: shutdown
          type: string
          enum:
            - LOWBATT
            - BATT
          description: >-
            `shutdowntimer` is a value in seconds which tells the Service to
            wait specified seconds for the UPS before

            initiating a shutdown. This only applies when `shutdown` is set to "BATT".
        shutdowncmd:
          title: shutdowncmd
          type: string
          nullable: true
      additionalProperties: false
      title: ups_entry
    user_create_0:
      type: object
      properties:
        uid:
          type: integer
          title: uid
          description: If `uid` is not provided it is automatically filled with the next
            one available.
        username:
          title: username
          type: string
        group:
          type: integer
          title: group
          description: "`group` is required if `group_create` is false."
        group_create:
          type: boolean
          title: group_create
          default: false
          description: "`group` is required if `group_create` is false."
        home:
          title: home
          default: /nonexistent
          type: string
        home_mode:
          title: home_mode
          default: "755"
          type: string
        shell:
          title: shell
          default: /usr/bin/zsh
          type: string
          description: Available choices for `shell` can be retrieved with
            `user.shell_choices`.
        full_name:
          title: full_name
          type: string
        email:
          title: email
          default: null
          type: string
          nullable: true
        password:
          title: password
          type: string
          description: "`password` is required if `password_disabled` is false."
        password_disabled:
          type: boolean
          title: password_disabled
          default: false
          description: "`password` is required if `password_disabled` is false."
        locked:
          type: boolean
          title: locked
          default: false
        microsoft_account:
          type: boolean
          title: microsoft_account
          default: false
        smb:
          type: boolean
          title: smb
          default: true
        sudo:
          type: boolean
          title: sudo
          default: false
        sudo_nopasswd:
          type: boolean
          title: sudo_nopasswd
          default: false
        sudo_commands:
          title: sudo_commands
          default: []
          type: array
          items:
            title: command
            type: string
        sshpubkey:
          title: sshpubkey
          type: string
          nullable: true
        groups:
          title: groups
          default: []
          type: array
          items: {}
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
          description: "`attributes` is a general-purpose object for storing arbitrary
            user information."
      additionalProperties: false
      title: user_create
    user_get_user_obj_0:
      type: object
      properties:
        username:
          title: username
          default: null
          type: string
        uid:
          type: integer
          title: uid
          default: null
        get_groups:
          type: boolean
          title: get_groups
          default: false
      additionalProperties: false
      title: get_user_obj
    user_shell_choices_0:
      type: integer
      title: user_id
      default: null
      nullable: true
    vm_create_0:
      type: object
      properties:
        cpu_mode:
          title: cpu_mode
          default: CUSTOM
          type: string
          enum:
            - CUSTOM
            - HOST-MODEL
            - HOST-PASSTHROUGH
        cpu_model:
          title: cpu_model
          default: null
          type: string
          nullable: true
        name:
          title: name
          type: string
        description:
          title: description
          type: string
        vcpus:
          type: integer
          title: vcpus
          default: 1
          description: >-
            Maximum of 16 guest virtual CPUs are allowed. By default, every
            virtual CPU is configured as a

            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.

            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`

            specifies number of threads per core.
        cores:
          type: integer
          title: cores
          default: 1
          description: >-
            Maximum of 16 guest virtual CPUs are allowed. By default, every
            virtual CPU is configured as a

            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.

            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`

            specifies number of threads per core.
        threads:
          type: integer
          title: threads
          default: 1
          description: >-
            Maximum of 16 guest virtual CPUs are allowed. By default, every
            virtual CPU is configured as a

            separate package. Multiple cores can be configured per CPU by specifying `cores` attributes.

            `vcpus` specifies total number of CPU sockets. `cores` specifies number of cores per socket. `threads`

            specifies number of threads per core.
        memory:
          type: integer
          title: memory
        bootloader:
          title: bootloader
          default: UEFI
          type: string
          enum:
            - UEFI
            - UEFI_CSM
        devices:
          title: devices
          default: []
          type: array
          items:
            type: object
            properties:
              dtype:
                title: dtype
                type: string
                enum:
                  - NIC
                  - DISK
                  - CDROM
                  - PCI
                  - DISPLAY
                  - RAW
              attributes:
                type: object
                properties: {}
                additionalProperties: true
                title: attributes
              order:
                title: order
                default: null
                nullable: true
                type: integer
            additionalProperties: false
            title: vmdevice_create
          description: >-
            `devices` is a list of virtualized hardware to add to the newly
            created Virtual Machine.

            Failure to attach a device destroys the VM and any resources allocated by the VM devices.
        autostart:
          type: boolean
          title: autostart
          default: true
        hide_from_msr:
          type: boolean
          title: hide_from_msr
          default: false
          description: >-
            `hide_from_msr` is a boolean which when set will hide the KVM
            hypervisor from standard MSR based discovery and

            is useful to enable when doing GPU passthrough.
        ensure_display_device:
          type: boolean
          title: ensure_display_device
          default: true
          description: >-
            `ensure_display_device` when set ( the default ) will ensure that
            the guest always has access to a video device.

            For headless installations like ubuntu server this is required for the guest to operate properly. However

            for cases where consumer would like to use GPU passthrough and does not want a display device added should set

            this to `false`.
        time:
          title: time
          default: LOCAL
          type: string
          enum:
            - LOCAL
            - UTC
        shutdown_timeout:
          type: integer
          title: shutdown_timeout
          default: 90
          description: >-
            `shutdown_timeout` indicates the time in seconds the system waits
            for the VM to cleanly shutdown. During system

            shutdown, if the VM hasn't exited after a hardware shutdown signal has been sent by the system within

            `shutdown_timeout` seconds, system initiates poweroff for the VM to stop it.
        arch_type:
          title: arch_type
          default: null
          type: string
          description: >-
            `arch_type` refers to architecture type and can be specified for
            the guest. By default the value is `null` and

            system in this case will choose a reasonable default based on host.

            `machine_type` refers to machine type of the guest based on the architecture type selected with `arch_type`.

            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`

            configuration.
          nullable: true
        machine_type:
          title: machine_type
          default: null
          type: string
          description: >-
            `machine_type` refers to machine type of the guest based on the
            architecture type selected with `arch_type`.

            By default the value is `null` and system in this case will choose a reasonable default based on `arch_type`

            configuration.
          nullable: true
        uuid:
          title: uuid
          default: null
          type: string
          nullable: true
      additionalProperties: false
      title: vm_create
    vm_get_available_memory_0:
      type: boolean
      title: overcommit
      default: false
      description: >-
        If `overcommit` is true only the current used memory of running VMs
        will be accounted for.

        If false all memory (including unused) of runnings VMs will be accounted for.
    vm_get_console_0:
      type: integer
      title: id
    vm_get_display_devices_0:
      type: integer
      title: id
    vm_get_memory_usage_0:
      type: integer
      title: vm_id
    vm_device_create_0:
      type: object
      properties:
        dtype:
          title: dtype
          type: string
          enum:
            - NIC
            - DISK
            - CDROM
            - PCI
            - DISPLAY
            - RAW
          description: >-
            If `dtype` is the `RAW` type and a new raw file is to be created,
            `attributes.exists` will be passed as false.

            This means the API handles creating the raw file and raises the appropriate exception if file creation fails.
        vm:
          type: integer
          title: vm
          description: Create a new device for the VM of id `vm`.
        attributes:
          type: object
          properties: {}
          additionalProperties: true
          title: attributes
        order:
          type: integer
          title: order
          default: null
          nullable: true
      additionalProperties: false
      title: vmdevice_create
    vm_device_passthrough_device_0:
      title: device
      type: string
    vmware_create_0:
      type: object
      properties:
        datastore:
          title: datastore
          type: string
        filesystem:
          title: filesystem
          type: string
        hostname:
          title: hostname
          type: string
          description: >-
            `hostname` is a valid IP address / hostname of a VMWare host. When
            clustering, this is the vCenter server for

            the cluster.
        password:
          title: password
          type: string
          description: "`username` and `password` are the credentials used to authorize
            access to the VMWare host."
        username:
          title: username
          type: string
          description: "`username` and `password` are the credentials used to authorize
            access to the VMWare host."
      additionalProperties: false
      title: vmware_create
    vmware_dataset_has_vms_0:
      title: dataset
      type: string
    vmware_dataset_has_vms_1:
      type: boolean
      title: recursive
    vmware_dataset_has_vms:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/vmware_dataset_has_vms_0"
        recursive:
          $ref: "#/components/schemas/vmware_dataset_has_vms_1"
    vmware_get_datastores_0:
      type: object
      properties:
        hostname:
          title: hostname
          type: string
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      additionalProperties: false
      title: vmware-creds
    vmware_get_virtual_machines_0:
      type: integer
      title: pk
    vmware_match_datastores_with_datasets_0:
      type: object
      properties:
        hostname:
          title: hostname
          type: string
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      additionalProperties: false
      title: vmware-creds
    webdav_update_0:
      type: object
      properties:
        protocol:
          title: protocol
          type: string
          enum:
            - HTTP
            - HTTPS
            - HTTPHTTPS
          description: >-
            `protocol` specifies which protocol should be used for connecting
            to Webdav Serivce. Value of "HTTPHTTPS"

            allows both HTTP and HTTPS connections to the share.
        tcpport:
          type: integer
          title: tcpport
        tcpportssl:
          type: integer
          title: tcpportssl
        password:
          title: password
          type: string
        htauth:
          title: htauth
          type: string
          enum:
            - NONE
            - BASIC
            - DIGEST
        certssl:
          type: integer
          title: certssl
          description: >-
            `certssl` is a valid id of a certificate configured in the system.
            This is required if HTTPS connection is

            desired with Webdave Service.
          nullable: true
      additionalProperties: false
      title: webdav_entry
    webui_image_create_0:
      type: object
      properties:
        identifier:
          title: identifier
          type: string
      additionalProperties: false
      title: options
    zfs_snapshot_create_0:
      type: object
      properties:
        dataset:
          title: dataset
          type: string
        name:
          title: name
          type: string
        naming_schema:
          title: naming_schema
          type: string
        recursive:
          type: boolean
          title: recursive
          default: false
        exclude:
          title: exclude
          default: []
          type: array
          items:
            title: dataset
            type: string
        vmware_sync:
          type: boolean
          title: vmware_sync
          default: false
        properties:
          type: object
          properties: {}
          additionalProperties: true
          title: properties
      additionalProperties: false
      title: snapshot_create
    zfs_snapshot_clone_0:
      type: object
      properties:
        snapshot:
          title: snapshot
          type: string
        dataset_dst:
          title: dataset_dst
          type: string
        dataset_properties:
          type: object
          properties: {}
          additionalProperties: true
          title: dataset_properties
      additionalProperties: false
      title: snapshot_clone
    zfs_snapshot_remove_0:
      type: object
      properties:
        dataset:
          title: dataset
          type: string
        name:
          title: name
          type: string
        defer_delete:
          type: boolean
          title: defer_delete
      additionalProperties: false
      title: snapshot_remove
    zfs_snapshot_rollback_0:
      title: id
      type: string
      description: Rollback to a given snapshot `id`.
    zfs_snapshot_rollback_1:
      type: object
      properties:
        recursive:
          type: boolean
          title: recursive
          default: false
          description: "`options.recursive_clones` is just like `recursive` but will also
            destroy any clones."
        recursive_clones:
          type: boolean
          title: recursive_clones
          default: false
        force:
          type: boolean
          title: force
          default: false
        recursive_rollback:
          type: boolean
          title: recursive_rollback
          default: false
      additionalProperties: false
      title: options
    zfs_snapshot_rollback:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/zfs_snapshot_rollback_0"
        options:
          $ref: "#/components/schemas/zfs_snapshot_rollback_1"
  responses:
    NotFound:
      description: Endpoint not found
    Unauthorized:
      description: No authorization for this endpoint
    Success:
      description: Operation succeeded
  securitySchemes:
    basic:
      type: http
      scheme: basic
security:
  - basic: []
